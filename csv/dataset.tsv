project	pr_number	id	key	url	bodyText	RQ1- Scope	RQ1 - Understandability?	selected-sample	RQ2 - Understandability smells	RQ2 - Where	RQ3 - Reaction	RQ4 - Improvement	RQ5 - Patch Merged	RQ5 - Patch reverted in the pull request	RQ5 - Patch in the last version of the file	RQ5 - Patch reverted in the codebase history	RQ6 - Spotbugs	RQ6 - PMD	RQ6 - SonarQube	RQ6 - Checkstyle
akvo/akvo-flow	3658	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4ODM4OA==	3	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/akvo_akvo-flow/pr_3658.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4ODM4OA==	If we follow the current behaviour of the app, it will send requests to the backend until the returned results == 0. So take the case of 34 assigned datapoints.  First query = 30 datapoints and cursor=30 second query = 4 datapoints and cursor=(4 or 34?) third query = 0 datapoints and cursor=(?)	Code	No	FALSE												
akvo/akvo-flow	3701	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0MTIzMQ==	1	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/akvo_akvo-flow/pr_3701.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0MTIzMQ==	this complex one can be done with new ArrayList(sourceToCopiedGroupMap.values()) ? not sure the value of stream to just get the values	Code	No	FALSE												
akvo/akvo-flow	3532	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1ODU2OA==	4	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/akvo_akvo-flow/pr_3532.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1ODU2OA==	We can change this to Collections.singletonList(0L);	Code	Yes	FALSE												
akvo/akvo-flow	3673	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NjY4Mw==	2	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/akvo_akvo-flow/pr_3673.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NjY4Mw==	Use ds.get() if we know the id of the entity we want	Code	Discard	FALSE												
akvo/akvo-flow	3474	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMjg2NA==	5	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/akvo_akvo-flow/pr_3474.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzgzMjg2NA==	Why is this important for this test?	Code	No	FALSE												
alibaba/nacos	2926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMTMwOQ==	11	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_2926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMTMwOQ==	remove extra blank line	Code	Yes	FALSE												
alibaba/nacos	2926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMTQwMQ==	12	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_2926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMTQwMQ==	remove extra blank line	Code	Yes	FALSE												
alibaba/nacos	3288	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2Mzk1OQ==	8	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_3288.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2Mzk1OQ==	Why skip MissingJavadocMethod check？	Code	No	FALSE												
alibaba/nacos	3288	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2NTE0Nw==	9	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_3288.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2NTE0Nw==	can this pass checkstyle？	Javadoc	Yes	FALSE												
alibaba/nacos	2304	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIzMDU3MQ==	14	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_2304.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIzMDU3MQ==	Plz try not to have duplicate code, it will be difficult to maintain	Code	Yes	FALSE												
alibaba/nacos	3773	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2MzE4Nw==	6	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_3773.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA2MzE4Nw==	Please do not change the code style.	Code	Yes	FALSE												
alibaba/nacos	3104	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4Mzg0MQ==	10	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_3104.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk4Mzg0MQ==	Do not change the Indentation.	Code	Yes	FALSE												
alibaba/nacos	2926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMTg2Nw==	13	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_2926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzgyMTg2Nw==	remove extra blank line	Code	Yes	FALSE												
alibaba/nacos	3763	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTAwMQ==	7	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_nacos/pr_3763.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MTAwMQ==	In this part, I suggest that you refactor like following: if (!result.ok()) {     Loggers.RAFT.warn(...);     return; }  the other codes do not changed except remove `return 0`	Code	Yes	FALSE												
alibaba/sentinel	1783	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1ODI5Ng==	16	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1783.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1ODI5Ng==	Maybe the variable in logging message should be updated now.	Code	No	FALSE												
alibaba/sentinel	1729	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3NzI1OQ==	17	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1729.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3NzI1OQ==	[INFO] --- maven-pmd-plugin:3.8:check (default) @ sentinel-api-gateway-adapter-common --- [INFO] PMD Failure: com.alibaba.csp.sentinel.adapter.gateway.common.rule.GatewayRuleManager$GatewayRulePropertyListener:232 Rule:NeedBraceRule Priority:1 if语句缺少大括号.	Code	Yes	FALSE												
alibaba/sentinel	1383	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1NzYxMQ==	20	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1383.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1NzYxMQ==	Useless?	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		NONE	UnusedPrivateMethod	Unused "private" methods should be removed	NONE
alibaba/sentinel	1383	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2NDQ4Ng==	21	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1383.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2NDQ4Ng==	Maybe len=0 should also be added here for more obvious.	Code	No	FALSE												
alibaba/sentinel	1555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMTU1Nw==	19	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1555.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMTU1Nw==	Maybe parseOrigin is better?	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
alibaba/sentinel	1631	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3NDk1Mg==	18	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1631.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3NDk1Mg==	Usually, the getXxxMap() operation should not be public exported.	Code	No	FALSE												
alibaba/sentinel	1896	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ4ODI2NA==	15	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alibaba_sentinel/pr_1896.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ4ODI2NA==	Maybe HTTPS support is not implemented in netty-http module.	Code	No	FALSE												
all-of-us/workbench	3636	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNzQxOQ==	24	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3636.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyNzQxOQ==	Is there any chance that cohort could be null? Should we also handle nullPointer?	Code	No	FALSE												
all-of-us/workbench	3040	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MjI4Mw==	30	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3040.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MjI4Mw==	Yeah we should definitely have some cron cleanup for orphans here. Do you mind filing a ticket for later? For example, if this request times out (but actually succeeds on the backend), we wind up with a defunct project attached to the user's billing account.	Code	No	FALSE												
all-of-us/workbench	3016	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NTA1NQ==	31	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3016.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NTA1NQ==	nit: The name of the function doesn't suggest to me the type. Maybe createClaimsJwt()?	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		None	NONE	NONE	NONE
all-of-us/workbench	3624	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyODc2Nw==	26	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3624.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyODc2Nw==	what if these objects don't have a common ID or don't have a common event time? It seems that this is an important assumption/requirement for your use case, so maybe it should be enforced along with the non-empty condition.	Javadoc	No	FALSE												
all-of-us/workbench	4244	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk0MTQ1Ng==	22	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_4244.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk0MTQ1Ng==	opt: generally I think it's more readable to put the primary param first, followed by any optional / nullable / less-important params	Code	Yes	FALSE												
all-of-us/workbench	3333	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzMDYyMA==	27	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3333.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzMDYyMA==	What should be defined by a setter?	Comments	Yes	FALSE												
all-of-us/workbench	3634	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1Mzg4Ng==	25	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3634.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1Mzg4Ng==	Good catch, thank you!  Could you add a test for this if you haven't already?	Comments	No	FALSE												
all-of-us/workbench	3108	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0NTA3Mw==	29	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3108.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0NTA3Mw==	flow issue again	Comments	No	FALSE												
all-of-us/workbench	3879	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2OTY5NQ==	23	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3879.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU2OTY5NQ==	Should we create a stringToDate method to use here?	Code	No	FALSE												
all-of-us/workbench	3139	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MzA0Mw==	28	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_3139.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MzA0Mw==	[no action] Not saying you should do it here, but one thing I've started doing in PRs is trying to Autowire a service like this when I find myself having to update constructors in random, unrelated places. It does have a fully-expected side effect of blowing up the scope of a PR though... :)	Code	No	FALSE												
all-of-us/workbench	2992	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3NjQ3NA==	32	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/all-of-us_workbench/pr_2992.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3NjQ3NA==	I'd externalize the prefix all-of-us-. I don't know from this statement what its scope is. Also, one pet peeve I have is that if we're using hyphens to delineate subparts of an identifier, then it should be allofus-. Likely way too late.	Code	No	FALSE												
alluxio/alluxio	10718	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzMzk3NA==	39	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_10718.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzMzk3NA==	I think our convention is like:                         Suggested change                                                                                                  private static final String FILE_SIZE_OPTION = "hive.file.minsize";                                                  private static final String FILE_SIZE_OPTION = "hive.file.size.min";	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Change magic value to adhere to project standards	Yes		Yes		NONE	NONE	NONE	NONE
alluxio/alluxio	11112	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA5OTE0MA==	36	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_11112.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA5OTE0MA==	Do we have to get rid of this?	Code	Yes	FALSE												
alluxio/alluxio	10963	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzcyOQ==	37	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_10963.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzcyOQ==	should all integration tests just use a shorter refresh time, like 20ms?	Code	No	FALSE												
alluxio/alluxio	10963	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzg4OQ==	38	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_10963.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczNzg4OQ==	if the test config has a faster time, this doesn't have to be set, right?	Code	No	FALSE												
alluxio/alluxio	11377	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Nzg5OQ==	35	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_11377.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0Nzg5OQ==	what's the reason for using = here?	Code	No	FALSE												
alluxio/alluxio	12579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcyMzM3Nw==	33	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_12579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDcyMzM3Nw==	wrong indent?	Code	Yes	FALSE												
alluxio/alluxio	11535	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjQwMQ==	34	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/alluxio_alluxio/pr_11535.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExMjQwMQ==	This could block for a long time, and thus block other RPCs (including heartbeats) for a long time?	Code	No	FALSE												
ankidroid/anki-android	6550	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4ODE4MQ==	41	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6550.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4ODE4MQ==	might as well remove rather than commenting out	Code	Yes	TRUE	Unnecessary Code	Call	Not Accepted									
ankidroid/anki-android	6138	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTgzNg==	44	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6138.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MTgzNg==	Nit: these lines are a little too long, could you extract remoteContext.getResources() and remoteContext.getResources().getConfiguration() via Ctrl+Alt+V (extract variable) as it's used by both branches.	Code	Yes	FALSE												
ankidroid/anki-android	6138	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODM0MQ==	45	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6138.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE4ODM0MQ==	(optional) - It would be useful to add a couple of unit tests here (if possible - cultures can be a pain) as the functionality has changed. Mostly to document the new intent of the code	Code	Yes	FALSE												
ankidroid/anki-android	6766	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMTI4Ng==	40	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6766.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMTI4Ng==	I'd prefer to just keep the (unfriendly) current names as well - as sort of an ecosystem compatibility thing. The names attached to the data are a bit like an API and better to pass that through then make what is essentially a translation layer. So this would be ankiGetCardMod, and other getCardId etc Avoiding naming confusion+education-need+problems and referring upstream is the desired outcome for me with that stance - upstream docs will remain relevant for reference	Code	Yes	FALSE												
ankidroid/anki-android	6362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzA2MQ==	42	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzA2MQ==	Would be nice to Timber.d the count	Code	No	FALSE												
ankidroid/anki-android	6004	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3ODIxMg==	46	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6004.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ3ODIxMg==	if it's mildly unexpected but fine to continue without, should be Timber.w I think. Unimportant in the grand scheme, but just want to either have a good debate on or harmonize on log levels. I consider 'e' to be things where you need to bomb out of an activity entirely, almost completely unrecoverable but not quite a crash.	Other	Yes	FALSE												
ankidroid/anki-android	6233	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1ODAwOQ==	43	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ankidroid_anki-android/pr_6233.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1ODAwOQ==	Could you change the title of the PR if there's a functional change mixed in	Code	No	FALSE												
antennapod/antennapod	3975	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTcyNQ==	51	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_3975.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTcyNQ==	The UI should not be responsible for doing playback actions. If the user closes the UI, episodes should still get skipped. When adding the skipping code like this and swiping out the player during playback, this is no longer the case. Additionally, this introduces code duplication. This should be done centrally, somewhere in the PlaybackService.	Code	No	FALSE												
antennapod/antennapod	4289	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDAwNw==	49	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_4289.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDAwNw==	Why is this needed? I do not think that the section divider should stay selected after clicking.	Code	No	FALSE												
antennapod/antennapod	3745	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgzODA0OA==	53	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_3745.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgzODA0OA==	Be careful. This is not a preference but an option in a dialog.	Code	No	FALSE												
antennapod/antennapod	4486	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5OTAyNg==	47	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_4486.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg5OTAyNg==	I would also remove the mute part. Could be confusing otherwise.	Code	No	FALSE												
antennapod/antennapod	4058	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxODU0OA==	50	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_4058.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcxODU0OA==	Sorry for taking so long to respond. If you use addQueueItem(this, false, false, ((FeedMedia) playable).getId()) instead, it does not need to do the database query that retrieves the item. By the way, this also fixes #3277 :) 👍	Code	No	FALSE												
antennapod/antennapod	3975	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwODQyNw==	52	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_3975.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwODQyNw==	This is no longer needed, I think.	Code	Discard	FALSE												
antennapod/antennapod	4401	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3NjE3MA==	48	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/antennapod_antennapod/pr_4401.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3NjE3MA==	Is there any class where constants like this one are saved, I did not find an appropriate one. Furthermore I changed the duration to 750ms which is the time for one repetition.	Code	Yes	FALSE												
anuken/mindustry	3791	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzMTU4OQ==	54	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/anuken_mindustry/pr_3791.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkzMTU4OQ==	This should check for a double-tap. If I click a sector once, then click it once again later, it should not send me there.	Code	No	FALSE												
anuken/mindustry	2863	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyODY2NA==	55	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/anuken_mindustry/pr_2863.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgyODY2NA==	Pitch should not be random.	Code	No	FALSE												
anuken/mindustry	2089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNzA5NQ==	56	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/anuken_mindustry/pr_2089.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNzA5NQ==	Where is firstSchematic defined? This doesn't look like it will compile.	Code	No	FALSE												
apache/accumulo	1818	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU0MTYwMQ==	57	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_accumulo/pr_1818.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU0MTYwMQ==	We should avoid using Hadoop's Daemon. I doubt that is stable public API. Even if it is, we don't want to increase our dependency on Hadoop library code for this. It should be simple to construct the object assigned to a local variable, set it to daemon, and start it in 3 statements, rather than rely on a the Hadoop library.	Code	No	FALSE												
apache/accumulo	1818	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU4NDEyNw==	58	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_accumulo/pr_1818.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU4NDEyNw==	With a lambda, this would be slightly shorter:       Threads.createThread("Halt Thread", () -> {         sleepUninterruptibly(100, TimeUnit.MILLISECONDS);         Runtime.getRuntime().halt(status);       }).start();	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace anonymous inner class by lambda	Yes		Yes		NONE	NONE	Anonymous inner classes containing only one method should become lambdas	NONE
apache/accumulo	1653	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODk5Ng==	59	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_accumulo/pr_1653.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU1ODk5Ng==	This could use a small comment above it to explain what situation it is checking for.	Comments	Yes	FALSE												
apache/accumulo	1480	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2Njg3Nw==	62	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_accumulo/pr_1480.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2Njg3Nw==	Should describe what this class is doing.	Javadoc	Yes	FALSE												
apache/accumulo	1558	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTEyMg==	61	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_accumulo/pr_1558.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTEyMg==	What is the significance of depth 4? Could add to a comment.	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Conditional	Accepted	Add code comment to explain expression	Yes		Yes		NONE	NONE	NONE	NONE
apache/accumulo	1569	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMzU0OA==	60	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_accumulo/pr_1569.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMzU0OA==	Some of the deprecated properties have the following in their description.  I think this is nice for the generated documentation.                         Suggested change                                                                                                      "The number of threads to use when moving user files to bulk ingest "                                                      "This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest "	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Extend a string literal	Yes		Yes		NONE	NONE	NONE	NONE
apache/activemq-artemis	3025	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNDI1MQ==	67	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_activemq-artemis/pr_3025.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkwNDI1MQ==	After the reconnection, the deliveringCount should be equal to the prefetchSize.	Code	No	FALSE												
apache/activemq-artemis	3129	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM1ODA2OQ==	63	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_activemq-artemis/pr_3129.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM1ODA2OQ==	@gemmellr I saw an email from you asking about Strings defined here but I can't see the comment. (was it deleted?) I see your point ... I needed this as SimpleString at some point, and my code changes along the way in a way I don't need it any more.. thanks... ammended.	Code	No	FALSE												
apache/activemq-artemis	3129	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyNjYwNg==	64	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_activemq-artemis/pr_3129.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyNjYwNg==	Seems like this might be unused now that the loop it was in before is gone?	Code	Yes	FALSE												
apache/activemq-artemis	3063	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTY5Ng==	66	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_activemq-artemis/pr_3063.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTY5Ng==	I would encapsulate this logic in a separate method on a separate class to make it more readeable an d shorter ie translation from request to QueueConfiguration	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Extract method	Yes		Yes		NONE	ExcessiveMethodLength	NONE	MethodLength
apache/activemq-artemis	3129	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5OTgyOQ==	65	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_activemq-artemis/pr_3129.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI5OTgyOQ==	Couldn't we just define the String to begin with instead? Perhaps over-eager optimisation, but would some sort of fixed mapping/lookup for the already-known/'popular' cases (or just recently-seen ones) be preferable to calling this and concat'ing and substring'ing and replacing the same things repeatedly for each applicable message?	Code	No	FALSE												
apache/beam	12054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIwMTQ3Ng==	69	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_beam/pr_12054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIwMTQ3Ng==	Could we test extracting from a time that actually have a microsecond sub component, like '15;30:35.123456789'?	Code	No	FALSE												
apache/beam	11873	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNQ==	70	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_beam/pr_11873.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODUxNQ==	Minor suggestion:                         Suggested change                                                                                                      if (overriddenTransform.getNeedsAttributes() | overriddenTransform.getNeedsMessageId()) {                                                      if (overriddenTransform.getNeedsAttributes() || overriddenTransform.getNeedsMessageId()) {	Code	No	FALSE												
apache/beam	13161	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY2MjI4MA==	68	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_beam/pr_13161.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY2MjI4MA==	We can use for (int index = 0 ; index < length; index++) to get ride of counter.	Code	Yes	FALSE												
apache/beam	10949	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0NTI3MA==	72	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_beam/pr_10949.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0NTI3MA==	For View.asIterable it makes the most sense to scan a random distance into the iterable. The most important use case is when you cannot read it all into a list, I think. Both cases are interesting: reading the whole iterable and reading just a prefix.	Code	No	FALSE												
apache/beam	11715	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg4NzU5Ng==	71	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_beam/pr_11715.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg4NzU5Ng==	Suggested change                                                                                                 * A special {@link OffsetRangeTracker} for tracking a growable offset range. The Long.MAX_VALUE is                                                 * used as end range to indicate the possibility of infinity.                                                 *                                                 * <p>A offset range is considered as growable when the end offset could grow(or change) during                                                 * execution time(e.g., Kafka backlog, appended file).                                                 * An {@link OffsetRangeTracker} for tracking a growable offset range. {@code Long.MAX_VALUE} is                                                 * used as end range to indicate the possibility of infinity.                                                 *                                                 * <p>An offset range is considered growable when the end offset could grow (or change) during                                                 * execution time (e.g., Kafka topic partition offset, appended file, ...).	Javadoc	Yes	FALSE												
apache/calcite	1896	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Mzg2Nw==	77	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_1896.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc0Mzg2Nw==	Why this change ?	Code	No	FALSE												
apache/calcite	2255	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUxNDk4OA==	73	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_2255.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUxNDk4OA==	Should this be moved outside of the loop?	Code	No	FALSE												
apache/calcite	1833	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0NTExMA==	79	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_1833.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ0NTExMA==	Is it documented anywhere?	Comments	Yes	FALSE												
apache/calcite	2039	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2OTQ2Mw==	74	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_2039.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2OTQ2Mw==	Thanks a lot to keep this String getDigest, which is heavily relied on in our internal code base.	Javadoc	No	FALSE												
apache/calcite	1983	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA4MDUzMw==	76	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_1983.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA4MDUzMw==	The type of condition can be RexNode rather than List.	Code	No	FALSE												
apache/calcite	1853	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NDkwMQ==	78	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_1853.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ5NDkwMQ==	You can remove this method.	Code	Discard	FALSE												
apache/calcite	2006	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjQzNA==	75	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_calcite/pr_2006.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc4MjQzNA==	Do we need to keep the keys order?	Code	No	FALSE												
apache/camel	3777	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0NTA3OA==	84	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3777.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ0NTA3OA==	This will read the entire stream into memory. Camel has a stream caching feature. Maybe we should revisit this later.	Code	No	FALSE												
apache/camel	3901	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzOTY4Ng==	82	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3901.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMzOTY4Ng==	I wonder if we should prefix it with grpc, eg grpcBindableServiceFactory	String value	Yes	FALSE												
apache/camel	3551	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMDAwOA==	86	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3551.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMDAwOA==	My IDE reports that publisher reports this could be null, does it make sense to check for nullity here?	Code	No	FALSE												
apache/camel	4614	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1MDA1NQ==	80	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_4614.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1MDA1NQ==	Can we avoid swagger imports, as we should ideally only use the datamodel from apicurio.	Code	Yes	FALSE												
apache/camel	3518	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODA3OA==	87	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3518.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTExODA3OA==	Can we use here primitiveinstead of the boxedInteger`?	Code	No	FALSE												
apache/camel	3705	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwNjQ0MQ==	85	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3705.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwNjQ0MQ==	I think you can replace autodetectParser with parser == null and eliminate the three-args constructor.	Code	Yes	TRUE	Complex, long, or inadequate logic	Parameter	Accepted	Replace the use of a parameter by an expression with another parameter	Yes		Yes		NONE	NONE	NONE	NONE
apache/camel	3467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyNjM0Mw==	89	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyNjM0Mw==	IMHO is getting confusing now among "channels", "channelList", "getListOfChannels", "getChannelsList". For me they all sound the same, wouldn't make sense to rethink of the namings here? IMHO it could be something like this: getChannels which returns channels getListOfChannels this theoretically could return channelList but now returns channels string without pwd which is a little bit confusing I guess.	Code	Yes	FALSE												
apache/camel	3897	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NTYwOQ==	83	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3897.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NTYwOQ==	Looks like it could be simplified: Reader reader = new BufferedReader(new InputStreamReader(minioObject, StandardCharsets.UTF_8));	Code	Yes	TRUE	Complex, long, or inadequate logic	Try-Catch	Accepted	Replace indirect expression in parameter by direct value	Yes		No	No	NONE	NONE	NONE	NONE
apache/camel	4359	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NTg1MA==	81	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_4359.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI2NTg1MA==	StringBuffer is here intentionally because it is mutable and ensures locks. As aggregate method can be called in many threads in parallel, you need to ensure locking in different way (synchronized block, ReentrantLock, ...) before changing this to StringBuilder, otherwise the output will be corrupted.	Code	No	FALSE												
apache/camel	3484	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4NTIxNw==	88	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel/pr_3484.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4NTIxNw==	I guess this could use String#replace instead of String#replaceAll to avoid the regex and therefore improve performance. (Not sure if this is relevent.)	Code	No	FALSE												
apache/camel-quarkus	1902	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxOTE4Mg==	90	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_1902.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxOTE4Mg==	Style tip: the last arg of ReflectiveClassBuildItem constructor is multiarg, so you could make it shorter by omitting the the array declaration (it would compile to exactly the same bytecode):                         Suggested change                                                                                                        return new ReflectiveClassBuildItem(false, false, new String[] {                                                                org.iq80.leveldb.impl.Iq80DBFactory.class.getName(),                                                                org.apache.camel.support.DefaultExchangeHolder.class.getName()                                                        });                                                        return new ReflectiveClassBuildItem(false, false,                                                                 org.iq80.leveldb.impl.Iq80DBFactory.class.getName(),                                                                org.apache.camel.support.DefaultExchangeHolder.class.getName());                                 Is org.apache.camel.support.DefaultExchangeHolder really necessary? IIRC, there was some discussion around this recently.	Code	Yes	FALSE												
apache/camel-quarkus	678	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk3MzI3Ng==	96	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_678.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk3MzI3Ng==	Same as above: BuildItems should not expose mutable collections because they are consumed from concurrent threads. Mutability does not seem to be required here. Making the properties immutable would simplify the reasoning about the code.	Code	Yes	FALSE												
apache/camel-quarkus	1050	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxNTAxMQ==	95	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_1050.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxNTAxMQ==	false, true is typically enough. Could you please check, unless you did already?	Code	No	FALSE												
apache/camel-quarkus	1070	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMjcyOA==	94	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_1070.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMjcyOA==	Nitpick: this should better be ...aws2	Code	No	FALSE												
apache/camel-quarkus	1542	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NDU0MA==	91	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_1542.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NDU0MA==	This won't work when the test is executed on the platform because there is only the test-jar available. No local filesystem. Could you plz load the file via classloader?	Code	No	FALSE												
apache/camel-quarkus	1462	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzgzOA==	93	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_1462.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzgzOA==	Does not look right either. Maybe this?                         Suggested change                                                                                                        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);                                                        this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);	Code	No	FALSE												
apache/camel-quarkus	1542	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NDk2NA==	92	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_camel-quarkus/pr_1542.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NDk2NA==	Same as above: could you plz load the file via class loader?	Code	No	FALSE												
apache/cloudstack	4004	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNDA2OQ==	100	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cloudstack/pr_4004.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNDA2OQ==	maybe give the 3 a constant with descriptive name	Code	Yes	FALSE												
apache/cloudstack	4307	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxMjA1MQ==	98	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cloudstack/pr_4307.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxMjA1MQ==	add since = "4.15"	Code	No	FALSE												
apache/cloudstack	4053	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY3Mjk1NQ==	99	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cloudstack/pr_4053.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY3Mjk1NQ==	please use ConfigKey<>s	Code	No	FALSE												
apache/cloudstack	3794	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNDkzNQ==	101	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cloudstack/pr_3794.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjMzNDkzNQ==	can you make this a method with a good descriptive name?	Code	Yes	FALSE												
apache/cloudstack	4524	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MDU3Ng==	97	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cloudstack/pr_4524.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA1MDU3Ng==	Would be more efficient to just remove the else block below entirely	Code	No	FALSE												
apache/cxf	680	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NzI1OA==	108	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_680.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0NzI1OA==	A bit more thoughts on that, the MicroProfileClientConfigurableImpl is created from CxfTypeSafeClientBuilder, which it turn is created from:  CDI: RestClientBean Non-CDI: CxfRestClientBuilderResolver  May be we could pass the instantiator through CxfTypeSafeClientBuilder? Fe RestClientBean could rely on CDI one while CxfRestClientBuilderResolver could use default. WDYT?	Code	No	FALSE												
apache/cxf	721	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgzOTk1Mw==	102	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_721.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgzOTk1Mw==	It seems like we have recurrent patterns:  name.replace('/', '.') slashes to periods (used many times) ASMHelper:periodToSlashes periods to slashes  We could extract those to org.apache.cxf.common.util.StringUtils (and actually drop one method from ASMHelper interface)	Code	No	FALSE												
apache/cxf	681	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2NTUyMw==	107	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_681.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2NTUyMw==	Why Optional here when maskSensitiveHelper is declared as final?	Code	No	FALSE												
apache/cxf	697	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwODA3Ng==	104	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_697.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEwODA3Ng==	Unfamiliar with this part, do you have insights about lastEntity vs entity?	Code	No	FALSE												
apache/cxf	695	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc2NDQxMw==	105	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_695.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc2NDQxMw==	Should you also check for isBeanConstrained and cache that?	Code	No	FALSE												
apache/cxf	632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxNTg5OQ==	109	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxNTg5OQ==	May be UncheckedIOException would be better replacement for IOException?	Code	No	FALSE												
apache/cxf	684	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTU1Mg==	106	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_684.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkzNTU1Mg==	Move into Netty subclass.	Code	No	FALSE												
apache/cxf	721	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2OTg0NA==	103	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_cxf/pr_721.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2OTg0NA==	I think we have to clearly distinguish the case when factory class exists and does not (createFactory). Could you please extract the logic of detecting the presence of factory class into dedicated method and modify addClass method to try to find the factory class first and fallback to createFactory if needed? We should also ensure that the factory class is suitable and could be used accordingly.	Code	No	FALSE												
apache/dolphinscheduler	4063	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3MjUwOA==	111	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_4063.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzM3MjUwOA==	If only shell type is supported, why use RadioParam	Code	No	FALSE												
apache/dolphinscheduler	4097	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc0NDMxMA==	110	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_4097.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc0NDMxMA==	i think we should judge the task status finished: success/failed/stop...	Code	No	FALSE												
apache/dolphinscheduler	2872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwNzc1Mw==	113	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_2872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkwNzc1Mw==	parseObject is hard to understand ,suggest add parseMap method ,refer to the following code TypeReference<HashMap<String, String>> typeRef  = new TypeReference<HashMap<String, String>>() {}; Map<String, String> map = mapper.readValue(jsonInput, typeRef);	Code	Yes	FALSE												
apache/dolphinscheduler	2872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5OTAxNw==	114	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_2872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5OTAxNw==	please change windows new line 'CR' to linux new line 'LF'	Code	No	FALSE												
apache/dolphinscheduler	2245	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA3NDQ2Ng==	116	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_2245.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA3NDQ2Ng==	need add license	Other	No	FALSE												
apache/dolphinscheduler	3481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA1NTAyOA==	112	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_3481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzA1NTAyOA==	return map==null?null: map.get("access_token")	Code	Yes	FALSE												
apache/dolphinscheduler	2872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5ODE5OQ==	115	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dolphinscheduler/pr_2872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5ODE5OQ==	It's better to rename JacksonSerialize to JsonSerializer	Code	Yes	TRUE	Bad identifier	Class	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
apache/druid	9819	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0OTg5Mw==	119	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_9819.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0OTg5Mw==	Should this method compute the lag instead of latestSequenceFromStream? This will modify the current behavior since there could be some difference between computed lag and actual lag as highestCurrentOffsets will be computed periodically. However, I think it would be fine since 1) the behavior of this method is consistent across Kafka and Kinesis and 2) the lag metric doesn't have to be very real time.	Code	No	FALSE												
apache/druid	9638	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAyMDY2MA==	121	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_9638.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAyMDY2MA==	errorBoundsStdDev != null ? ValueType.COMPLEX : ValueType.DOUBLE?	Code	No	FALSE												
apache/druid	9301	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAyMjI2Nw==	123	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_9301.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAyMjI2Nw==	Should use prefixAndClause.getValue().includesColumn(filteringColumn) — it's more semantically intentful and also the logic is slightly different.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace an expression by an alternative expression	Yes		No	No	NONE	NONE	NONE	NONE
apache/druid	10524	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5OTQ2Nw==	117	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_10524.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5OTQ2Nw==	wondering if this default value should be final constant instantiated at top of class?	Code	No	FALSE												
apache/druid	10208	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NDUyOA==	118	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_10208.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA5NDUyOA==	codeded -> coded	Javadoc	Yes	FALSE												
apache/druid	9644	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2NTgzMg==	120	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_9644.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM2NTgzMg==	Why not return ImmutableList.of(compactSegments); instead?	Code	Yes	FALSE												
apache/druid	9459	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NzA3Nw==	122	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_druid/pr_9459.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA2NzA3Nw==	nit: javadocs describing this method would be nice	Javadoc	Yes	FALSE												
apache/dubbo	5749	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIzNzY3NA==	124	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dubbo/pr_5749.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIzNzY3NA==	I only see this name change, but where do we use this value?	Code	Yes	FALSE												
apache/dubbo	5635	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxMzU4Nw==	125	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_dubbo/pr_5635.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxMzU4Nw==	I think you could get  consumerModel directly from invocation attributes	Code	Yes	TRUE	Complex, long, or inadequate logic	Variable	Accepted	Replace call to static method by instance method call	Yes		Yes		NONE	NONE	NONE	NONE
apache/fineract	1050	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyMjQ2Ng==	128	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_fineract/pr_1050.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyMjQ2Ng==	Don't add new commented out imports, but clean up	Code	Yes	FALSE												
apache/fineract	1123	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxNjE4MQ==	127	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_fineract/pr_1123.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxNjE4MQ==	lower-case y:                         Suggested change                                                                                                    public void addOrderBY(Object orderBy) {                                                    public void addOrderBy(Object orderBy) {	Code	Yes	FALSE												
apache/fineract	987	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM1MjU2Mg==	129	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_fineract/pr_987.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM1MjU2Mg==	Wouldn't this be better & clearer like this, instead: if ((isNoneOrCashOrUpfrontAccrualAccountingEnabledOnLoanProduct()     && isMultiDisburmentLoan() && getDisbursedLoanDisbursementDetails().size() == 1) || !isMultiDisburmentLoan()) {	Code	Yes	FALSE												
apache/fineract	906	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA==	130	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_fineract/pr_906.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA==	I suggest you using a logger but maybe @vorburger  or @awasum, @ptuomola or anyone else would have a different opinion as far as this is concerned. It's more a convention to use here, whether checked or unchecked exceptions.	Code	No	FALSE												
apache/fineract	807	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4NDM1Mw==	131	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_fineract/pr_807.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4NDM1Mw==	@ptuomola would you consider raising this change as a separate PR instead of as part of this one? Or we could try to make a real better fix, based on what you described in FINERACT-855...	Code	No	FALSE												
apache/fineract	1330	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyOTA4Mw==	126	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_fineract/pr_1330.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUyOTA4Mw==	Remove this if you're not planning to use it.	Comments	Yes	FALSE												
apache/flink	14377	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY5ODA0Mw==	132	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_14377.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY5ODA0Mw==	This ignores the exception from fail("exception expected"), we should catch the specific exception ValidationException here.	Code	No	FALSE												
apache/flink	11020	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4MjQwOQ==	141	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_11020.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc4MjQwOQ==	Rename this to RowTableFunctionSerializer?	Code	Yes	FALSE												
apache/flink	13845	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzQ5MDQyMA==	133	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_13845.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzQ5MDQyMA==	Should it be in finally?	Code	No	FALSE												
apache/flink	13331	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgwOTk2MQ==	136	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_13331.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgwOTk2MQ==	ditto.	Code	Discard	FALSE												
apache/flink	11382	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzOTM4Ng==	139	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_11382.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAzOTM4Ng==	Shall we pass the logger from outside instead of expose it as public/(default)?	Code	No	FALSE												
apache/flink	13434	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxOTU1Mg==	134	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_13434.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcxOTU1Mg==	Create a new test case for this	Code	No	FALSE												
apache/flink	13351	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwMzAxNg==	135	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_13351.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMwMzAxNg==	What is the main motivation for keeping readChunk in a separate class from SeqReaderImpl? Is it for unit tests?	Code	No	FALSE												
apache/flink	11725	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI3Njg5Ng==	138	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_11725.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI3Njg5Ng==	usually added at the very top of a javadoc	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Not Accepted									
apache/flink	11280	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2NzczOQ==	140	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_11280.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI2NzczOQ==	nit: fix formatting	Code	Yes	FALSE												
apache/flink	11877	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTU2MzMwNA==	137	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_flink/pr_11877.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MTU2MzMwNA==	Does this mean that we don't need the credit for sending the event?	Code	No	FALSE												
apache/geode	5509	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAzOTMyNg==	143	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_geode/pr_5509.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAzOTMyNg==	Again, don't clone a new event. In the new code change, the "else" will only be executed in very very small time windows. You have proved that when the sender is shutdown, the eventProcessor will be kept. So enqueue will not go to the "else". We will never worry about the tmpDroppedEvents become too big.	Code	No	FALSE												
apache/geode	5102	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU0NzE0NQ==	147	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_geode/pr_5102.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU0NzE0NQ==	for this test, you know server1 has the data and server2 is the proxy, so you don't really need to use "describe region" to get this information, you can simply add "--member=server-1" in your query command	Code	No	FALSE												
apache/geode	5285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MDQwNA==	145	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_geode/pr_5285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU5MDQwNA==	How about combining all of the if into an AND condition. if (cmsDlockService == null && !(command instanceof GfshCommand) &&...)	Code	Yes	FALSE												
apache/geode	5501	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MTA3Nw==	144	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_geode/pr_5501.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5MTA3Nw==	remove the "if" and just call br.doLockForPrimary(false);	Code	No	FALSE												
apache/geode	5678	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg4MTExNQ==	142	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_geode/pr_5678.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg4MTExNQ==	It would be better to create a private instance variable for this DecimalForamt and then re-use that here when calling .format. Don't make it static since DecimalFormat is not thread-safe.	Code	Yes	FALSE												
apache/geode	5249	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE5MDI3OQ==	146	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_geode/pr_5249.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE5MDI3OQ==	All of the Mockito.***** matchers in this class are actually owned by org.mockito.ArgumentMatchers. I would recommend just converting them all to static import which should switch them to importing from ArgumentMatchers.	Code	No	FALSE												
apache/hadoop	1925	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MzgzNw==	150	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_1925.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4MzgzNw==	we are on SLF4J now	Code	No	FALSE												
apache/hadoop	1815	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNTAwMw==	154	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_1815.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwNTAwMw==	nit: leave the empty line	Code	Yes	FALSE												
apache/hadoop	1881	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1ODQ4Mg==	153	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_1881.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk1ODQ4Mg==	skip if statistics == null	Code	No	FALSE												
apache/hadoop	1885	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkwNDgzMg==	152	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_1885.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkwNDgzMg==	is the mini cluster required? starting a mini cluster takes time and prone to flaky failures. Would be nice to avoid using it.	Code	No	FALSE												
apache/hadoop	2354	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMDU4Mg==	148	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_2354.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyMDU4Mg==	same: List as variable type Actually, it may make sense to type this method RemoteIterator<T extends FileStatus>  and have List<T>  and RemoteIterator<T>  where appropriate	Code	No	FALSE												
apache/hadoop	1899	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NjU4NA==	151	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_1899.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NjU4NA==	What is the task here? Please explain. This is for all javadocs. There is no harm in writing more lines :P	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve explanation about functionality of a method	Yes		No	No	NONE	NONE	NONE	NONE
apache/hadoop	2189	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY2MzU0OQ==	149	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hadoop/pr_2189.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY2MzU0OQ==	As this if-else if-else if-else getting longer, let's use switch case?	Code	Yes	FALSE												
apache/hbase	2021	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk5MTI1NQ==	158	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hbase/pr_2021.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzk5MTI1NQ==	We need a 3 sec sleep here? !	Code	No	FALSE												
apache/hbase	2501	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzNDIyOQ==	156	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hbase/pr_2501.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQzNDIyOQ==	Why the cast? Isn't HRegionServer a Server?	Code	No	FALSE												
apache/hbase	1310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4NzQ0MQ==	159	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hbase/pr_1310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4NzQ0MQ==	Excellent	Comments	No	FALSE												
apache/hbase	2580	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxMTIwOQ==	155	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hbase/pr_2580.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxMTIwOQ==	Please add comments to explain the reason.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain reason for deprecation	Yes		Yes		NONE	NONE	NONE	NONE
apache/hbase	2483	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2OTk3NQ==	157	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hbase/pr_2483.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2OTk3NQ==	Can be private now?	Code	No	FALSE												
apache/hbase	1310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwMDY5MQ==	160	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hbase/pr_1310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcwMDY5MQ==	Interesting. Can we fix the base problem? Good find though.	Code	No	FALSE												
apache/helix	1028	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxODY1Nw==	164	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_1028.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQxODY1Nw==	Are we changing the logic? For this change, we add optionalOverwrittenStates.isPresent(). This result could come from IS dropping or preference list is null. In this case, it will direct return. If you are not returning, it will execute following code, which may have NPE or some errors?	Code	No	FALSE												
apache/helix	741	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1NDE0Mw==	168	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_741.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk1NDE0Mw==	move this to where try-catch is? Explain why Map.keySet() throws CME w regards to copy constructor?	Javadoc	Yes	FALSE												
apache/helix	1077	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0Nzg3Nw==	163	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_1077.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0Nzg3Nw==	I suggest making this interface AutoClosable, then you implement close() naturally.	Code	No	FALSE												
apache/helix	827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyODA4OA==	166	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_827.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyODA4OA==	nit, customizedStateName -> customizedStateType or type?	Code	Yes	FALSE												
apache/helix	1326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzNjI2OQ==	162	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_1326.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIzNjI2OQ==	Should we keep this for backward-compatibility? For legacy or existing workflows/jobs, how will their IdealStates be removed? Who will remove them?	Code	No	FALSE												
apache/helix	924	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE1MzY1Nw==	165	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_924.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE1MzY1Nw==	Assert this?	Code	No	FALSE												
apache/helix	1383	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE4NzA2MQ==	161	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_1383.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE4NzA2MQ==	Why not clear?	Code	No	FALSE												
apache/helix	827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0MzQ0Ng==	167	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_helix/pr_827.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc0MzQ0Ng==	log error (or warning) if any mismatch keys.	Code	No	FALSE												
apache/hive	1380	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU1OTgxMw==	171	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hive/pr_1380.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU1OTgxMw==	Is that possible also to assert on owner related values?	Code	No	FALSE												
apache/hive	1726	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjMyNTc2Mg==	169	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hive/pr_1726.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjMyNTc2Mg==	same on all alterations below..	Code	No	FALSE												
apache/hive	1184	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxODc0Nw==	172	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hive/pr_1184.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxODc0Nw==	LOG.debug("Joining back table {}", tableToJoinBack.joinedBackFields.relOptHiveTable.getName());	Code	Yes	FALSE												
apache/hive	1724	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzI5OTE1NA==	170	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hive/pr_1724.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzI5OTE1NA==	should we lower log level to debug here to avoid extensive logging	Code	No	FALSE												
apache/hudi	1804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxOTczNw==	175	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hudi/pr_1804.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgxOTczNw==	instead, we can just do a streaming sort-merge?	Code	No	FALSE												
apache/hudi	2260	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTM1MzQ5OQ==	174	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hudi/pr_2260.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTM1MzQ5OQ==	We may not tell why does not trigger compaction. It means nothing happened, right.	Code	No	FALSE												
apache/hudi	2322	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NTQ0Mg==	173	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hudi/pr_2322.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5NTQ0Mg==	Change to:  Rolling back using marker files	Code	No	FALSE												
apache/hudi	1624	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODgxMw==	176	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hudi/pr_1624.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzODgxMw==	I think we could change to log.warn, wdyt?	Code	No	FALSE												
apache/hudi	1368	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyODgzNw==	177	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hudi/pr_1368.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIyODgzNw==	Can you add what the expected and actual partition path was in the exception message ?	String value	Yes	FALSE												
apache/hudi	1360	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5NTI3Mg==	178	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_hudi/pr_1360.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5NTI3Mg==	Suggested change                                                                                                    SparkSession spark = SparkSession.builder().appName("Hoodie-snapshot-exporter").master("local[2]")                                                    SparkSession spark = SparkSession.builder().appName("Hoodie-snapshot-exporter")	Code	No	FALSE												
apache/iceberg	1820	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc2Nw==	180	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1820.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc2Nw==	Did you mean interaction or intersection?	Code	Yes	TRUE	Bad identifier	Variable	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
apache/iceberg	1271	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3NzQzOQ==	184	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1271.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc3NzQzOQ==	This check seems redundant to me. If we are already passing our expected precision and scale to data.getDecimal(), wont the scale and precision of the returned decimal always match?	Code	Yes	FALSE												
apache/iceberg	1893	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE2NTY0Mw==	179	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1893.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE2NTY0Mw==	Nit:  we could just use the assertEquals for two lists, don't have to convert it to array and then use assertArrayEquals ?	Code	No	FALSE												
apache/iceberg	1612	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3Mzk0MA==	182	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1612.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3Mzk0MA==	Nit: Typo shake -> sake	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in code comment to fix typo	No	No			NONE	NONE	NONE	NONE
apache/iceberg	1348	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTYyNTg2OA==	183	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1348.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTYyNTg2OA==	This is a deprecated method, no one will call it, you can just return this.	Code	No	FALSE												
apache/iceberg	1096	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0MDQ1MQ==	186	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1096.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0MDQ1MQ==	I think validation should be tested separately.	Code	No	FALSE												
apache/iceberg	1101	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NDYyNQ==	185	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1101.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NDYyNQ==	Minor: we don't need duplicate assertions when the condition should be true for both v1 and v2 tables.	Code	Yes	FALSE												
apache/iceberg	1796	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg3NjEzMA==	181	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iceberg/pr_1796.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg3NjEzMA==	nit 'the' not needed: Not allowed to expire snapshots as garbage collection is disabled for this table.	String value	Yes	FALSE												
apache/ignite	7787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MjczOA==	191	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc0MjczOA==	I suggest that success command execution prints an informative message. For example, the snapshot was(will be) created. And how to monitor the status.	Code	No	FALSE												
apache/ignite	7495	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MDgxMQ==	195	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7495.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4MDgxMQ==	in milliseconds?	Javadoc	Yes	FALSE												
apache/ignite	7495	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczMTM4Mg==	196	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7495.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczMTM4Mg==	@see should be placed after @return	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Move a tag of documentation to the conventional place	Yes		Yes		NONE	NONE	NONE	AtclauseOrder
apache/ignite	7693	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzNjIxNw==	194	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7693.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzNjIxNw==	This interface should be in org.apache.ignite.mxbean. Also, let's mark all public API with the @IgniteExperimental.	Code	Yes	FALSE												
apache/ignite	7412	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDM5Nw==	197	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7412.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDM5Nw==	Failure callback. @param failReason Exception caused a failure.	Javadoc	Yes	FALSE												
apache/ignite	8350	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzMzc2OA==	189	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_8350.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzMzc2OA==	Lets rename to dataPacket ?	Code	Yes	TRUE	Bad identifier	Variable	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
apache/ignite	8159	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU5NTQ4Ng==	190	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_8159.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU5NTQ4Ng==	newline required here because of different variable purpose	Code	Yes	FALSE												
apache/ignite	8575	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDE3Nw==	188	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_8575.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY1MDE3Nw==	Why it streams UUID as a key?	Code	No	FALSE												
apache/ignite	8614	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxMzgyOQ==	187	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_8614.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMxMzgyOQ==	Seems to be unnecessary, please revert	Code	No	FALSE												
apache/ignite	7747	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNzA1OQ==	193	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7747.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIwNzA1OQ==	Should we use the same waitForCondition as well?	Code	No	FALSE												
apache/ignite	7771	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzMTg2NQ==	192	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ignite/pr_7771.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzMTg2NQ==	assertTrue(fullMsgReceivedLatch.await(getTestTimeout(), MILLISECONDS));	Code	No	FALSE												
apache/incubator-doris	4089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTExMDgyMA==	200	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_incubator-doris/pr_4089.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTExMDgyMA==	Suggested change                                                                                                    @ConfField                                                    @ConfField (mutable = true, masterOnly = true)	Code	No	FALSE												
apache/incubator-doris	4699	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwODY3MA==	199	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_incubator-doris/pr_4699.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwODY3MA==	This is not a good way to alter external table. You write 2 edit logs here, which will make this operation non-atomic。	Code	No	FALSE												
apache/incubator-doris	3454	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3ODU4NQ==	201	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_incubator-doris/pr_3454.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI3ODU4NQ==	rootChema maybe null, you should process this	Code	No	FALSE												
apache/incubator-doris	3150	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5NzUyNQ==	202	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_incubator-doris/pr_3150.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE5NzUyNQ==	Suggested change                                                                                                            stmt = rewriteSelectStatement((SelectStmt) stmt, analyzer);                                                            return rewriteSelectStatement((SelectStmt) stmt, analyzer);	Code	Yes	FALSE												
apache/incubator-doris	4771	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzODg0OA==	198	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_incubator-doris/pr_4771.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzODg0OA==	For current scheduler principal, a tablet can only have one task running or pending at most. So we should delete the cache as soon as possible. It is better to change this function to getAndDeleteCachedSrcBackendId. And call it after scheduler cancelled, task running cancelled, and deleteSrcReplicaOfLB.	Code	No	FALSE												
apache/iotdb	1721	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2Mjk5NA==	204	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iotdb/pr_1721.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA2Mjk5NA==	Same reason. Add these lines. if (args.length > 2) {   StringBuilder tmp = new StringBuilder();   for (int i = 1; i < args.length - 1; i++) {     tmp.append(args[i]).append(",");    }    tmp.append(args[args.length - 1]);    args[1] = tmp.toString();  }	Code	No	FALSE												
apache/iotdb	1060	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzYwMw==	206	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iotdb/pr_1060.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzYwMw==	Return a tablet	Javadoc	Yes	FALSE												
apache/iotdb	796	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5OTM5MA==	208	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iotdb/pr_796.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5OTM5MA==	remove this	Code	Yes	FALSE												
apache/iotdb	1512	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxMDEwNA==	205	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iotdb/pr_1512.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxMDEwNA==	I think maybe you can just extend AsyncDataClient and override the factory and constructor so there will be fewer duplicated codes. Or maybe you can extract heartbeat-related methods in RaftService into a new service, so it can be better decoupled.	Code	No	FALSE												
apache/iotdb	2184	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY3NjI4Nw==	203	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iotdb/pr_2184.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY3NjI4Nw==	why add statistics here?	Code	No	FALSE												
apache/iotdb	817	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNjU5Mw==	207	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_iotdb/pr_817.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNjU5Mw==	Unnecessary empty line.	Code	Yes	FALSE												
apache/jena	792	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyOTQyNQ==	214	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_jena/pr_792.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyOTQyNQ==	Ditto.	Javadoc	Discard	FALSE												
apache/jena	887	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwNDM0NQ==	209	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_jena/pr_887.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwNDM0NQ==	s/streamign/streaming	Javadoc	Yes	FALSE												
apache/jena	884	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0ODk1NQ==	210	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_jena/pr_884.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0ODk1NQ==	Nit, the bracket style is pretty inconsistent here, I don't have a strong preference for using brackets when the if branch only has a single line but it would be nice to be consistent throughout the method For example the outer if uses {} because it has a multi-line block but its corresponding else if doesn't Similarly the inner if are both single line blocks but one uses {} and one doesn't	Code	Yes	FALSE												
apache/jena	804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3MzAxOA==	213	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_jena/pr_804.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI3MzAxOA==	Could be more efficient without counting all triples, e.g. try (ExtendedIterator<Triple> it = g.find(s, p, null) {   if (!it.hasNext()) {      return false;   }   it.next();   return !it.hasNext(); }	Code	No	FALSE												
apache/jena	815	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwODQxNg==	212	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_jena/pr_815.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwODQxNg==	Emoticons being useful for testing 🎉	Comments	No	FALSE												
apache/jena	870	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMjczMA==	211	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_jena/pr_870.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMjczMA==	Minor: "generateViolation" read better.	Code	Yes	FALSE												
apache/kafka	9697	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI4MjYwMA==	215	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_9697.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI4MjYwMA==	I think it would be better to have a test that shows that a new thread that replaced a failed one, actually is able to process records. So, I would let the new thread process some records and then shutdown the client with a normal close. Maybe similar applies to the shutdown tests. First let the client/application process some records and then throw an exception that shuts down the client/application. I guess, this last paragraph is something for a separate PR.	Code	No	FALSE												
apache/kafka	8964	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NjEwMw==	217	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8964.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU3NjEwMw==	This is just a placeholder for making less frequent flushing than commits, currently I'm making it num.records based, but it's open for better proposal to decide when flushing should be executed.	Code	No	FALSE												
apache/kafka	8689	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDY5MQ==	219	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8689.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDY5MQ==	If we expect no warmups, we can assert it here with:                         Suggested change                                                                                                        assertValidAssignment(0, allTaskIds.size() / 3 + 1, allTaskIds, emptySet(), clientStates, new StringBuilder());                                                        assertValidAssignment(0, allTaskIds, emptySet(), clientStates, new StringBuilder());	Code	No	FALSE												
apache/kafka	8370	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1Mzg4MQ==	220	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8370.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1Mzg4MQ==	Note we should only call this inside the if (state == State.RUNNING) condition otherwise we may get ConcurrentModification exception.	Code	No	FALSE												
apache/kafka	8322	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NjM3OA==	221	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8322.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NjM3OA==	Why do we need this 3 lines? Setting the config without prefix would set it for all consumers anyway? If you want to test the overwrite with prefix, should it be it's own test?	Code	No	FALSE												
apache/kafka	8119	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MjMyMQ==	223	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8119.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk1MjMyMQ==	The slf4j {} placeholders will not work here since we are constructing the message ourselves.	Code	No	FALSE												
apache/kafka	9060	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MDEwOQ==	216	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_9060.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4MDEwOQ==	Hey @mjsax , am I reading this PR correctly? Do we now only allow a single member to retry topic creation/validation for up to half of the poll interval, after which we shut down the entire application? That sounds like the opposite of resiliency...what if the brokers are temporarily unavailable? Before this we would just let the single thread die, and the internal topic creation/validation would be retried on the subsequent rebalance. That wasn't ideal, but given the upcoming work to allow reviving/recreating a death thread, that seems to be preferable to permanently ending the application? Sorry if I'm misreading this, was just going over all the PRs in the last month or so to produce a diff+summary of the important ones, and want to make sure I actually understand all the changes we've made	Code	No	FALSE												
apache/kafka	8720	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzNDgyNw==	218	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8720.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzNDgyNw==	nit: it was correct before	Code	No	FALSE												
apache/kafka	8256	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ==	222	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kafka/pr_8256.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ==	Do I read this right, that we're doing the exact same thing twice?	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
apache/kylin	1494	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0OTM1MQ==	224	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kylin/pr_1494.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0OTM1MQ==	Append paramters twice for BatchConstants.ARG_PARTITION .	Code	No	FALSE												
apache/kylin	1254	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyNDU5OQ==	227	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kylin/pr_1254.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkyNDU5OQ==	Hi, @guangxuCheng . Actually this method has replaced parseToJobInstanceQuietly(CubingJob job, Map<String, Output> outputs) and parseToJobInstanceQuietly(CheckpointExecutable job, Map<String, Output> outputs), so should  the replaced method and their UT be removed? And maybe UT for this new method should be added.	Code	No	FALSE												
apache/kylin	1376	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0NzAyMA==	225	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kylin/pr_1376.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Nzk0NzAyMA==	Sparker or Sparder?	Code	Yes	FALSE												
apache/kylin	1351	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMTIyMQ==	226	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kylin/pr_1351.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMTIyMQ==	I think kafkaConsumer.seekToBeginning(newTopicPartitions); should not in for-loop .	Code	No	FALSE												
apache/kylin	1218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMTU3Nw==	228	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_kylin/pr_1218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMTU3Nw==	@kyotoYaho Please fix the failed test case: AdminServiceTest.testGetPublicConfig, it needs to add this property into expected results.	Code	No	FALSE												
apache/lucene-solr	1440	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1NjYxNw==	233	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1440.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1NjYxNw==	javadocs?	Javadoc	Yes	FALSE												
apache/lucene-solr	1432	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MDg5Mw==	234	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1432.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5MDg5Mw==	unclear what this test is testing	Code	No	FALSE												
apache/lucene-solr	1606	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5MTg1OQ==	231	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1606.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5MTg1OQ==	I'd like for all of this to be dynamically configurable at some point, but it doesn't have to be in this PR. Can add it to the future SIP or create a separate JIRA for it, as you think would be appropriate.	Code	No	FALSE												
apache/lucene-solr	1737	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA3MzU5OQ==	229	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1737.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA3MzU5OQ==	Similarly, "greater than allocated threshold" ?	String value	Yes	FALSE												
apache/lucene-solr	1669	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwOTgwMw==	230	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1669.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwOTgwMw==	nit: you re-ordered the imports in a way not consistent with most classes.  java package should come first.	Code	Yes	FALSE												
apache/lucene-solr	1223	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NDkzMw==	235	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1223.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY3NDkzMw==	It is not clear why BlobCoreSyncer is initialized here inside load method instead of the constructor. The comment says things here depend on initiated SharedStoreManager. That statement is incomplete. It is that plus the CoreContainer#sharedStoreManager is initialized because CorePullerFeeder depends on that. Also blobCoreSyncer and blobProcessUtil are two fields that are not initialized yet. The comment suggests all the public facing fields would have been initialized by now. Even if that is not what the comment means, there is nothing preventing them from being accessed in null state. The other problem is that if the CoreContainer#load fails then CoreContainer@shutdown is called for cleanup. At least inside CoreContainer#createAndLoad. That can hit an NPE when calling sharedStoreManager.getBlobProcessManager().shutdown() because it is possible the exception that started the shutdown was in sharedStoreManager#load before blobProcessUtil was even initialized. The second problem can be solved by creating a shutdown method inside SharedStoreManager and moving  sharedStoreManager.getBlobProcessManager().shutdown() there, protected by blobProcessUtil!= null check. Though, I don't have any good ideas for the first problem.	Code	No	FALSE												
apache/lucene-solr	1470	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTYwNA==	232	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_lucene-solr/pr_1470.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NTYwNA==	This needs to be volatile or AtomicLong because it is accessed from other threads that call onSuccess and onFailure	Code	No	FALSE												
apache/netbeans	2324	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzNDkyMw==	238	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2324.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzNDkyMw==	Jackpot: warning: Dereferencing possible null pointer	Code	No	FALSE												
apache/netbeans	2324	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyOTU2NA==	239	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2324.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyOTU2NA==	I see. This is the way to specify client capabilities! CCing @sdedic.	Code	No	FALSE												
apache/netbeans	2225	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzkzOA==	241	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2225.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzkzOA==	Isn't msgs operated from different threads ? Noticed only now :(	Code	No	FALSE												
apache/netbeans	2214	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MzA1MA==	242	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2214.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MzA1MA==	A bit better way is StandardCharsets.UTF_8[.name()].	Code	Yes	TRUE	Missing constant usage	Literal	Not Accepted									
apache/netbeans	2359	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxNjE2OA==	237	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2359.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTIxNjE2OA==	Couldn't, by a chance, the check for Projects/.+/Lookup be removed by using the same trick with autogenerating the position? No need to solve it in this PR however.	Code	No	FALSE												
apache/netbeans	2324	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzNDk1Ng==	240	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2324.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzNDk1Ng==	Jackpot: warning: Variable w is never read	Code	Yes	FALSE												
apache/nifi	4700	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1OTkzOQ==	244	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_nifi/pr_4700.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1OTkzOQ==	It might make sense to call this StatelessProvenanceRepository or perhaps RingBufferProvenanceRepository just to avoid confusion with the existing VolatileProvenanceRepository?	Code	Yes	FALSE												
apache/ozone	503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNzA1OQ==	252	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ozone/pr_503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEyNzA1OQ==	Nit: can be simplified to getContainerManager().notifyContainerReportProcessing(false, success);	Code	Yes	FALSE												
apache/parquet-mr	776	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1NjQ0Nw==	258	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_776.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU1NjQ0Nw==	I guess, it should be the specific crypto exception instead.	Code	No	FALSE												
apache/phoenix	913	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwNjg3Mg==	265	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_913.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwNjg3Mg==	I thought we weren't going to annotate indexes.	Code	No	FALSE												
apache/pinot	5189	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MzI0OQ==	273	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_5189.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MzI0OQ==	/tmp --> System.gettemp dir or something like that	Code	No	FALSE												
apache/pinot	5513	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwODQzMA==	272	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_5513.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwODQzMA==	This can potentially flood the log. Can we extract line 376-405 in existing code into a method and call that here?	Code	Yes	FALSE												
apache/pinot	4988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYyMjcwNg==	277	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_4988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYyMjcwNg==	Should we define "MONTHS" and "WEEKS" as constants?	Code	Yes	FALSE												
apache/pinot	5774	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwNjI0Mw==	271	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_5774.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgwNjI0Mw==	Why is DEFAULT_NUM_PARTITIONS used here?	Code	No	FALSE												
apache/pulsar	9096	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxOTAzNg==	278	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_9096.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxOTAzNg==	Does one StreamingOffloadIndexBlock will contain multiple ledgers indexes?	Code	No	FALSE												
apache/pulsar	8125	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI3NjA4OQ==	281	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_8125.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI3NjA4OQ==	Please avoid doing this. Can you add a log statement properly?	Code	No	FALSE												
apache/pulsar	8996	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyOTg0NA==	279	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_8996.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzMyOTg0NA==	Do we need to return the future again?	Code	No	FALSE												
apache/rocketmq	1985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxMzQ1Mg==	290	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_1985.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxMzQ1Mg==	what is a blacklist? It's just not allowed to send a message to this topic. It would be better to name it notAllowedSending.	Code	Yes	FALSE												
apache/rocketmq	2169	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNzk5MA==	286	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_2169.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNzk5MA==	Enum or constant would be better，magic numbers not a good choice.	Code	Yes	FALSE												
apache/rocketmq	2059	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNDI1MA==	289	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_2059.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNDI1MA==	powermock provide mock private method. you could use it to test null case and dropped case separately	Code	No	FALSE												
apache/rocketmq	1985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEzMTk3MA==	291	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_1985.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEzMTk3MA==	MixAll class should not inflate continue. could you help to move the system topic related logic to a new class, such as TopicValidator or TopicChecker?	Code	Yes	FALSE												
apache/servicecomb-java-chassis	1516	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyOTI3OA==	304	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_1516.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTAyOTI3OA==	it's better to call scheduledThreadPoolExecutor.shutDownNow to terminate the thread pool	Code	No	FALSE												
apache/servicecomb-java-chassis	1894	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjE3MQ==	300	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_1894.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjE3MQ==	strategyKey can have default value 'FixedWindow', wrong used defined value can throw exception. So here do not need new a default strategy.	Code	No	FALSE												
apache/shardingsphere	6352	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczNTE0Mw==	306	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_shardingsphere/pr_6352.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjczNTE0Mw==	Can this method revert to origin?	Code	No	FALSE												
apache/skywalking	5269	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1OTk5Nw==	312	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_5269.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1OTk5Nw==	Replacing getType() to isBoolean seems more clear.	Code	Yes	FALSE												
apache/skywalking	4793	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIzNDY1Mw==	314	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_4793.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIzNDY1Mw==	What does this mean?	Comments	Yes	FALSE												
apache/storm	3362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODc3Mg==	317	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODc3Mg==	indention seems off	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	Source code should be indented consistently	Indentation
apache/storm	3350	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4MDc3Nw==	318	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3350.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc4MDc3Nw==	Should this (mod) subtraction be from (valueAtTime - valueAtTimeMinus1), instead of (valueAtTime - valueAtTimePlus1)	Code	No	FALSE												
apache/storm	3215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2OTIyNQ==	323	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ2OTIyNQ==	new TreeSet<RasNode> can be new TreeSet<>	Code	No	FALSE												
apache/tinkerpop	1308	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYzNjA2MA==	329	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1308.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYzNjA2MA==	I think you can safely put 3.5.0 as the version.	Javadoc	Yes	FALSE												
apache/tinkerpop	1308	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0MDI2Nw==	330	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1308.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0MDI2Nw==	I haven't thought this through at all but is it desirable that we would double-log here if the user has somehow used both settings (the new and deprecated one as true)? I see this sort of code in the AbstractEvalOpProcessor as well. Perhaps setting both to true should be considered an "illegal" configuration or the setting of the new one to true should override the old to false? Perhaps, setting the old to true and the new to false should result in a WARN to the logger to let them know they are using a deprecated settings?	Code	No	FALSE												
apache/tinkerpop	1308	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0MDg2OQ==	331	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1308.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0MDg2OQ==	nit: looks like your IDE is making a mockery of our code style by doing a wildcard import 😄	Code	Yes	FALSE												
apache/tinkerpop	1308	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1NTk3Mw==	332	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1308.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1NTk3Mw==	setup() for authentication and configure() for authorization - could we simply unify these and go with setup() for both? As long as the two methods have the same name/signature then it should look like one method from an inheritance perspective, no?	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Extract method	Yes		Yes		NONE	NONE	NONE	NONE
apache/tinkerpop	1308	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3ODg2OA==	333	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1308.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY3ODg2OA==	I know this is just for testing but could you please change the naming (to this class and related ones) to AllowList?	Code	No	FALSE												
apache/tinkerpop	1365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzNzcyNQ==	327	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1365.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzNzcyNQ==	just to clarify , by "different executor thread" are you referring to threads on the client being responsible for the un-ordering?	Javadoc	No	FALSE												
apache/tinkerpop	1312	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA1OTAwMg==	328	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_tinkerpop/pr_1312.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA1OTAwMg==	Could you please talk about the cases where folks would extend TinkerVertex (or TinkerGraph more generally)? We have one very specific one with https://github.com/ShiftLeftSecurity/tinkergraph-gremlin but i'm not sure that's relevant anymore with its successor in https://github.com/ShiftLeftSecurity/overflowdb	Code	No	FALSE												
apereo/cas	4844	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk1NTY1NQ==	336	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apereo_cas/pr_4844.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk1NTY1NQ==	Never use this.applicationContext.getBean() unless you absolutely have to (and you should not have to). Pass the bean instance or invoke it directly.	Code	No	FALSE												
apereo/cas	4740	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMDI0Nw==	337	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apereo_cas/pr_4740.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAxMDI0Nw==	Suggested change                                                                                                            LOGGER.debug("Not a surrogate authentication attempt, returning parent class credentials");                                                            LOGGER.trace("Not a surrogate authentication attempt, returning parent class credentials");	Code	No	FALSE												
apereo/cas	4854	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTY2Nw==	335	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apereo_cas/pr_4854.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQwMTY2Nw==	Same as above.	Code	No	FALSE												
apereo/cas	5001	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDM1Mg==	334	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apereo_cas/pr_5001.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA3NDM1Mg==	This doesn't seem right. You are not actually doing authentication, when the method asks for doAuthentication. The credential needs to be verified somehow. If you're doing that elsewhere, you'd need to move that logic into the handler here.	Code	No	FALSE												
apicurio/apicurio-registry	985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNTQxNw==	340	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apicurio_apicurio-registry/pr_985.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNTQxNw==	Rename the field as well?  Since it's now an executor and not a handler...	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
apicurio/apicurio-registry	355	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1ODMyMw==	341	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apicurio_apicurio-registry/pr_355.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI1ODMyMw==	The logic looks great here.  The only thing to check is which of these objects you're using are threadsafe and can be re-used.  You'll need to check the javadoc for each:  DocumentBuilderFactory DocumentBuilder WSDLFactory WSDLReader  I'm guessing the factories can be cached and re-used, but you'll need to confirm by reading the javadocs for all those classes.	Code	No	FALSE												
apicurio/apicurio-registry	1054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk2NDUyNQ==	338	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apicurio_apicurio-registry/pr_1054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk2NDUyNQ==	in createArtifactWithMetadata you are not doing this, I guess because the SQL store is doing it when receiving the kafka message, so, should we remove this here or add it to createArtifactWithMetadata?	Code	No	FALSE												
apicurio/apicurio-registry	241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwODM2Ng==	343	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apicurio_apicurio-registry/pr_241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgwODM2Ng==	Surprised to see this here.	Code	No	FALSE												
apicurio/apicurio-registry	998	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MjEyNw==	339	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apicurio_apicurio-registry/pr_998.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MjEyNw==	Is this guaranteed to get called even if the request fails?	Code	No	FALSE												
apicurio/apicurio-registry	250	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk2MzU2Mg==	342	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apicurio_apicurio-registry/pr_250.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzk2MzU2Mg==	@EricWittmann there are two ArtifactState classes ... one is redundant ...	Code	Discard	FALSE												
apple/servicetalk	1285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyMDY4Nw==	344	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apple_servicetalk/pr_1285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUyMDY4Nw==	It looks enough for me to call closeHandler.closeChannelOutbound here. It will generate ChannelOutputShutdownEvent, triggering channelOutboundListener.channelClosed. WDYT?	Code	No	FALSE												
apple/servicetalk	990	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExODY1MQ==	346	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apple_servicetalk/pr_990.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExODY1MQ==	Here we have a small naming inconsistency between TerminalSignalConsumer API and other when* operators:  whenOnComplete(Runnable) matches with TerminalSignalConsumer#onComplete(); whenOnError(Consumer<Throwable>) matches with TerminalSignalConsumer#onError(Throwable);  whenCancel(Runnable) does not have On in the middle to match with TerminalSignalConsumer#onCancel(). It's ok for me, just want to highlight this naming inconsistency. WDYT?	Code	Yes	FALSE												
apple/servicetalk	1029	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk1MzE2NQ==	345	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apple_servicetalk/pr_1029.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk1MzE2NQ==	this method reads/modifies state that is only expected to be touched in the event loop, consider just hard-closing (e.g. flush/close).	Code	No	FALSE												
apple/servicetalk	919	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4ODkzOQ==	347	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apple_servicetalk/pr_919.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4ODkzOQ==	Can we simply do a single atomic update; UNSET -> DONE and move the atomic updates out of notifyComplete() and notifyError()?	Code	No	FALSE												
artipie/artipie	801	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyNTE5OA==	350	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_801.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyNTE5OA==	@olenagerasimova as you are using java standard library in this method, I'd suggest to use HttpURLConnection.HTTP_OK instead of parsing RsStatus.OK value	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Use a different type to be consistent with other parts of the code	Yes		No	No	NONE	NONE	NONE	NONE
artipie/artipie	827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgyOTYyNw==	348	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_827.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODgyOTYyNw==	@genryxy the code for replacing \n with empty string is duplicated 3 times in this class, I'd suggest to extract a function for that	Code	No	FALSE												
artipie/artipie	318	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2NTc5MA==	355	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_318.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2NTc5MA==	The strangest general description I saw in my life. Can you explain for which purpose you plan to use it? And in which cases it is useful?	Javadoc	Yes	FALSE												
artipie/artipie	675	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcxMTE4Mg==	351	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_675.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcxMTE4Mg==	@genryxy this.url field is initialized only after this.config() method call. But it is used inside config() method. Not sure how this test works.	Code	No	FALSE												
artipie/artipie	30	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDkyMw==	356	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_30.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDkyMw==	Can you just call it Main?	Code	Yes	FALSE												
artipie/artipie	491	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4NTY0NA==	353	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_491.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4NTY0NA==	@genryxy same, no need to wrap into CompletableFuture	Code	No	FALSE												
artipie/artipie	471	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4ODU0MA==	354	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_471.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4ODU0MA==	@genryxy that's a smart fix, but in Artipie project we are trying to avoid using null values. Could you please implement Storage interface with all methods throwing exception? It's going to be more verbose, but will make intent more obvious. Using shortcuts is what brought us the problem in the first place.	Code	No	FALSE												
artipie/artipie	659	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0NTUyMg==	352	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_659.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0NTUyMg==	@olenagerasimova guess there is typo and this method's name is supposed to be config, not configs, isn't it?	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to fix a typo	Yes		No	No	NONE	NONE	NONE	NONE
artipie/artipie	807	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNTgxNA==	349	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_artipie/pr_807.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNTgxNA==	@genryxy I think this method does not belong to this pull request. It does not have proper implementation yet, so I'd suggest to add it later with proper usage and tests	Code	No	FALSE												
artipie/http	217	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI4Mzk2OQ==	357	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_http/pr_217.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI4Mzk2OQ==	@genryxy please add all classes of status codes from RFC, it's 6.x points in the document	Code	No	FALSE												
artipie/http	117	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzkyOA==	359	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_http/pr_117.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MzkyOA==	@olenagerasimova why using JSON here? I'd not put any volatile date to default 404 response. Same for headers	Code	No	FALSE												
artipie/http	159	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczNzM2MA==	358	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/artipie_http/pr_159.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTczNzM2MA==	@marceloamadeu let's inline this variable.	Code	Yes	FALSE												
athenz/athenz	1003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4Mjk1Ng==	364	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_1003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4Mjk1Ng==	what was the reason for removing client cert flag?	Code	No	FALSE												
athenz/athenz	1097	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0OTk0Ng==	362	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_1097.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0OTk0Ng==	insert the role => insert the group	Comments	Yes	FALSE												
athenz/athenz	1097	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NDM3Ng==	363	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_1097.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc1NDM3Ng==	I might be missing something but shouldn't this be reversed? if (defaultValue == Boolean.TRUE) { return value == Boolean.FALSE ? "false" : "true"; // in any other case that isn't false (null or true) - set to true } else { return value == Boolean.TRUE ? "true" : "false"; // in any other case that isn't true - set to false } In any case, it's best to a unit-test just to confirm it works properly	Code	No	FALSE												
athenz/athenz	972	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0MjUwNw==	366	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_972.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0MjUwNw==	we should move this down before line 2630 to be consistent with all other methods in the class.	Code	Yes	FALSE												
athenz/athenz	1001	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2NDQ0NA==	365	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_1001.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE2NDQ0NA==	instead of calling rs.getString multiple times in the if block we should just get those two values and assign to local variables and then do the checks with those values which makes the code more readable.	Code	Yes	FALSE												
athenz/athenz	1157	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg0Mw==	361	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_1157.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg0Mw==	we should fetch the enablePrincipalStateUpdater setting in this method and most likely it can just be a local setting since it's not used anywhere else.   where are using principalStateUpdater member? I see no references	Code	No	FALSE												
athenz/athenz	1179	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwNjc0OQ==	360	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/athenz_athenz/pr_1179.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwNjc0OQ==	In this method when we ask for roles without any members, we generate a new list of roles. In that section we need to update to return the tags as well.	Comments	No	FALSE												
aws-amplify/amplify-android	476	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5ODc5Mw==	369	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-amplify_amplify-android/pr_476.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5ODc5Mw==	Since we're doing two things now, is it worth just inlining? Or is this used elsewhere? If it is, any downside to hoisting the log statement out of it?	Code	Yes	FALSE												
aws-amplify/amplify-android	798	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMDQ5Nw==	367	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-amplify_amplify-android/pr_798.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczMDQ5Nw==	Again, this assumes all attributes are going to have codes sent which they don't - off the top of my head I only know of email and phone being verified with a code.	Code	No	FALSE												
aws-amplify/amplify-android	263	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxOTkzNg==	372	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-amplify_amplify-android/pr_263.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxOTkzNg==	Change to 2020 in all new files	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Change text in existing JavaDoc to update copyright	Yes		Yes		NONE	NONE	NONE	NONE
aws-amplify/amplify-android	615	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNDQxMg==	368	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-amplify_amplify-android/pr_615.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzIxNDQxMg==	Is there a reason you need to pass in subscriptionId?  It seems like that could be handled internally within SubscriptionEndpoint.  It doesn't appear that subscriptionId is actually used anywhere else in SubscriptionOperation, except for checking if it's null in cancel(), which doesn't seem like a necessary check anyway.	Code	No	FALSE												
aws-amplify/amplify-android	281	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1Mzg2MA==	371	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-amplify_amplify-android/pr_281.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1Mzg2MA==	There is an existing class called TestMobileClient (I think) and this is supposed to be a rename and iteration on top of that existing file	Code	No	FALSE												
aws-amplify/amplify-android	372	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjM4OQ==	370	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-amplify_amplify-android/pr_372.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMjM4OQ==	while it doesn't REALLY matter since this is a system side model, does the CLI model codegen deal with this style appropriately?	Code	No	FALSE												
aws-greengrass/aws-greengrass-nucleus	378	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDczNjkyOQ==	375	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_378.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDczNjkyOQ==	1 minute is way too long. Try more like 10 seconds at most. We'd like tests to fail fast.	Code	No	FALSE												
aws-greengrass/aws-greengrass-nucleus	378	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA5NzI5NA==	376	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_378.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA5NzI5NA==	shouldn't be static	Code	No	FALSE												
aws-greengrass/aws-greengrass-nucleus	346	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzMjM1Nw==	377	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_346.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzUzMjM1Nw==	pass in the version too	Code	No	FALSE												
aws-greengrass/aws-greengrass-nucleus	277	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MjI1Mg==	378	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_277.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MjI1Mg==	why lock?	Code	No	FALSE												
aws-greengrass/aws-greengrass-nucleus	52	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMjg4Mw==	380	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_52.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMjg4Mw==	Anything here?	Comments	Yes	FALSE												
aws-greengrass/aws-greengrass-nucleus	68	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0MTgwNw==	379	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_68.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA0MTgwNw==	Probably don't want to swallow the IOException here.	Code	No	FALSE												
aws-greengrass/aws-greengrass-nucleus	469	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3NDUxNg==	373	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_469.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3NDUxNg==	NIT: add a comment. requirementMap is a groupId->requirement map	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add new JavaDoc block to describe the functionality of a code element	Yes		Yes		NONE	CommentRequired	NONE	MissingJavadocMethod
aws-greengrass/aws-greengrass-nucleus	426	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ==	374	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws-greengrass_aws-greengrass-nucleus/pr_426.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5NTMzMQ==	I guess we do want to wait when shipping the kernel though. Is this only for test improvement temporarily?	Code	No	FALSE												
aws/aws-sdk-java-v2	2035	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMjkxMg==	381	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws_aws-sdk-java-v2/pr_2035.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEyMjkxMg==	Our assertions libraries in order of preference are : assertJ, hamcrest, junit. You picked the least preferential, can we use assertJ here and everywhere else you have created new test files.	Code	No	FALSE												
aws/aws-sdk-java-v2	1781	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3MjU4Mw==	383	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws_aws-sdk-java-v2/pr_1781.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3MjU4Mw==	Can we not write our own date time parsing? Can we not use DateTimeFormatter for this?	Code	No	FALSE												
aws/aws-sdk-java-v2	1681	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0MjAxNA==	385	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws_aws-sdk-java-v2/pr_1681.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU0MjAxNA==	Nice javadocs!	Javadoc	Discard	FALSE												
aws/aws-sdk-java-v2	1756	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MzY4NQ==	384	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws_aws-sdk-java-v2/pr_1756.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MzY4NQ==	When we have the overloaded versions of this, hopefully in the implementation one calls the other, in which case we should make sure we are testing the one that will give us coverage over both. Usually that's the varargs form because that should call the other one with Array.asList(...). We will also need to add a separate test for the .addAttributeToProject(...) method that we are hopefully adding.	Code	No	FALSE												
aws/aws-sdk-java-v2	2012	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NDEwOA==	382	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws_aws-sdk-java-v2/pr_2012.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM5NDEwOA==	Should we make "is bean style" an annotation setting, instead of trying to guess by looking at the method names? I'm worried about an attribute starting with "Set" being magically messed up because we're trying to be too clever. E.g. A customer probably wants a "setOfStuff" attribute to be stored as "setOfStuff", not "ofStuff".	Code	No	FALSE												
aws/aws-sdk-java-v2	1673	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1OTQ0OA==	386	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/aws_aws-sdk-java-v2/pr_1673.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1OTQ0OA==	Take a look at some of our existing tests and rename these to match our pattern	Code	Yes	FALSE												
awslabs/smithy	279	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzE0OA==	391	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/awslabs_smithy/pr_279.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzE0OA==	hasTrait?	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace method calling chain by existing API	Yes		Yes		NONE	NONE	NONE	NONE
awslabs/smithy	284	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNDIzOA==	390	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/awslabs_smithy/pr_284.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxNDIzOA==	Should we accept a "base path" to make this easier to root somewhere?	Code	No	FALSE												
awslabs/smithy	397	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIyMzEzNQ==	389	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/awslabs_smithy/pr_397.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIyMzEzNQ==	This comment seems off, service suppressions is what's throwing me. Also, if "service" is supposed to be namespace, the precedence listed is incorrect.	Comments	Yes	FALSE												
awslabs/smithy	623	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxNDk2Nw==	388	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/awslabs_smithy/pr_623.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxNDk2Nw==	assumed*	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
awslabs/smithy	628	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUxOTQxOQ==	387	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/awslabs_smithy/pr_628.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUxOTQxOQ==	The method names on these are inconsistent: getOutputTokenMember -> getOutputTokenPath getItemsMember -> getItemsMemberPath Since the original names are intact, I'd make this one getOutputTokenMemberPath.	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to be consistent with a convention	Yes		Yes		NONE	NONE	NONE	NONE
awslabs/smithy	279	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYzNDc4Mg==	392	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/awslabs_smithy/pr_279.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYzNDc4Mg==	No need to use .get() here. Use expectTrait(DeprecatedTrait.class). DeprecatedTrait deprecatedTrait = model.expectShape(trait.toShapeId()).expectTrait(DeprecatedTrait.class)	Code	Discard	FALSE												
axelor/axelor-open-suite	6178	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NTkwNw==	393	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_6178.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1NTkwNw==	Please inject this service in the constructor	Code	No	FALSE												
axelor/axelor-open-suite	5579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4OTcxNg==	397	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_5579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4OTcxNg==	Please use injection by constructor to avoid issues with injection in the future. Also please create an interface PartnerTurnoverService to be implemented by PartnerTurnoverServiceImpl and bind it in AccountModule.	Code	No	FALSE												
axelor/axelor-open-suite	5579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5MzkzMg==	398	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_5579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5MzkzMg==	This is duplicated code, either remove this or remove the method in PartnerTurnoverServiceImpl.java line 216	Code	Yes	FALSE												
axelor/axelor-open-suite	4976	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3MTY1Ng==	402	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_4976.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3MTY1Ng==	Please add try { //your code } catch { TraceBackService.trace(response, e); } in the controller to log exceptions, then apply java google code format.	Code	No	FALSE												
axelor/axelor-open-suite	6039	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExNjkwNg==	395	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_6039.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODExNjkwNg==	Do not inject using beans.get in a loop, use injection in constructor to get AnalyticMoveLineRepository	Code	No	FALSE												
axelor/axelor-open-suite	6039	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NTIxOA==	396	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_6039.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE1NTIxOA==	surround everything in a try catch to trace any exception	Code	No	FALSE												
axelor/axelor-open-suite	4982	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwMDIwNg==	401	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_4982.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwMDIwNg==	Please refactor this controller to use a service	Code	No	FALSE												
axelor/axelor-open-suite	6042	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MDc4MQ==	394	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_6042.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg4MDc4MQ==	Please do not inject a service from itself, you do not have to inject again the service to get overridden methods	Code	No	FALSE												
axelor/axelor-open-suite	5433	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMDYxOQ==	399	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_5433.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgxMDYxOQ==	Add an order by on the query. Currently this randomly will not update all timesheets.	Code	No	FALSE												
axelor/axelor-open-suite	5196	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyNTE4NA==	400	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axelor_axelor-open-suite/pr_5196.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyNTE4NA==	put 6 in a static variable in the class, since this is used multiple times	Code	Yes	FALSE												
axonframework/axonframework	1321	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxNDQwMA==	409	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1321.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDUxNDQwMA==	Doing a BuilderUtils#assertNonNull calls for every statement builder  would be a clean safe guard on these methods I think.	Code	No	FALSE												
axonframework/axonframework	1317	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1MzMxMg==	410	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1317.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1MzMxMg==	I think this line should reference it's about several subtypes rather than a single one.	Javadoc	Yes	FALSE												
axonframework/axonframework	1632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDMyNDA2Mg==	404	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDMyNDA2Mg==	It would be good to note in the class level JavaDoc of this test class, that both the SpringBeanParameterResolverFactory as well as the SpringBeanDependencyResolverFactory are tested through this class. Maybe even change the class name to be a bit clearer there too.	Code	Yes	FALSE												
axonframework/axonframework	1435	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NTA0NQ==	408	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1435.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY0NTA0NQ==	Did you consider extending EventMessage? This approach could resolve a backwards compatibility issue with @ResetHandler annotation.	Code	No	FALSE												
axonframework/axonframework	1510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyNTgzMg==	406	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyNTgzMg==	I would change this testcase and include 2 variants. Move the "verify" code outside of the onCommit. It's unreliable to put assertions there. If the UoW is rolled back, the test passes. One variant should do a UOW Commit, and the other a rollback. In case of the commit there is an invocation, in case of rollback, there isn't	Code	No	FALSE												
axonframework/axonframework	1455	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1NzQ5MA==	407	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1455.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1NzQ5MA==	I'd add something to this exception stating that no parameters are expected for an aggregate's annotated methods. Should be careful with the wording though, as a command handler is also an annotated method of an aggregate of course 😅	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Extend a string literal	Yes		Yes		NONE	NONE	NONE	NONE
axonframework/axonframework	1592	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2ODIyOA==	405	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1592.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2ODIyOA==	Suggested change                                                                                                 * A command filter that denies all {@link CommandMessage}s.                                                 * A {@link CommandMessageFilter} that denies all {@link CommandMessage}s.	Javadoc	Yes	FALSE												
axonframework/axonframework	1657	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTAyMjYxNw==	403	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/axonframework_axonframework/pr_1657.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTAyMjYxNw==	Wouldn't this change break backwards compatibility? I'd opt for finding a way to toggle this feature instead of using it by default.	Code	No	FALSE												
azure/autorest.java	517	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzQ2Ng==	412	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_autorest.java/pr_517.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MzQ2Ng==	This should be handled in the preprocessor.	Code	No	FALSE												
azure/autorest.java	674	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2OTgwNg==	411	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_autorest.java/pr_674.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2OTgwNg==	Will it happen that 2 method in different operation group get same name (likely for list etc.), which result in same model name for Options class?	Code	No	FALSE												
azure/azure-iot-sdk-java	860	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MjIzNA==	415	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-iot-sdk-java/pr_860.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MjIzNA==	if basic hub, will none of the tests work?	Code	No	FALSE												
azure/azure-iot-sdk-java	841	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTA3OA==	416	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-iot-sdk-java/pr_841.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTA3OA==	nit: same, can be replaced by returning Collections.singleton().	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace a set of statements by direct method in existing API	No	No			NONE	NONE	NONE	NONE
azure/azure-iot-sdk-java	891	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjk4OQ==	414	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-iot-sdk-java/pr_891.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYwNjk4OQ==	so is it throwing exception at both layers currently?	Code	No	FALSE												
azure/azure-iot-sdk-java	1010	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzMDc4Nw==	413	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-iot-sdk-java/pr_1010.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUzMDc4Nw==	Q - "connectionId.equals(this.iotHubTransportConnection.getConnectionId())" is this to avoid the scenario where by the time this callback was fired the client had already initiated a new reconnection attempt?	Code	No	FALSE												
azure/azure-libraries-for-java	967	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI1NjI1Mg==	423	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_967.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI1NjI1Mg==	The prefix of Management doesn't necessary since this is already under management package.	Code	Yes	FALSE												
azure/azure-libraries-for-java	1059	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5NDMyMQ==	420	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_1059.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ5NDMyMQ==	UnsupportedOperationException?	Code	Yes	FALSE												
azure/azure-libraries-for-java	1126	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0OTg1NA==	418	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_1126.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0OTg1NA==	Should we apply this change to all existing files in different modules?	Code	No	FALSE												
azure/azure-libraries-for-java	976	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQxMTkxOQ==	422	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_976.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQxMTkxOQ==	Add TODO, should use endpoint from AzureEnvironment from credential.	Code	No	FALSE												
azure/azure-libraries-for-java	1041	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0OTI1OA==	421	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_1041.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0OTI1OA==	Do the tests pass when JsonInclude is not added for the map? At Compute side, I have to add that.	Code	No	FALSE												
azure/azure-libraries-for-java	1091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgwMzI5Mw==	419	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_1091.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgwMzI5Mw==	seems one change in azure core is to generalize exception, not using CloudError, is this fluent layer?	Code	No	FALSE												
azure/azure-libraries-for-java	1199	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTMyMQ==	417	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-libraries-for-java/pr_1199.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI0NTMyMQ==	Assert if the vm state is deallocated. When it is deallocated, vm entity will still be there.	Code	No	FALSE												
azure/azure-sdk-for-android	387	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTg5Mw==	425	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-android/pr_387.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMyMTg5Mw==	I mentioned this on another PR, but I believe that if we add these Javadoc explanations at the property level we can just reference them in the getters and setters.                         Suggested change                                                                                                    /*                                                    /**	Javadoc	Yes	FALSE												
azure/azure-sdk-for-android	386	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzYwMA==	426	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-android/pr_386.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMxNzYwMA==	Suggested change                                                                                                        storageBlobServiceClient.setTier(containerName,                                                        storageBlobServiceClient.setBlobTier(containerName,	Code	No	FALSE												
azure/azure-sdk-for-android	399	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NzkzMw==	424	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-android/pr_399.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY1NzkzMw==	can we replace all instances of UUID.randomUUID() with a method call? That way when we get to the point where we record, we can just change that method?	Code	No	FALSE												
azure/azure-sdk-for-android	242	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MDA5MQ==	428	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-android/pr_242.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MDA5MQ==	Suggested change                                                                                                     * @return The response object                                                     * @return The response object.	Javadoc	Yes	FALSE												
azure/azure-sdk-for-android	244	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMzgyNg==	427	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-android/pr_244.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMzgyNg==	missing return	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain the functionality of a method	Yes		No	No	NONE	NONE	NONE	WriteTag
azure/azure-sdk-for-android	237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjE3Mg==	429	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-android/pr_237.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjE3Mg==	Suggested change                                                                                                     * close the content.                                                     *                                                     * @throws IOException if close operation fails                                                     * Close the content.                                                     *                                                     * @throws IOException if the close operation fails	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		No	No	NONE	NONE	NONE	NONE
azure/azure-sdk-for-java	14848	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2Njg3Mg==	433	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-java/pr_14848.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2Njg3Mg==	Missing docs.	Javadoc	Yes	FALSE												
azure/azure-sdk-for-java	10182	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwMjcwOQ==	435	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-java/pr_10182.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwMjcwOQ==	This would be easier to understand if you do: if (this.hidden != null) {     this.retrievable = !this.hidden; } Shouldn't the retrievable logic be done after setting the member variable? not before?	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Not Accepted									
azure/azure-sdk-for-java	16088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NjcwMw==	431	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-java/pr_16088.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NjcwMw==	Wondering if responseDuration is the only criteria for deciding the log level. For e.g. the level maybe decided on the number of retry attempts too. Can we pass this in a context so we can add other data, if necessary? Same for logResponse method too. default LogLevel getLogLevel(HttpResponse response, Context context)	Code	No	FALSE												
azure/azure-sdk-for-java	14389	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0MjQ4OQ==	434	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-java/pr_14389.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA0MjQ4OQ==	If this method is called twice - first time with a non-null map and second time with null map, then the 2nd call is a no-op and the builder will still use the first map which is not what the user would have expected. If the map is null, this builder's map should also be set to null.	Code	No	FALSE												
azure/azure-sdk-for-java	18075	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ1MzkwNA==	430	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-java/pr_18075.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ1MzkwNA==	I would use a different key such as azure-log-string-to-sign to ensure there is no overlap and to indicate it's Azure SDK specific	Code	Yes	FALSE												
azure/azure-sdk-for-java	14987	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1NTYwMw==	432	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azure_azure-sdk-for-java/pr_14987.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg1NTYwMw==	While you are sprucing this up, we can actually do region sections in java, too. //region Models APIs ... //endregion Models APIs Intellij will let you collapse the code just like how C# does	Comments	No	FALSE												
azuread/microsoft-authentication-library-common-for-android	939	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4OTEyNA==	439	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-common-for-android/pr_939.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4OTEyNA==	should 62-71 be a function in UiAutomatorUtils? (That takes in a class type and label)	Code	No	FALSE												
azuread/microsoft-authentication-library-common-for-android	1030	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI3OTI3Ng==	437	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-common-for-android/pr_1030.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI3OTI3Ng==	Nit:  Could we fix that?  I mean, it's our test app, so I suppose it can do whatever we want including buffering all the logs internally and displaying them, so it might not be worthwhile.	Code	No	FALSE												
azuread/microsoft-authentication-library-common-for-android	1018	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA==	438	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-common-for-android/pr_1018.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA==	There's not really any recovery from OOM.	Code	No	FALSE												
azuread/microsoft-authentication-library-common-for-android	937	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcxOQ==	440	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-common-for-android/pr_937.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcxOQ==	can be final	Code	No	FALSE												
azuread/microsoft-authentication-library-common-for-android	1120	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2ODQ1Nw==	436	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-common-for-android/pr_1120.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2ODQ1Nw==	The code formatting doesn't match our current code style. Please follow the same code style as the one being used throughout the rest of the code base.	Code	Yes	FALSE												
azuread/microsoft-authentication-library-common-for-android	891	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3ODkwMA==	441	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-common-for-android/pr_891.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk3ODkwMA==	Can inputString be null? If yes, then we should do a null-check, otherwise add non-null annotation.	Code	No	FALSE												
azuread/microsoft-authentication-library-for-android	1112	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMDgzMw==	444	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1112.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMDgzMw==	Should these be removed?	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove commented out code statements	Yes		Yes		NONE	NONE	Sections of code should not be commented out	NONE
azuread/microsoft-authentication-library-for-android	1130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY0OTgxOQ==	442	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTY0OTgxOQ==	Optionally return the entire expression? return matcher.matches() && ObjectUtils.equals(mAppContext.getPackageName(), matcher.group(1));	Code	Yes	FALSE												
azuread/microsoft-authentication-library-for-android	1130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1MjE1NA==	443	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1MjE1NA==	Is this meant to be used outside of the context of an Android app? Because this regex seems to accept invalid android application package names	Code	No	FALSE												
azuread/microsoft-authentication-library-for-android	1111	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4NTQzNQ==	447	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1111.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk4NTQzNQ==	nit: extra lines	Code	Yes	FALSE												
azuread/microsoft-authentication-library-for-android	1053	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4MjY0NQ==	450	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1053.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4MjY0NQ==	since we have specific broker request classes now for other operations such as hello, remove account etc. I would suggest renaming BrokerRequest.java to something like BrokerSilentTokenRequest.java as I believe this will now be only used for silent token requests?	Code	Yes	FALSE												
azuread/microsoft-authentication-library-for-android	1103	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NDk0OQ==	448	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1103.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0NDk0OQ==	nit: final here and everywhere as needed	Code	No	FALSE												
azuread/microsoft-authentication-library-for-android	1112	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4MzU4Ng==	445	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1112.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4MzU4Ng==	Can we get here and get method invoked on null object?	Code	No	FALSE												
azuread/microsoft-authentication-library-for-android	1112	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0MDU5OA==	446	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1112.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg0MDU5OA==	why removing NonNull?	Code	No	FALSE												
azuread/microsoft-authentication-library-for-android	1103	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MjczNg==	449	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/azuread_microsoft-authentication-library-for-android/pr_1103.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MjczNg==	Looking at your design doc, I see you called out that (at least for now), Device Code Flow is only supported for Local Msal and NOT supported via the Broker. Over here I see the DeviceCodeFlowCommand consuming the Default Controller by calling getDefaultController - that's contradicting what's in the design doc. getDefaultController returns the BrokerMsalController if a broker is installed on the device. What is our plan in this case? Do we let flow go over to the broker and then throw some exception indicating that the DCF is not supported? Or wouldn't it be better for the DeviceCodeFlowCommand to just consume the LocalMsalController (even if a broker is present on the device) to always use the local MSAL flow for the DeviceCodeFlowCommand ?	Code	No	FALSE												
b2ihealthcare/snow-owl	698	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDU5Mw==	451	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_698.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE5NDU5Mw==	Add our Apache 2.0 license and since tag please.	Code	No	FALSE												
b2ihealthcare/snow-owl	478	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2Mjk0Mw==	462	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_478.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ2Mjk0Mw==	How about using the export reference branch's head timestamp? We could even run the export on a BranchContext just to ensure that it's not a moving target.	Code	No	FALSE												
b2ihealthcare/snow-owl	558	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMjcwNg==	456	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_558.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMjcwNg==	Use filterBy* method names for filters.	Code	Yes	FALSE												
b2ihealthcare/snow-owl	558	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2OTI0MA==	457	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_558.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2OTI0MA==	On a second thought, this might be already added via options(). Could you please check?	Code	Yes	FALSE												
b2ihealthcare/snow-owl	560	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0MjcwNg==	455	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_560.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE0MjcwNg==	⚠️ Missing active check?	Code	No	FALSE												
b2ihealthcare/snow-owl	610	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1OTE5NA==	452	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_610.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1OTE5NA==	This needs to be removed because it can cause ConcurrentModificationExceptions or incorrect return values when executing by more than one thread.	Code	No	FALSE												
b2ihealthcare/snow-owl	506	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NjAyNg==	460	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_506.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NjAyNg==	The URI-based alternative doesn't include the health check request wrapper.	Code	No	FALSE												
b2ihealthcare/snow-owl	491	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NDM5OA==	461	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_491.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NDM5OA==	Probably doesn't make too much of a difference, but Predicate<RevisionDocument> occurrences could be replaced with ComponentDeletionPolicy to really drive the point home of this class being a composite of other policies.	Code	No	FALSE												
b2ihealthcare/snow-owl	527	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzNzM4MA==	458	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_527.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzNzM4MA==	This is not the parentLockContext() but the lockContext itself, please rename. Also, please rename the class to LockRequest.	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
b2ihealthcare/snow-owl	610	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDA1Ng==	453	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_610.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDA1Ng==	Rename this field to active.	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to be consistent with a convention	Yes		Yes		NONE	NONE	NONE	NONE
b2ihealthcare/snow-owl	597	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzI1MA==	454	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_597.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAzNzI1MA==	If there are multiple toolingId values given, and one adds their own query clauses to the builder, we might end up with a final query that is "impossible".	Code	No	FALSE												
b2ihealthcare/snow-owl	517	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3ODc3Mg==	459	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/b2ihealthcare_snow-owl/pr_517.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3ODc3Mg==	Please indicate in the method name that it is going to be shorter than a regular SHA-1 hash.	Code	Yes	FALSE												
ballerina-platform/ballerina-lang	26976	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MTQzNA==	463	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_26976.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MTQzNA==	We could use symTag to check for BPackageSymbol and BAnnotationSymbol	Code	Yes	TRUE	Complex, long, or inadequate logic	Operation	Accepted	Replace usage of an external API by an internal one	Yes		Yes		NONE	NONE	NONE	NONE
ballerina-platform/ballerina-lang	26096	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMzY5MQ==	464	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_26096.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUxMzY5MQ==	Looks like theres a formatting issue here. We generally keep a newline before the version. Check the other classes..	Javadoc	Yes	FALSE												
ballerina-platform/ballerina-lang	25683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA1OTkyMA==	465	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_25683.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA1OTkyMA==	doc above this method also	Code	Yes	FALSE												
ballerina-platform/ballerina-lang	25551	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNzYyMQ==	466	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_25551.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNzYyMQ==	Leave a new line after the imports. Please check and fix everywhere.	Code	Yes	FALSE												
ballerina-platform/ballerina-lang	20862	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2MjgwNw==	470	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_20862.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA2MjgwNw==	not found?	Comments	Yes	FALSE												
ballerina-platform/ballerina-lang	25551	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTc1MA==	467	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_25551.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTc1MA==	Creating these expressions and setting them is usually delegated off to the package builder. Also doesn't feel quite right for the parser listener to know of the symbol table. Since the antlr parser will be removed soon, shall we just pass an empty list in L858 and disable the tests on the old parser, instead of introducing these changes?	Code	No	FALSE												
ballerina-platform/ballerina-lang	20965	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEzMDk4OQ==	469	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_20965.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEzMDk4OQ==	Suggested change                                                                                                        // Get org-name                                                        // Get the name of the organization.	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Conditional	Not Accepted									
ballerina-platform/ballerina-lang	24673	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0NjM0Ng==	468	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ballerina-platform_ballerina-lang/pr_24673.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0NjM0Ng==	Need to update the isProductionWithAlternatives with the same.	Code	No	FALSE												
bisq-network/bisq	3982	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxODUzNQ==	471	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bisq-network_bisq/pr_3982.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxODUzNQ==	Since localBitcoinNode.isDetectedButMisconfigured() is an optional it would be prudent to check that it's present here. Although it might be certain for now that it's never null the characteristics of an optional is that it should be able to handle the null state.	Code	No	FALSE												
bisq-network/bisq	3889	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzMDA4NQ==	472	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bisq-network_bisq/pr_3889.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkzMDA4NQ==	Prefer braces...	Code	Yes	FALSE												
bisq-network/bisq	3889	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3NDMwMw==	473	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bisq-network_bisq/pr_3889.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ3NDMwMw==	Somehow this command didn't work for me.	Code	No	FALSE												
blackducksoftware/blackduck-alert	1251	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5OTEyNw==	474	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_1251.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5OTEyNw==	Is this used anywhere? Are we keeping this around for something?	Code	Yes	FALSE												
blackducksoftware/blackduck-alert	1222	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3MDM5MQ==	475	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_1222.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg3MDM5MQ==	Do you not have SaveActions enabled? Two lines of whitespace here.	Code	Yes	FALSE												
blackducksoftware/synopsys-detect	113	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM3MTcyNg==	487	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_synopsys-detect/pr_113.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM3MTcyNg==	I agree. Remove them.	Code	No	FALSE												
blackducksoftware/synopsys-detect	142	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0MzMwNg==	486	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_synopsys-detect/pr_142.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0MzMwNg==	I'd prefer we changed this as it reads strangely to me. So instead of "isLastCharWasEscapeChar" we could do "wasLastCharEscapeChar".	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
blackducksoftware/synopsys-detect	169	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NTIwMg==	483	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_synopsys-detect/pr_169.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NTIwMg==	Since you only use this method once and it's so small, just use the FileUtils cod inline.	Code	Yes	FALSE												
blackducksoftware/synopsys-detect	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDY2Mg==	484	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_synopsys-detect/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDY2Mg==	Why do we need a CargoResolver if we aren't using the executable?	Code	No	FALSE												
box/box-java-sdk	832	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc5MTM5Ng==	492	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/box_box-java-sdk/pr_832.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDc5MTM5Ng==	Suggested change                                                                                                            final String apiFoldersEndpointPattern = "https://api.box.com/2.0/folders/\\d+";                                                            final String apiFoldersEndpointPattern = ".*box.com/2.0/folders/\\d+";                                 I didn't catch this before.  I think we should we allow for more flexibility with the subdomains, right?	Code	No	FALSE												
broadinstitute/gatk	6634	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MDA2Mg==	497	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6634.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ3MDA2Mg==	!isEmpty	Code	Yes	FALSE												
broadinstitute/picard	1581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MjI1OQ==	504	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_picard/pr_1581.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MjI1OQ==	//            <ssssssSSSSSMMMMMMMMMMMMMMMM  should be //            <sssssssSSSSMMMMMMMMMMMMMMMM	Comments	Yes	FALSE												
broadinstitute/picard	1582	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMzAwNg==	503	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_picard/pr_1582.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMzAwNg==	How about specifically noting that for standard input one should write /dev/stdin as the input file?	Code	No	FALSE												
camunda-cloud/zeebe	4531	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMTYzMA==	511	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_4531.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMTYzMA==	Nit: snapshot is a verb, so just say shouldSnapshot ;)	Code	Yes	FALSE												
camunda-cloud/zeebe	3613	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0OTc4Ng==	514	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_3613.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0OTc4Ng==	Ignore this getter for JSON serialization.	Code	No	FALSE												
camunda-cloud/zeebe	6039	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQxNjA5MQ==	507	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_6039.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQxNjA5MQ==	Why do you need this change?	Code	No	FALSE												
camunda/camunda-bpm-platform	740	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyNTQ3MQ==	518	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda_camunda-bpm-platform/pr_740.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyNTQ3MQ==	The logic in the lines above (setting root instance id and removal time) is only necessary when the authorization is created, not when it is updated. I think it would be good to only perform it in the creation case to avoid unnecessary queries for the root process instance.	Code	No	FALSE												
camunda/camunda-bpm-platform	740	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyODM3NA==	519	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda_camunda-bpm-platform/pr_740.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyODM3NA==	In case of standalone tasks (root instance id == null), we don't have to go looking for the root instance. Which removal time should a standalone task permissions receive?	Code	No	FALSE												
candlepin/candlepin	2726	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MTkzMQ==	520	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/candlepin_candlepin/pr_2726.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg1MTkzMQ==	One thing to keep in mind with how paging works today, is that the presence of paging info often results in at least one additional query (to get counts for the headers). So we may not want to default to the always-create behavior we have here.	Code	No	FALSE												
catrobat/catroid	3730	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzMjEyOQ==	527	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/catrobat_catroid/pr_3730.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzMjEyOQ==	you missed to add serialVersionUID attribute for this class, please just add this line private static final long serialVersionUID = 1L;	Code	No	FALSE												
catrobat/catroid	3873	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk5NTAxOA==	524	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/catrobat_catroid/pr_3873.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODk5NTAxOA==	duplicate to function apiKeyFound?	Code	Yes	FALSE												
catrobat/catroid	3754	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyNTM4OA==	526	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/catrobat_catroid/pr_3754.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyNTM4OA==	Maybe you could make this condition more readable if you outsource it to a function, e.g. isGlobalVariable(UserData<?> item)	Code	Yes	FALSE												
cbioportal/cbioportal	7270	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4NDc0Mg==	532	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cbioportal_cbioportal/pr_7270.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE4NDc0Mg==	could we send Map<String,Integer> of headerNames instead of array? checking in map is more efficient than iterating an array	Code	No	FALSE												
cdapio/cdap	12822	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTIzOTk2MA==	534	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_cdap/pr_12822.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTIzOTk2MA==	This should be an optional rewrite controlled by cdap-site.xml	Code	No	FALSE												
cdapio/hydrator-plugins	1208	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4MDY2OA==	541	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1208.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4MDY2OA==	Please move this logic here: https://github.com/cdapio/hydrator-plugins/blob/develop/database-plugins/src/main/java/io/cdap/plugin/DBRecord.java#L137	Code	No	FALSE												
cdapio/hydrator-plugins	1072	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2ODg4Ng==	542	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1072.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2ODg4Ng==	In general, avoid this type of pattern where an exception is caught, logged, and then re-thrown. What ends up happening is that the error gets logged here and then later on by the caller, generating extra logs and confusing the user. Instead, you can wrap the exception with a more specific error message and propagate it up. Something like: throw new IllegalArgumentException("...", e);  The message should also give more information to the user about what they should do to fix the problem. This particular case can only happen when the format was a macro, otherwise it would have caused an error in configurePipeline. So a better message would be: Format '{}' cannot be used because properties {} were not provided or were invalid when the pipeline was deployed. Set the format to a different value, or re-create the pipeline with all required properties.	Other	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Replace a string literal by a different meaning or a synonymous	Yes		No	No	NONE	NONE	NONE	NONE
cdapio/hydrator-plugins	1043	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3OTYwNA==	544	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1043.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3OTYwNA==	Do we need to change this class? I feel it will still work since all the macros will be resolved in prepareRun() stage. Look at AbstractFileSource, it uses a similar structure.	Code	No	FALSE												
cesnet/perun	2969	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2ODQ2OQ==	546	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cesnet_perun/pr_2969.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2ODQ2OQ==	You should add info that all original sponors will be processed somehow too.	Javadoc	Yes	FALSE												
cesnet/perun	2871	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyNzA3Ng==	547	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cesnet_perun/pr_2871.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgyNzA3Ng==	I know it would be double-check, but you should check if resource=lastLoadedResource here too.	Code	No	FALSE												
cgeo/cgeo	9065	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMTg2OA==	554	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9065.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMTg2OA==	Typo aravilable	Javadoc	Yes	FALSE												
cgeo/cgeo	9065	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjY4Mg==	555	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9065.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxNjY4Mg==	same here	Code	Discard	FALSE												
cgeo/cgeo	9005	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0OTIyNw==	557	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9005.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzQ0OTIyNw==	Since "checkLogfile" is called on every call to "LogWriter" again: if an exception is catched later (and logWriter stays null) then this check will be repeated again and again, and on every call to LogWriter it will again try to instantiate the logWriter. Maybe a flag should be used so trying to set up file once it failed is not repeated	Code	No	FALSE												
cloudfoundry-incubator/multiapps-controller	856	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5MDM3MA==	565	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_856.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY5MDM3MA==	Maybe extract this in BeforeHookPhaseProvider class. Check below comment.	Code	No	FALSE												
cloudfoundry-incubator/multiapps-controller	983	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MjU1Nw==	562	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_983.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MjU1Nw==	orginialElement looks better in my opinion	Code	Yes	FALSE												
cmsgov/beneficiary-fhir-data	333	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1ODE5Mg==	571	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_beneficiary-fhir-data/pr_333.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1ODE5Mg==	Also: this variable should be named identifierType.	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
cmsgov/dpc-app	1138	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI2MDIwMA==	576	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_1138.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI2MDIwMA==	not sure about the name of this exception as an operation outcome could be returned due to BFD being down or the MBI was in a bad format or something else.	Code	No	FALSE												
cmsgov/dpc-app	822	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxNTIyNg==	581	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_822.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjAxNTIyNg==	Could we make this client_assertion (singular) since that's likely the name for the parameter? Or maybe include both to show that client_assertion anywhere is rejected.	String value	Yes	FALSE												
cmsgov/dpc-app	523	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1OTM0Ng==	584	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_523.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1OTM0Ng==	With the HttpPost entity being the form data, are parameters still needed on the URL?	Code	No	FALSE												
cmsgov/dpc-app	848	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyNzc0OQ==	579	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_848.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyNzc0OQ==	Suggested change                                                                                                    public static Practitioner createPractitionerResource(String NPI, String orgID) {                                                    public static Practitioner createPractitionerResource(String npi, String orgID) {                                 Would you be okay with making this and the MBI parameter in createPatientResource() lowercase? Might get mistaken for constants if someone is scanning the code quickly.	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Change the style of an identifier to be camelCase, capitalized, or lowercase	Yes		Yes		Nm: Field names should start with a lower case letter (NM_FIELD_NAMING_CONVENTION)	FormalParameterNamingConventions	Local variable and method parameter names should comply with a naming convention	ParameterName;
cmsgov/dpc-app	848	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDI0NQ==	580	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_848.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDI0NQ==	Do these need to be Location and Last-Modified? Or is it case insensitive?	String value	No	FALSE												
cmsgov/dpc-app	921	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMzA3Mg==	577	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_921.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMzA3Mg==	Should we set a status code on these two exceptions so it doesn't use the default of 500? My initial thought was 401 Unauthorized, but maybe 422 Unprocessable Entity is more accurate because it's the attestation that's a problem, not their authentication. 🤔	Code	No	FALSE												
cmsgov/dpc-app	920	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2MTU3Mg==	578	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_920.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM2MTU3Mg==	Should they be case insensitive?	Code	No	FALSE												
cmsgov/dpc-app	652	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ==	582	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_652.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ==	Can we put a javax validation on this property? Add the null check at startup rather than on each resource call?	Code	No	FALSE												
codice/ddf	5770	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2OTY5MQ==	588	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/codice_ddf/pr_5770.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2OTY5MQ==	Nice comment	Comments	No	FALSE												
codice/ddf	6283	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzExNzM1NQ==	585	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/codice_ddf/pr_6283.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzExNzM1NQ==	what would 0 do? would it not perform the search at all or omit this property? should it be default to something else?	Code	No	FALSE												
codice/ddf	6153	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMDE0MA==	586	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/codice_ddf/pr_6153.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIxMDE0MA==	✏️  I agree it's not worth making a constants class for these, but I would add a line comment briefly describing why the values are useful to share within this module. Something along the lines that the same calculations made here need to occur in the plugin as well. Alternatively, if they are similar enough, I would extract the operations into a new class and move these constants there, and make them private.	Comments	Yes	FALSE												
codice/ddf	5843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwMDc0NQ==	587	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/codice_ddf/pr_5843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwMDc0NQ==	❓ Should we test if this list preserves null values as well?	Code	No	FALSE												
commons-app/apps-android-commons	3324	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA2NDEzNA==	593	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/commons-app_apps-android-commons/pr_3324.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA2NDEzNA==	So all our existing users Contributions data - on upgrade - will remain on disk forever?	Code	No	FALSE												
commons-app/apps-android-commons	4022	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjQxNjk0MQ==	589	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/commons-app_apps-android-commons/pr_4022.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjQxNjk0MQ==	javadoc	Javadoc	Yes	FALSE												
commons-app/apps-android-commons	3438	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzMDE0MA==	591	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/commons-app_apps-android-commons/pr_3438.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDEzMDE0MA==	Looks like you've forgot to update this after updating the strings file.                         Suggested change                                                                                                            Toast.makeText(getContext(), R.string.set_location_mode_high_accuracy, Toast.LENGTH_LONG).show();                                                            Toast.makeText(getContext(), R.string.recommend_high_accuracy_mode, Toast.LENGTH_LONG).show();	Code	No	FALSE												
commons-app/apps-android-commons	3957	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNzc5Mw==	590	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/commons-app_apps-android-commons/pr_3957.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNzc5Mw==	I believe it's better to use the CATEGORY_PREFIX variable from CategoryClient here rather than hard coding the prefix.	Code	Yes	TRUE	Missing constant usage	Literal	Accepted	Use a constant from a library	Yes		Yes		NONE	NONE	NONE	NONE
commons-app/apps-android-commons	3326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwMjU1OQ==	592	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/commons-app_apps-android-commons/pr_3326.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcwMjU1OQ==	Please undo whitespace changes from this file.	Code	Yes	FALSE												
confluentinc/ksql	4382	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0NDc3MQ==	599	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_ksql/pr_4382.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0NDc3MQ==	FYI, can be:                         Suggested change                                                                                                      assertThat(server.getQueryIDs().contains(new PushQueryId(queryId)), is(true));                                                      assertThat(server.getQueryIDs(), hasItem(new PushQueryId(queryId)));                                 hasItem() asserts that a collection has at least one item that matches that supplied. There is also hasItems() which will look for multiple. Then there is contains and containsInAnyOrder: both of these look to assert the exact content of the collection, i.e. all entries in the collection must be matched.	Code	No	FALSE												
confluentinc/ksql	5200	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2MzU1Nw==	596	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_ksql/pr_5200.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU2MzU1Nw==	Always returns false?	Code	No	FALSE												
confluentinc/ksql	6073	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2NTg3Ng==	594	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_ksql/pr_6073.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2NTg3Ng==	This test change should be reverted, right?	Code	No	FALSE												
confluentinc/ksql	6073	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2Njg0NQ==	595	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_ksql/pr_6073.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2Njg0NQ==	This change should be reverted.	Code	No	FALSE												
confluentinc/ksql	4875	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNDE4Ng==	598	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_ksql/pr_4875.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgyNDE4Ng==	Why create it as a List<QueryDescription> only to convert to a Map<String, QueryDescription>? Why not just create as a map initially? Also, why not make the map stronger typed, e.g. Map<QueryId, QueryDescription>?	Code	Yes	FALSE												
confluentinc/ksql	5013	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyNTA2MQ==	597	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_ksql/pr_5013.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAyNTA2MQ==	missing issue link?	Comments	Yes	FALSE												
confluentinc/schema-registry	1285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5OTUxNw==	601	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_schema-registry/pr_1285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA5OTUxNw==	Nit: Can we parameterize this log message ?	String value	Yes	FALSE												
confluentinc/schema-registry	1285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE3OTcwNw==	602	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_schema-registry/pr_1285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE3OTcwNw==	Should we log all the incompatible changes ? If not, can we stop at the first one, instead of computing all of them ?	Code	No	FALSE												
confluentinc/schema-registry	1544	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjI5Ng==	600	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/confluentinc_schema-registry/pr_1544.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyMjI5Ng==	Do we need this default ?	Code	No	FALSE												
consensys/teku	2588	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2NjY4Mg==	606	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_2588.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2NjY4Mg==	Stray semicolon.	Code	Yes	FALSE												
consensys/teku	2074	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzOTUwMQ==	607	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_2074.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQzOTUwMQ==	It's really unclear what the result of this is actually meant to be. I've never seen anything that defines how to encode a discovery ENR as a multiaddr correctly which is what this is trying to do.  Best I can see is that we use: final NodeRecord nodeRecord = discoverySystem.getLocalNodeRecord(); if (nodeRecord.getUdpAddress().isEmpty() {   return Optional.empty(); } final DiscoveryPeer discoveryPeer = new DiscoveryPeer(((Bytes) nodeRecord.get(EnrField.PKEY_SECP256K1), nodeRecord.getUdpAddress().get(), Optional.empty());  return MultiaddrUtil.fromDiscoveryPeer(discoveryPeer); // But this needs to be a new variant that uses /udp/ not /tcp/	Code	No	FALSE												
consensys/teku	2743	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAwODY1NQ==	604	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_2743.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAwODY1NQ==	Probably should use Waiter.waitFor here too.	Code	No	FALSE												
consensys/teku	1111	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyODA1Nw==	611	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_1111.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMyODA1Nw==	Could this just use LimitedHashMap?  The static block to add initialCachedContent would just have to be done after construction but that should be safe since we're still in the constructor so no other operations can be happening.	Code	No	FALSE												
consensys/teku	2889	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NTUyNg==	603	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_2889.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NTUyNg==	If possible, I'd suggest validating and throwing an IllegalArgumentException when building the validatorConfig, so that we don't have to explicitly invoke this validate() method.  For example, WeakSubjectivityConfig errors are handled when TekuConfiguration builds here.  This prevents us from creating invalid configs in the first place.	Code	No	FALSE												
consensys/teku	1246	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODczNg==	609	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_1246.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEzODczNg==	We should actually use the deposits list passed in.                         Suggested change                                                                                                    genesisGenerator.updateCandidateState(blockHash, timestamp, List.of());                                                    genesisGenerator.updateCandidateState(blockHash, timestamp, deposits);	Code	No	FALSE												
consensys/teku	1836	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3ODQyNA==	608	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_1836.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY3ODQyNA==	ewww, spies...  All the checks on on these can be done quite effectively just using it's size method to see if anything has been added or not. I'd also suggest adding a method: private void verifyAttestationProcessed(final Attestation attestation) {     ArgumentCaptor<DelayableAttestation> captor =         ArgumentCaptor.forClass(DelayableAttestation.class);     verify(attestationProcessor).processAttestation(captor.capture());     assertThat(captor.getValue().getAttestation()).isSameAs(attestation);   }  which will let you be more specific instead of using verify(attestationProcessor).processAttestation(attestation).	Code	No	FALSE												
consensys/teku	1118	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5OTQ0OA==	610	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_1118.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA5OTQ0OA==	We have an AsyncRunner interface now, (along with DelayedExecutorAsyncRunner and StubAsyncRunner) now so MockScheduledExecutor might be overkill for now, or else, we can remove the AsyncRunner, and refactor to use MockScheduledExecutor. In any case, we should pick one to prevent duplication. With AsyncRunner interface, this is how the connect() method in PeerManager.java would look like:   public SafeFuture<?> connect(final Multiaddr peer, final Network network) {     STDOUT.log(Level.DEBUG, "Connecting to " + peer);     return SafeFuture.of(network.connect(peer))         .whenComplete(             (conn, throwable) -> {               if (throwable != null) {                 STDOUT.log(                     Level.DEBUG,                     "Connection to " + peer + " failed. Will retry shortly: " + throwable);                     asyncRunner.runAfterDelay(                         () -> connect(peer, network),                         RECONNECT_TIMEOUT,                         TimeUnit.MILLISECONDS);               } else {                 STDOUT.log(                     Level.DEBUG,                     "Connection to peer: "                         + conn.secureSession().getRemoteId()                         + " was successful");                 SafeFuture.of(conn.closeFuture())                     .finish(                         () -> {                           LOG.debug("Connection to {} closed. Will retry shortly", peer);                               asyncRunner.runAfterDelay(                                   () -> connect(peer, network),                                   RECONNECT_TIMEOUT,                                   TimeUnit.MILLISECONDS));                         });               }             });   }	Code	No	FALSE												
consensys/teku	2700	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkxMzIwNg==	605	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/consensys_teku/pr_2700.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTkxMzIwNg==	Hard coded 10000 doesn't look right here.	Code	Yes	FALSE												
constellation-app/constellation	623	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMDgxMQ==	616	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_623.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgxMDgxMQ==	Following on from my comment #623 (review) I was able to resolve this by running the open link command in a different thread. Actually, we also have a plugin that I'd prefer to use to open links and I replaced the above code with this and it worked. PluginExecution.withPlugin(CorePluginRegistry.OPEN_IN_BROWSER)                     .withParameter(OpenInBrowserPlugin.APPLICATION_PARAMETER_ID, "Open " + getName())                     .withParameter(OpenInBrowserPlugin.URL_PARAMETER_ID, url)                     .executeLater(null);	Code	No	FALSE												
constellation-app/constellation	418	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkyMzUwMA==	617	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_418.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkyMzUwMA==	Move this to JavafxStyleManager?	Code	No	FALSE												
constellation-app/constellation	418	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkyNDg1MQ==	618	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_418.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkyNDg1MQ==	TemporalConstants?	Code	No	FALSE												
constellation-app/constellation	418	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NDEwOA==	619	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_418.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NDEwOA==	these should be AttributeDescription constants.	Code	No	FALSE												
constellation-app/constellation	911	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzI0Nw==	612	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_911.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MzI0Nw==	final	Code	No	FALSE												
constellation-app/constellation	844	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwMzY0OA==	614	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_844.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwMzY0OA==	@Polaris5514 from my reading of the code I think this entire if block could be removed. What do you think?	Code	Yes	FALSE												
constellation-app/constellation	849	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NjIxNA==	613	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_849.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NjIxNA==	change to return p2 == null || p1.compareTo(p2) >= 0	Code	Yes	FALSE												
constellation-app/constellation	758	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNTI5OA==	615	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/constellation-app_constellation/pr_758.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwNTI5OA==	final	Code	No	FALSE												
corfudb/corfudb	2337	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4NTI4MA==	626	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2337.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4NTI4MA==	Just use !secondaryIndexes.isEmpty()?	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Accepted	Replace boolean expression by an alternative direct method	Yes		Yes		NONE	UseCollectionIsEmpty	Collection.isEmpty() should be used to test for emptiness	NONE
corfudb/corfudb	2703	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzNDcxOQ==	623	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2703.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkzNDcxOQ==	You can slice the buffer at the metadataOffset offset	Code	No	FALSE												
corfudb/corfudb	2812	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2NDczNQ==	620	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2812.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2NDczNQ==	Can you also change this to abstract ?	Code	No	FALSE												
corfudb/corfudb	2812	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMzU5Nw==	621	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2812.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzczMzU5Nw==	this function is doing more than just validate the clusterId, it is also sending a response back. Do you want to consider either renaming the function or better still having separate methods, one to send an error and one to do the check?	Code	Yes	FALSE												
corfudb/corfudb	2643	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNDM0OA==	625	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2643.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIyNDM0OA==	private	Code	No	FALSE												
corfudb/corfudb	2683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0MDI1MA==	624	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2683.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0MDI1MA==	does it need to be concurrent?	Code	No	FALSE												
corfudb/corfudb	2772	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwMTA4Nw==	622	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/corfudb_corfudb/pr_2772.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwMTA4Nw==	same here	Code	No	FALSE												
crate/crate	10076	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3NTc3MQ==	628	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_10076.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA3NTc3MQ==	Is this to assign the name with the predicate? (Just to make sure I understand why this is being changed) I'm not sure I see the benefit of doing this in this new way?	Code	No	FALSE												
crate/crate	9853	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjAzNQ==	634	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9853.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU2NjAzNQ==	4.2	Code	No	FALSE												
crate/crate	9831	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA1MTY0OA==	635	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9831.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA1MTY0OA==	is it expected behaviour that this is now possible?	Code	No	FALSE												
crate/crate	9916	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0ODM5Mg==	629	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9916.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0ODM5Mg==	Suggested change                                                                                                    public static DataType<?> safeOfName(String typeName) {                                                    public static DataType<?> ofNameOrNull(String typeName) {                                 In other places safe is used to indicate that an error is thrown if the name doesn't exist. E.g indexServiceSafe. I'd use a different name to not overload the same expression for two different purposes - that would confuse readers.	Code	Yes	FALSE												
crate/crate	10128	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1OTIyMw==	627	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_10128.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA1OTIyMw==	In ES this got introduced in elastic/elasticsearch@be397b7 do we have the other changes from that?	Code	No	FALSE												
crate/crate	9905	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNTAzMg==	631	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9905.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNTAzMg==	I extended the PredicateModule from AbstractFunctionModule or there was a reason why it wasn't done like that before?	Code	No	FALSE												
crate/crate	9905	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNzA2OQ==	632	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9905.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMwNzA2OQ==	I had to adjust these tests for the operators as well and I went with an simpler approach. Just use this for functions with signatures:     private FunctionInfo functionInfo(Signature signature, DataType dataType) {         return functions.getQualified(signature, List.of(dataType, dataType)).info();     }	Code	No	FALSE												
crate/crate	9763	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxNDU3Nw==	637	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9763.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxNDU3Nw==	I think a "why" comment would be more useful here. Explain why the commonSuperType logic above can fail and which cases are enabled here.	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Variable	Not Accepted									
crate/crate	9624	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5ODc1NA==	639	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9624.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5ODc1NA==	Maybe limit this to only the one table that is used in the tests. Wastes some CPU cycles and makes it more difficult to have an overview what schemas are in use in this file.	Code	No	FALSE												
crate/crate	9479	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ0MTA2OQ==	640	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9479.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ0MTA2OQ==	Do we need the ConcurrentRamAccounting here? I think the SingleBucketBuilder isn't used concurrently. (Yes, threads may change, but there is no concurrent use by multiple threads)	Code	No	FALSE												
crate/crate	9887	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMDg5MQ==	633	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9887.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMDg5MQ==	Is there a way to avoid to catch a NullPointerException ?	Code	No	FALSE												
crate/crate	9915	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxMDM1OQ==	630	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9915.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkxMDM1OQ==	PostgreSQL also seems to support : inbetween: select '14:32'::time;    time ----------  14:32:00 (1 row)  Can we extend this?	Code	No	FALSE												
crate/crate	9686	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExMTM4NA==	638	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9686.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTExMTM4NA==	Suggested change                                                                                                    private final Expression expression;                                                    private final T expression;	Code	No	FALSE												
crate/crate	9831	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY1MzkyNw==	636	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/crate_crate/pr_9831.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY1MzkyNw==	maybe worth adding an assertion to ensure its a boolean? Is this ensured somewhere else? otherwise it should throw an exception here.	Comments	Yes	FALSE												
cryostatio/cryostat	179	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMzUxMw==	646	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_179.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMzUxMw==	Is the TreeMap here jjust to ensure consistent ordering of the keys?	Code	No	FALSE												
cryostatio/cryostat	215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTk3MA==	642	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMTk3MA==	host/alias/port feels like an unnatural ordering of these params IMO. Maybe host/port/alias? Or alias/host/port? I think the host/port should be adjacent to each other.	Code	Yes	FALSE												
cryostatio/cryostat	140	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU2ODM3Mw==	648	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_140.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU2ODM3Mw==	@jiekang here's a good RFE for JMC - the JFCXMLValidator currently imports this UIPlugin class from another artifact, which is a subclass of an Eclipse AbstractUIPlugin class. So those UIPlugin classes are actually somehow related to the rendered application components and widgets, but clearly the XML Validator and the rest of the XML processing stuff I'm using here are not. And yet, the JMC code pathway for processing XML calls into UI components simply for the purpose of reusing their static logger instance... A fix for this is probably going to take a while to make it into a snapshot release version so I'll have to rely on this hack for a while, but if any portion of this XML stuff can be cleaned up and moved into jmc-core, then it would be really nice and useful for us to use here in container-jfr(-core).	Javadoc	No	FALSE												
cryostatio/cryostat	206	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2MDQ2OA==	644	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_206.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2MDQ2OA==	The return is implicit for a void method, so you can just have an empty method body between the curly braces.	Code	Yes	FALSE												
cryostatio/cryostat	161	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MTk4MA==	647	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_161.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MTk4MA==	Is this new argument to connect methods a list of cleanup functions to invoke? I suppose there will be a corresponding container-jfr-core PR?	Code	No	FALSE												
cryostatio/cryostat	196	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4ODQ1Mg==	645	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_196.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE4ODQ1Mg==	Does this work if the user sets the env var to ex. http://localhost:8080/, with a trailing slash?	Code	No	FALSE												
cryostatio/cryostat	254	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgzMzg2NQ==	641	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_254.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgzMzg2NQ==	I think this can be private, too.	Code	No	FALSE												
cryostatio/cryostat	215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMDE1MQ==	643	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cryostatio_cryostat/pr_215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTcwMDE1MQ==	This doesn't seem right. Why would a null entry to added to the list in this case?	Code	No	FALSE												
cucumber/common	1182	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2NDY4NQ==	650	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_1182.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2NDY4NQ==	The pattern s == null || s.isEmpty() ? Optional.empty() : Optional.of(do-something-transformer-specific) is very repetitive. Have a look at the way applyIfPresent is used to see if you can remove this repetition.	Code	No	FALSE												
cucumber/common	1182	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcyNDIyOQ==	651	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_1182.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcyNDIyOQ==	For consistency I've split Object and String.	Code	No	FALSE												
cucumber/common	1168	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1MzcxNw==	652	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_1168.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE1MzcxNw==	The only field that can contain credentials is the git remote, which is a URL. I think it would be safer to parse the value into a URL object, remove the credentials using the URL API and then write it out again.	Code	No	FALSE												
cucumber/common	890	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1MzYxNg==	654	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_890.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1MzYxNg==	Suggested change                                                                                                public class UndefinedParameterTypeExpression implements Expression {                                                final class UndefinedParameterTypeExpression implements Expression {	Code	No	FALSE												
cucumber/common	890	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1NzExMA==	655	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_890.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk1NzExMA==	We're using exceptions for control flow. Might be worth extracting some of the code in the CucumberExpression to the factory instead of throwing the exception and then catching it.	Code	No	FALSE												
cucumber/common	1252	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkwNTY3Ng==	649	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_1252.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjkwNTY3Ng==	Suggested change                                                                                                                        throw new RuntimeException(String.format("Not JSON: %s", line));                                                                        throw new RuntimeException(String.format("Not JSON: %s", line), e);	Code	No	FALSE												
cucumber/common	1005	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0NTQwMg==	653	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cucumber_common/pr_1005.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0NTQwMg==	I'd love to be rid of this bit of mutable state. Perhaps we can do this: Expression exp = TagExpressionParser.parse("@food");  And then internally public static Expression parse(String infix){   return new TagExpressionParser(infix).parse(); }	Code	No	FALSE												
dashevo/dash-wallet	298	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI2MjMzNQ==	660	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dashevo_dash-wallet/pr_298.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI2MjMzNQ==	Will not be used I suppose? afc6bd3#diff-d59db2bdbe7841e4cb222c288bc4e156R76	Code	No	FALSE												
dashevo/dash-wallet	353	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMyODIxOA==	659	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dashevo_dash-wallet/pr_353.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMyODIxOA==	We don't need this anymore since the app only supports Android 19 (4.4, Kitkat) and above. I have fond memories of the heartbleed bug fixes!	Code	No	FALSE												
dashevo/dash-wallet	463	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MzM5Nw==	657	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dashevo_dash-wallet/pr_463.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MzM5Nw==	We don't need to reload the transactions onResume?  Not sure when this was commented out. or is the reload method called else where?	Code	No	FALSE												
dashevo/dash-wallet	444	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjU5OA==	658	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dashevo_dash-wallet/pr_444.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjU5OA==	It looks like these imports aren't being used.	Code	Yes	FALSE												
dashevo/dash-wallet	564	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2ODEwNA==	656	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dashevo_dash-wallet/pr_564.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2ODEwNA==	AbstractBindServiceActivity instead of BlockchainServiceImpl	Code	No	FALSE												
datadog/dd-trace-java	1297	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5NzcwMQ==	665	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1297.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5NzcwMQ==	I guess this is a technicality, but I do not think object containing AtomicLong and modifying it can be called 'immutable' :)	Javadoc	Yes	FALSE												
datadog/dd-trace-java	1297	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4NjY4NQ==	666	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1297.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4NjY4NQ==	This will keep entries for longer than needed. Please consider #1334	Code	No	FALSE												
datadog/dd-trace-java	2060	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYyMTY5NQ==	661	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_2060.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYyMTY5NQ==	Batch is quite heavy so they're pooled. When they've been used they get put back on this queue.	Code	No	FALSE												
datadog/dd-trace-java	1251	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzNDY1MA==	668	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1251.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEzNDY1MA==	final	Code	No	FALSE												
datadog/dd-trace-java	1430	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE1NDIzMQ==	664	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1430.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE1NDIzMQ==	I was wondering how all those fields were getting referenced... clever.	Code	No	FALSE												
datadog/dd-trace-java	1256	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMDcyMg==	667	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1256.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMDcyMg==	PreparedStatements can be reused forever.  These entries can't expire.  I believe this needs to be a WeakMap.  Connections can also be reused but I think that codepath rebuilds DBInfo if its not in the map.	Code	No	FALSE												
datadog/dd-trace-java	1536	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI1ODk4MQ==	663	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1536.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI1ODk4MQ==	Can we add this to DDSpanNames so we cache the encodings?	Code	No	FALSE												
datadog/dd-trace-java	1598	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3Njg1NA==	662	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/datadog_dd-trace-java/pr_1598.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3Njg1NA==	This should probably account for 'no-package' classes as well - eg. lastIndexOf('/') == -1	Code	No	FALSE												
debezium/debezium	1843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0OTg5MA==	670	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/debezium_debezium/pr_1843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0OTg5MA==	Tiny nit: "LSN" -> "Lsn" (this isn't done consistently across the code base yet, but it's the casing we want to converge on eventually for abbreviations in type/method/variable names).	Code	Yes	TRUE	Bad identifier	Method	Accepted	Change the style of an identifier to be camelCase, capitalized, or lowercase	Yes		No	No	NONE	ClassNamingConventions	NONE	AbbreviationAsWordInName TypeName
debezium/debezium	1445	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2NTc0OQ==	671	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/debezium_debezium/pr_1445.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ2NTc0OQ==	How about naming it topic.expression? That'll be more in line with topic.regex as known from the existing logical table router.	String value	Yes	FALSE												
debezium/debezium	1347	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNjU3Nw==	673	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/debezium_debezium/pr_1347.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQxNjU3Nw==	Let's log the exception on info or debug.	Other	Yes	FALSE												
debezium/debezium	1377	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzY5Ng==	672	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/debezium_debezium/pr_1377.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzY5Ng==	That way we're creating a new metronome each time. Maybe it'd be better to initialize lazily if it's null originally?	Code	No	FALSE												
debezium/debezium	1264	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg==	674	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/debezium_debezium/pr_1264.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTEwMg==	The existing annotation should be dropped in favour of the new one.	Code	No	FALSE												
debezium/debezium	1928	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5NDc0Nw==	669	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/debezium_debezium/pr_1928.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI5NDc0Nw==	final	Code	No	FALSE												
dedica-team/nivio	121	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1NTgxMQ==	681	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_121.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg1NTgxMQ==	Renaming KPI to KeyPerformanceIndicator would make 100% clear what is meant.	Code	Yes	FALSE												
dedica-team/nivio	121	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3MDI5Mw==	682	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_121.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg3MDI5Mw==	👍	Code	No	FALSE												
dedica-team/nivio	204	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE2NDkzNA==	679	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_204.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE2NDkzNA==	@BilligsterUser: nice that you fixed that error! Could you also write a test that fails with the old implementation and now passes?	Code	No	FALSE												
dedica-team/nivio	154	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMjY3NQ==	680	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_154.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMjY3NQ==	Oh, we are using HATEOAS, nice!	Code	No	FALSE												
dedica-team/nivio	250	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5NDgzOA==	678	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_250.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5NDgzOA==	It can sometimes be helpful to note given/when/then is the tests to enhance readability for other developers.         //given         String root = Paths.get("").toAbsolutePath().toString();         if (SystemUtils.IS_OS_WINDOWS) {             root = "/" + root.replace(File.separator, "/");         }         URL baseUrl = new URL("file:" + root + "/src/test/resources/example/");         String part = "./services/wordpress.yml";          //when         String actual = URLHelper.combine(baseUrl, part);          //then         String expected = "file:" + root + "/src/test/resources/example/services/wordpress.yml";          assertEquals(expected, actual);	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add code comment to explain each part of a test	Yes		Yes		NONE	NONE	NONE	NONE
dedica-team/nivio	320	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3NDY3Nw==	675	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_320.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3NDY3Nw==	Can't this be private?	Code	No	FALSE												
dedica-team/nivio	278	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MTM1Mw==	676	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_278.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2MTM1Mw==	What are bridges? Empty gaps between 2 Hexes? A brief description would help here.	Javadoc	Yes	FALSE												
dedica-team/nivio	278	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NjY0NA==	677	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_278.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2NjY0NA==	What is collect? The path? The hexes between startHex and destHex?	Code	No	FALSE												
dedica-team/nivio	84	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA1MzcyMg==	683	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dedica-team_nivio/pr_84.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA1MzcyMg==	more spaces please	Code	Yes	TRUE	Inconsistent or disrupted formatting	Operation	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	NONE	WhitespaceAround
dhis2/dhis2-core	5605	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTU4OA==	688	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dhis2_dhis2-core/pr_5605.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTU4OA==	Can probably be safely removed	Comments	Yes	TRUE	Unnecessary Code	Call	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
dhis2/dhis2-core	5753	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzMTcxOA==	686	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dhis2_dhis2-core/pr_5753.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkzMTcxOA==	FIXME here	Comments	No	FALSE												
dhis2/dhis2-core	6552	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzMTY5NQ==	685	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dhis2_dhis2-core/pr_6552.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzMTY5NQ==	I am removing the String uid fields from the other models, since we already have fields for uid (trackedEntity, enrollment, event, relationship). I would like you to use relationship instead here, since the only change we would potentially do here, is to add a new uid if there is no uid already.	Code	No	FALSE												
dhis2/dhis2-core	6843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzU1Nw==	684	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dhis2_dhis2-core/pr_6843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4NzU1Nw==	I find this new code a bit hard to read (I would try to keep this method as tiny and lean as possible). What about encapsulating the call to the rule engine like so: @Override     public TrackerImportReport importTracker( TrackerImportParams params )     {         params.setUser( trackerUserService.getUser( params.getUserId() ) );          // Init the Notifier         ImportNotifier notifier = new ImportNotifier( this.notifier, params );          // Keeps track of the elapsed time of each Import stage         TrackerTimingsStats opsTimer = new TrackerTimingsStats();          notifier.startImport();          TrackerValidationReport validationReport = null;          TrackerBundleReport bundleReport;          try         {             //             // pre-heat             //             TrackerBundle trackerBundle = opsTimer.exec( PREHEAT_OPS,                 () -> preheatBundle( params ) );              Map<TrackerType, Integer> bundleSize = calculatePayloadSize( trackerBundle );              //             // preprocess             //             opsTimer.execVoid( PREPROCESS_OPS,                 () -> preProcessBundle( trackerBundle ) );              //             // validate             //             validationReport = opsTimer.exec( VALIDATION_OPS,                 () -> validateBundle( trackerBundle ) );              notifier.notifyOps( VALIDATION_OPS, opsTimer );              if ( exitOnError( validationReport, params ) )             {                 return buildReportAndNotify( validationReport, opsTimer, bundleSize, notifier );             }             else             {                 validationReport = execRuleEngine(opsTimer, trackerBundle, validationReport, notifier);                   if ( exitOnError( validationReport, params ) )                 {                     return buildReportAndNotify( validationReport, opsTimer, bundleSize, notifier );                 }                  //                 // commit                 //                 if ( TrackerImportStrategy.DELETE == params.getImportStrategy() )                 {                     bundleReport = opsTimer.exec( COMMIT_OPS, () -> deleteBundle( trackerBundle ) );                 }                 else                 {                     bundleReport = opsTimer.exec( COMMIT_OPS, () -> commitBundle( trackerBundle ) );                 }                  notifier.notifyOps( COMMIT_OPS, opsTimer );                  TrackerImportReport trackerImportReport = TrackerImportReport.withImportCompleted( TrackerStatus.OK,                     bundleReport, validationReport,                     opsTimer.stopTimer(), bundleSize );                  notifier.endImport( trackerImportReport );                  return trackerImportReport;             }         }         catch ( Exception e )         {             log.error( "Exception thrown during import.", e );              TrackerImportReport report = TrackerImportReport.withError( "Exception:" + e.getMessage(),                 validationReport, opsTimer.stopTimer() );              notifier.endImportWithError( report, e );              return report;         }     }      private TrackerValidationReport execRuleEngine( TrackerTimingsStats opsTimer, TrackerBundle trackerBundle,         TrackerValidationReport report, ImportNotifier notifier )     {         //         // rule engine         //         opsTimer.execVoid( PROGRAMRULE_OPS,             () -> runRuleEngine( trackerBundle ) );          notifier.notifyOps( PROGRAMRULE_OPS, opsTimer );          //         // rule engine         //         TrackerValidationReport finalValidationReport = report;         report = opsTimer.exec( VALIDATE_PROGRAMRULE_OPS,             () -> validateRuleEngine( trackerBundle, finalValidationReport ) );          notifier.notifyOps( VALIDATE_PROGRAMRULE_OPS, opsTimer );          return report;     }      private TrackerImportReport buildReportAndNotify( TrackerValidationReport validationReport,         TrackerTimingsStats opsTimer, Map<TrackerType, Integer> bundleSize, ImportNotifier notifier )     {         TrackerImportReport trackerImportReport = TrackerImportReport                 .withValidationErrors( validationReport, opsTimer.stopTimer(),                         bundleSize.values().stream().mapToInt( Integer::intValue ).sum() );          notifier.endImport( trackerImportReport );          return trackerImportReport;     }      private boolean exitOnError( TrackerValidationReport validationReport, TrackerImportParams params )     {         return validationReport.hasErrors() && params.getAtomicMode() == AtomicMode.ALL;     }	Code	Yes	FALSE												
dhis2/dhis2-core	5605	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3Mzk0MA==	689	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dhis2_dhis2-core/pr_5605.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg3Mzk0MA==	This description seems incomplete.	Javadoc	Yes	FALSE												
dhis2/dhis2-core	5753	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTAyMg==	687	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dhis2_dhis2-core/pr_5753.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYzNTAyMg==	What is this line for? Doesnt this just return a boolean?	Code	No	FALSE												
dimagi/commcare-android	2412	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1MzA0Mw==	690	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dimagi_commcare-android/pr_2412.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ1MzA0Mw==	Nit: It feels a bit error prone to me for the processing to not fork to being either Dictionary based or List Order based upfront and then in their own block, rather than inline under the same process, but just a style thing.	Code	No	FALSE												
dimagi/commcare-android	2176	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjQzOA==	691	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dimagi_commcare-android/pr_2176.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjQzOA==	We can remove this soft assert as well as this path will definitely get hit for someone using this functionality,	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Accepted	Remove log	Yes		No	No	NONE	NONE	NONE	NONE
dockstore/dockstore	3331	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5NzE5Mg==	694	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dockstore_dockstore/pr_3331.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU5NzE5Mg==	If we're going more RESTful, the method should be a @DELETE, and the path should be a resource/noun (don't have the verb "delete"). But if you do that, I think you need to make the parameters be query parameters rather than form parameters; something like: DELETE /workflows/github?repository=<repo>&reference=<ref>  If you do that, then technically you're supposed to return the deleted entity(ies), not a list of the remaining entities. Or you can optionally return a 204 with no content.	Code	No	FALSE												
dockstore/dockstore	3235	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MjM5Nw==	695	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dockstore_dockstore/pr_3235.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1MjM5Nw==	Was like this, but I'm on a mission to log all exceptions and I would also make this LOG.error	Other	Yes	FALSE												
dockstore/dockstore	3751	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMDQwMA==	693	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dockstore_dockstore/pr_3751.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMDQwMA==	commented code likely to be uncommented?	Code	No	FALSE												
dockstore/dockstore	3206	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MTQxNA==	696	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dockstore_dockstore/pr_3206.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA4MTQxNA==	Might be just me, but I think it'd look cleaner with String.format	Code	Yes	FALSE												
dockstore/dockstore	3839	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzNzMyNQ==	692	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dockstore_dockstore/pr_3839.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzNzMyNQ==	For future, you don't have to say "it is ", the test runner will automatically say something like: "expected: potato" "actual: tomato"	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted									
dogtagpki/jss	467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MzMyMA==	698	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dogtagpki_jss/pr_467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MzMyMA==	@jmagne So I'm confused here. The comment above says "trailer field ignored". I'm not entirely clear on how getSequence works, but if there was a trailer field, wouldn't it return an array of 4 DerValue elements? In particular readVector(...) uses startLen as the initialize size of the vector, but it'll grow if there are four fields. Shouldn't this read if (seq.length < 3 || seq.length > 4)?	Code	No	FALSE												
dogtagpki/jss	445	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEwMzE4NQ==	699	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dogtagpki_jss/pr_445.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEwMzE4NQ==	This'd be simpler if we wrote: if (!algName.contains("PSS")) { throw Exception(...) } and then we wouldn't need the body indented.	Code	Yes	FALSE												
dogtagpki/jss	579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExNzYzOQ==	697	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dogtagpki_jss/pr_579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExNzYzOQ==	Should this be a loop like in TestSSLEngine?	Code	No	FALSE												
dogtagpki/jss	445	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ4NjMyMA==	700	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dogtagpki_jss/pr_445.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ4NjMyMA==	Remove space above, and should this also throw NSAE?	Code	Yes	FALSE												
dotcms/core	17859	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA1ODY1Mw==	705	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dotcms_core/pr_17859.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODA1ODY1Mw==	Shouldn't we keep the former constructor for backward compatibility and deprecate it if necessary?	Code	No	FALSE												
dotcms/core	19735	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3NDUxNA==	701	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dotcms_core/pr_19735.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3NDUxNA==	I think this doc could be better	Javadoc	Yes	FALSE												
dotcms/core	18648	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzOTk0Mw==	703	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dotcms_core/pr_18648.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzOTk0Mw==	the checkout already nulls the inode	Code	Yes	FALSE												
dotcms/core	19191	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NTcyMQ==	702	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dotcms_core/pr_19191.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NTcyMQ==	I would replace the iterator with a normal for over categoriesList for (final String categoryId : categoriesList)	Code	Yes	TRUE	Complex, long, or inadequate logic	Loop	Accepted in text but not change in code									
dotcms/core	17962	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxNTQyNg==	704	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dotcms_core/pr_17962.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxNTQyNg==	You can use Logger.warnAndDebug method instead	Other	Yes	FALSE												
dspace/dspace	2824	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMTA0NQ==	708	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dspace_dspace/pr_2824.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwMTA0NQ==	I don't understand this JavaDoc description.  What is the "path parameter" you are talking about? It looks to me like this parseValue method is replacing the value of all the MetadatumDTOs by parsing out just the ending of the existing value (removing anything before a slash).  Is that correct?  If so, we should update this JavaDocs to say that...or give an example of what the values look like before and after this method runs.	Javadoc	Yes	FALSE												
dspace/dspace	3046	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDY3Njg0NA==	706	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dspace_dspace/pr_3046.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDY3Njg0NA==	Have we fully tested this SQL_INSERT on Postgres and Oracle?  I'm a little nervous about hardcoding this SQL as a string in Java, simply because it means we cannot easily customize it for Postgres vs Oracle as necessary. Normally, the process is to provide separate *.sql files under dspace-api/src/main/resources/org/dspace/storage/rdbms/sqlmigration/[db-type]/, rather than hardcoding SQL into Java. If this has not been tested on Oracle, I'd prefer we replace this logic with SQL files, even though I realize that'd require having two INSERT statements in each file (one for community & one for collection)	Code	No	FALSE												
dspace/dspace	2723	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc0ODIwNQ==	711	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dspace_dspace/pr_2723.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc0ODIwNQ==	Same as above. should use GroupBuilder, missing a context.restoreAuthSystemState(); and same question about commit() and reloadEntity() as above.	Code	No	FALSE												
dspace/dspace	2763	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2NjYwMw==	709	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dspace_dspace/pr_2763.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg2NjYwMw==	Again, look at the best practices of cleanup after a POST established in #2759	Code	No	FALSE												
dspace/dspace	2756	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NjU1MA==	710	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dspace_dspace/pr_2756.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NjU1MA==	As referred this name is confusing to me. Perhaps with a more detailed description I can help you find a better name.	Code	Yes	TRUE	Bad identifier	Class	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
dspace/dspace	2858	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwOTQ1OA==	707	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/dspace_dspace/pr_2858.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIwOTQ1OA==	Again, this should read from configuration.  So, have it set a default value for the tests instead by doing something like: configurationService.setPropery("sitemap.path", "sitemaps");	Code	No	FALSE												
eclipse-ee4j/jersey	4387	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5ODQyNA==	714	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-ee4j_jersey/pr_4387.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI5ODQyNA==	NettyInputStream is available through requestContext#getEnityStream. Removing available implementation is therefore a backward incompatible change	Code	No	FALSE												
eclipse-ee4j/jersey	4387	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMyMTExMQ==	715	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-ee4j_jersey/pr_4387.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMyMTExMQ==	call synchronized close() instead?	Code	No	FALSE												
eclipse-ee4j/jersey	4503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyODk4OA==	712	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-ee4j_jersey/pr_4503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyODk4OA==	@jansupol Is this proper way to propagate close from client to JerseyEventSink?	Code	No	FALSE												
eclipse-ee4j/jersey	4390	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5NTMxNA==	713	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-ee4j_jersey/pr_4390.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5NTMxNA==	Preferred ? may be rename the whole method to getPreferredCookie?	Code	Yes	FALSE												
eclipse-openj9/openj9	8351	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI5NzY5OQ==	722	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_8351.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI5NzY5OQ==	Suggested change                                                                                                                    String signature, Class annotationsClass, Class typeAnnotationsClass) throws Throwable {                                                                    String signature, Class<?> annotationsClass, Class<?> typeAnnotationsClass) throws Throwable {	Code	No	FALSE												
eclipse-openj9/openj9	8299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5ODA4Mg==	723	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_8299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA5ODA4Mg==	The condition must be Sidecar19-SE&(PLATFORM-mz31|PLATFORM-mz64).	Code	No	FALSE												
eclipse-openj9/openj9	10774	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NDk1OQ==	719	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_10774.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NDk1OQ==	: is only appropriate before the first option; subsequent options are separated by ,. Sorry, I see line 317 now.	Code	No	FALSE												
eclipse-openj9/openj9	8471	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3ODkwNQ==	721	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_8471.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY3ODkwNQ==	I wonder whether 8GB might be a more reasonable requirement, but I suppose we can try this and experiment later.	Code	No	FALSE												
eclipse-openj9/openj9	11088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4MzMwNA==	716	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_11088.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4MzMwNA==	We should also validate the lengths of the arrays are what we think they are, just in case the inline code doesn't allocate the arrays of correct sizes.	Code	No	FALSE												
eclipse-openj9/openj9	8230	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMzNjYwMA==	724	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_8230.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMzNjYwMA==	is there a chance that infoCache could be confused by localInterfacesOnly since the key is always this class? I didn't go thorough all use cases, but just wondering if such possibility has been considered.	Code	Yes	TRUE	Bad identifier	Parameter	Not Accepted									
eclipse-openj9/openj9	10742	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA4MDg3OA==	720	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_10742.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA4MDg3OA==	We have msg for start and finish. Additional msg for start and finish may not be needed. DupClassNameTest_0 Start Time: Tue Sep 29 08:21:07 2020 Epoch Time (ms): 1601392867209  DupClassNameTest_0 Finish Time: Tue Sep 29 08:21:09 2020 Epoch Time (ms): 1601392869218	Code	No	FALSE												
eclipse-openj9/openj9	11088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NzI1Nw==	717	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_11088.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3NzI1Nw==	Can we add an invocation count here to run the test twice: @Test(groups = {"level.sanity"}, invocationCount=2)  And then modify playlist.xml for jit_jitt to add a variation which runs -Xjit:count=1,disalbeAsyncCompilation. This will ensure everything in here is properly resolved.	Code	No	FALSE												
eclipse-openj9/openj9	11088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0NTE3MA==	718	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-openj9_openj9/pr_11088.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg0NTE3MA==	Can we instead use a non-built in type of non-trivial length. For example can use use:  public static class Vector {   long x;   long y;  }  instead. This will have more coverage and ensure we handle classes with at least two fields. An instance of the above class will be greater than the object alignment, so that is covered as well.	Code	No	FALSE												
eclipse-vertx/vert.x	3239	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMTIwMg==	730	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vert.x/pr_3239.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMTIwMg==	please start server like in other tests (using testAddress) so the test can run with other config such as native transport.	Code	No	FALSE												
eclipse-vertx/vert.x	3581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NTM3MA==	726	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vert.x/pr_3581.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NTM3MA==	instead here we should have something that will not block other threads when deleting the dir and just return, something like File dir; synchronized(this) {   if (cacheDir == null) {     return;   }   dir = cacheDir;   cacheDir = null; } if (dir.exists()) {   FileSystemImpl.delete(dir.toPath(), true); }	Code	No	FALSE												
eclipse-vertx/vert.x	3480	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzA1NQ==	727	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vert.x/pr_3480.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzA1NQ==	Suggested change                                                                                                   * @throws java.lang.ClassCastException if the value cannot be converted to Number                                                   * @throws java.lang.ClassCastException if the value is not a Number                                 There is no conversion, only casting.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve explanation about functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
eclipse-vertx/vert.x	3592	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3MjczMw==	725	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vert.x/pr_3592.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3MjczMw==	was it just for test something? otherwise we can remove the else, i guess.	Code	Yes	FALSE												
eclipse-vertx/vert.x	3443	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NTU4Mg==	728	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vert.x/pr_3443.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NTU4Mg==	the occupied server socket should be closed in a finally block surrounding this	Code	No	FALSE												
eclipse-vertx/vert.x	3358	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3ODY4MA==	729	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vert.x/pr_3358.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM3ODY4MA==	Do we need to document localAddress as well? Just like we did for remoteAddress?	Javadoc	Yes	FALSE												
eclipse-vertx/vertx-sql-client	642	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1Njk4MA==	735	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_642.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1Njk4MA==	rather reuse the existing io.vertx.pgclient.impl.util.Util class that contains already similar static methods	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	665	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5ODQ5Mg==	734	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_665.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM5ODQ5Mg==	There're a wide range of database servers supporting MySQL C/S protocol such as Percona, Vitess, TiDB... and their reponse version strings differ much. Don't worry about this, I will fix this in another PR since the version string is also used to control the EOF header flag setting in MySQL.	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	603	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMjQwNQ==	736	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_603.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjcyMjQwNQ==	for user/pass/database lets just check the length of the string without calling trim() (whitespace may still be valid characters)	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	750	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzAxMw==	732	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_750.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzAxMw==	BIT should be mapped to JDBCType.BIT	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	554	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNTQzOA==	737	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_554.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNTQzOA==	I like the statement / query / {collector}? / execution API flow.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Not Accepted									
eclipse-vertx/vertx-sql-client	538	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwODY4MA==	738	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_538.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwODY4MA==	Create an SQL template	Javadoc	Yes	FALSE												
eclipse-vertx/vertx-sql-client	503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3OTUyNQ==	739	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3OTUyNQ==	releasing should be in a finally block	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxMzU1NQ==	740	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYxMzU1NQ==	should the string be checked for whitespaces ?	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	741	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4Mzk0Nw==	733	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_741.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4Mzk0Nw==	that's a good idea indeed 😃	Code	No	FALSE												
eclipse-vertx/vertx-sql-client	817	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUxMDYyMA==	731	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse-vertx_vertx-sql-client/pr_817.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUxMDYyMA==	should be getArrayOfJsons	Code	Yes	FALSE												
eclipse/capella	149	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1NzU2NA==	744	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_capella/pr_149.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzI1NzU2NA==	The classID2DiagItemMap name is kinda deceiving this contains both SearchForDiagramItem and SearchForNoteItem ... change the name or split the cache into 2? Whichever makes more sense	Code	Yes	FALSE												
eclipse/capella	209	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDcyMQ==	743	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_capella/pr_209.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4MDcyMQ==	Revert this file if no modification.	Code	No	FALSE												
eclipse/capella	381	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ4MTIwNw==	741	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_capella/pr_381.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ4MTIwNw==	Should not we activate the cache from here	Code	No	FALSE												
eclipse/capella	381	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ2OTU2OQ==	742	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_capella/pr_381.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ2OTU2OQ==	rename to getSiblings (see my comment on the renaming of the EventContext class)	Code	Yes	FALSE												
eclipse/capella	141	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyMDQ0NQ==	745	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_capella/pr_141.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyMDQ0NQ==	same here	Code	No	FALSE												
eclipse/che-che4z-lsp-for-cobol	532	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDAzNw==	748	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_che-che4z-lsp-for-cobol/pr_532.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMDAzNw==	use copybookProcessingMode instead of syncType	Code	Yes	FALSE												
eclipse/che-che4z-lsp-for-cobol	580	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4NjM4Mw==	747	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_che-che4z-lsp-for-cobol/pr_580.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU4NjM4Mw==	Missing javadoc	Javadoc	Yes	FALSE												
eclipse/che-che4z-lsp-for-cobol	625	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE5NTAwNw==	746	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_che-che4z-lsp-for-cobol/pr_625.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE5NTAwNw==	You have copied this REPL twice in your program, but only the second copy contains an error. That means that you use the same 1 diagnostic tag in two places. I expect that the test fails, but it is not.	Code	No	FALSE												
eclipse/che-che4z-lsp-for-cobol	439	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MTYyNw==	749	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_che-che4z-lsp-for-cobol/pr_439.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk0MTYyNw==	I think you may remove this line, the stack will be printed on the next one	Code	No	FALSE												
eclipse/che-che4z-lsp-for-cobol	221	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4NTU3Nw==	750	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_che-che4z-lsp-for-cobol/pr_221.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA4NTU3Nw==	please replace with log	Other	Yes	FALSE												
eclipse/eclipse-collections	1012	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjMwMA==	753	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_1012.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI5MjMwMA==	I would recommend inlining 0 as it will be more self explanatory.	Code	Yes	FALSE												
eclipse/eclipse-collections	981	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2MTMzMg==	755	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_981.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2MTMzMg==	No need to have a PR here. You should have a reference of what it was replaced by as a link to code. Take a look at other deprecate examples in the project.	Javadoc	Yes	FALSE												
eclipse/eclipse-collections	801	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNTQzMg==	759	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_801.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNTQzMg==	Suggested change                                                                                                        Verify.assertThrows(UnsupportedOperationException.class, () -> this.newMap().withMap(Collections.emptyMap()));                                                        Verify.assertThrows(UnsupportedOperationException.class, () -> this.newMap().withMap(Maps.mutable.empty()));	Code	Discard	FALSE												
eclipse/eclipse-collections	996	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxMTg3Ng==	754	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_996.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxMTg3Ng==	Please drop the test prefix in the name.	Code	Yes	FALSE												
eclipse/eclipse-collections	938	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNzEwNQ==	756	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_938.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNzEwNQ==	One request, can you add a method doc similar to the one above method?	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add new JavaDoc block to describe the functionality of a code element	Yes		Yes		NONE	CommentRequired	NONE	MissingJavadocMethod
eclipse/eclipse-collections	1013	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0NzY5Mw==	752	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_1013.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0NzY5Mw==	I think we should add tests for both sets being empty, and for either being empty.	Code	No	FALSE												
eclipse/eclipse-collections	930	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5MQ==	757	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_930.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5MQ==	Hi @prathasirisha, I'm struggling on this name as well. On the one hand this name matches the parameters exactly. But I wonder if it would be better to name this repeatForOccurrences. @nikhilnanivadekar @motlin opinions?	Code	Yes	FALSE												
eclipse/eclipse-collections	1028	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwMzUyOQ==	751	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_1028.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcwMzUyOQ==	This is a breaking change albeit a correct change. But I would want it to be a part of a separate commit to show it on the Release notes.	Code	No	FALSE												
eclipse/eclipse-collections	909	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTg2Nw==	758	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse-collections/pr_909.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NTg2Nw==	isn't this always false? Also not tested?	Code	No	FALSE												
eclipse/eclipse.jdt.ls	1632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTU3Mjg1NA==	760	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse.jdt.ls/pr_1632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTU3Mjg1NA==	how about naming it as discardClassFileWorkingCopy?	Code	Yes	FALSE												
eclipse/eclipse.jdt.ls	1547	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjg1OA==	762	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse.jdt.ls/pr_1547.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjg1OA==	remove extra empty line	Code	Yes	TRUE	Inconsistent or disrupted formatting	Class	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/eclipse.jdt.ls	1560	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDM5NA==	761	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_eclipse.jdt.ls/pr_1560.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDM5NA==	we could avoid calling fCompilationUnit.findPrimaryType() several times in the same method, since a bunch of processing is happening behind the scene every time.	Code	No	FALSE												
eclipse/hono	2303	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI0MDA4OA==	763	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_hono/pr_2303.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI0MDA4OA==	test folder?	Code	No	FALSE												
eclipse/hono	1828	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY1OTkxNg==	766	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_hono/pr_1828.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY1OTkxNg==	the last known gateway id ?	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve explanation about functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/hono	1899	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk1MDI0Mw==	765	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_hono/pr_1899.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTk1MDI0Mw==	shouldn't we also throw the exception if the object is not null but is e.g. a number instead of a String? Isn't the devEUI field expected to be contained in each message and to hold a (Base64) String value?	Code	No	FALSE												
eclipse/hono	2009	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3MjA3MQ==	764	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_hono/pr_2009.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3MjA3MQ==	pageOffset corresponds to pages and not the place holder of the result in resultset. I think here it should be int i = pageOffset*PageSize+1. Eg. When the pageSize is set to 10 and pageOffset to 2, the result should start with 21st device in the resultset and not 2nd.	Code	No	FALSE												
eclipse/jetty.project	5218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3OTY1Ng==	771	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_5218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3OTY1Ng==	This doesn't seem to be used.	Code	Yes	TRUE	Unnecessary Code	Method	Not Accepted									
eclipse/jetty.project	4466	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY0ODAzOA==	773	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_4466.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY0ODAzOA==	This is, in general, wrong. If an application sets bufferSize=512, when we get _aggregate from the buffer pool, we get back a buffer with capacity 1024 (or different, depending on the buffer pool configuration). We must either not rely on the capacity of the buffer to return the aggregate space, or slice() the buffer returned by the buffer pool to the desired capacity.	Code	No	FALSE												
eclipse/jetty.project	5219	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTU0MQ==	770	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_5219.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzOTU0MQ==	When the integer goes overflows, you will start going the opposite way around the the pool	Code	No	FALSE												
eclipse/jetty.project	5397	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEzNzk2NQ==	769	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_5397.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEzNzk2NQ==	So this means that in the past, adding a listener when the ServletHandler had already started would not have worked, because it never would have been started or initialized - unless someone also happened to add a filter or servlet mapping.	Code	No	FALSE												
eclipse/jetty.project	5736	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MDI4MA==	767	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_5736.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MDI4MA==	This uses system default locale. Change to tlsProtocol.toUpperCase(Locale.US). This will produce undesired side effects on on some, non-US, systems.	Code	No	FALSE												
eclipse/jetty.project	4927	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1NTUzMA==	772	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_4927.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1NTUzMA==	The comment is wrong, should be "the custom header is unknown". I would just remove the comment as the code is clear and the comment inside the branch repeats the logic.	Comments	Yes	FALSE												
eclipse/jetty.project	5637	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1MjM4OQ==	768	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jetty.project/pr_5637.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1MjM4OQ==	Add javadocs with the precise semantic about the return value.	Javadoc	Yes	FALSE												
eclipse/jkube	235	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTk1OA==	776	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_235.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk2MTk1OA==	This test is redundant/duplicate of testExtractLargerVersion()	Code	Yes	FALSE												
eclipse/jkube	349	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ1Nzk2Nw==	775	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_349.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ1Nzk2Nw==	Do we always the guarantee that the 0th container is the app container? I think we should add a validation here to keep this logic robust. Please correct me if I'm wrong.	Code	No	FALSE												
eclipse/jkube	47	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTc2Nw==	779	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_47.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTc2Nw==	Rename this variable	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/jkube	45	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyMjkzNA==	780	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_45.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyMjkzNA==	Shall we remove the method also?	Code	Yes	FALSE												
eclipse/jkube	216	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MDU0MQ==	777	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_216.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MDU0MQ==	These urls can be converted into an array of strings and then we can use a loop for setting them here.. better than hardcoding	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Rewrite the code to avoid semantic duplicate method call	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/jkube	406	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzNzE2MA==	774	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_406.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzNzE2MA==	More irrelevant comments, I can read this in the code thanks to the helpful method name mergeMetadata If you do an import static of the method, it will be even more obvious.	Comments	Yes	FALSE												
eclipse/jkube	114	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNzcyMw==	778	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_jkube/pr_114.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjIzNzcyMw==	BTW, this comment is not accurate. You have to re-escape the \ character because String#split accepts a regex and \ is the escape sequence for Java regular expressions, so you have to re-escape it.	Comments	Yes	FALSE												
eclipse/kapua	3083	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTg0NA==	781	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_3083.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxOTg0NA==	Please delete all these annotations since I think they are not needed.	Comments	Yes	FALSE												
eclipse/kapua	2941	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NDE2MQ==	787	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_2941.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY0NDE2MQ==	insert try/catch block, the "stepdata.put" part can be left ouside the try/catch.	Code	No	FALSE												
eclipse/kapua	3003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzOTk2Ng==	783	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_3003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzOTk2Ng==	Please change the message to: "Expected value should be null" or something similar. "not_null" is not a valid comment.	String value	Yes	FALSE												
eclipse/kapua	3003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0MDk3OA==	784	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_3003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg0MDk3OA==	Please change the message to: "Expected and actual values are not the same" or something similar. "not_equals" is not a valid comment.	String value	Yes	FALSE												
eclipse/kapua	2935	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc2NjgzNQ==	788	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_2935.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc2NjgzNQ==	Please change this to "fail("Delay execution not successfull")".	Code	No	FALSE												
eclipse/kapua	3048	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2MzM5OA==	782	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_3048.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTA2MzM5OA==	Please leverage the Optional capabilities. i.e. Optional<Object> optional = Optional.ofNullable({somevalue}); Object object = optional.orElseThrow(Exception::new);	Code	No	FALSE												
eclipse/kapua	3003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzNzY3OA==	785	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_3003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzNzY3OA==	Please change the message to: "Expected value should not be null" or something similar. "not_null" is not a valid comment.	String value	Yes	FALSE												
eclipse/kapua	3003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY2NTQ4Nw==	786	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_kapua/pr_3003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY2NTQ4Nw==	Please change message to "Expected and actual values are not the same."	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Replace a string literal by a different meaning or a synonymous	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/rdf4j	2370	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU3OTMxNg==	789	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_rdf4j/pr_2370.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU3OTMxNg==	let's also add a variant for Callable<T> because depending on the type of tasks passed to an (Scheduled)Exectuor(Service) this is relevant when expecting results from that, e.g. using a Future. This method should also have a default implementation returning the original callable. That way an implementer can still implement this using a lambda even though the interface has two methods and hence is strictly no SAM interface.	Code	No	FALSE												
eclipse/rdf4j	1868	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxNzUxOQ==	791	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_rdf4j/pr_1868.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgxNzUxOQ==	Bit of a nitpick but we discourage wildcard imports - I suspect your IDE's code cleanup is being over-eager. Could you tweak it to not use wildcards (or at least until you hit, say, 99 entries :))?	Code	Yes	FALSE												
eclipse/rdf4j	1957	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0NTkyOA==	790	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_rdf4j/pr_1957.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0NTkyOA==	Same here.	Code	Discard	FALSE												
eclipse/sw360	976	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE0MjQxMw==	792	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_sw360/pr_976.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE0MjQxMw==	Use Platform-Independent Line Separators wherever possible. System.lineSeparator()	Code	No	FALSE												
eclipse/sw360	861	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3Njg3OQ==	793	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_sw360/pr_861.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc3Njg3OQ==	Maybe we can make this method and setCustomFieldsEdit() Generic for Project, Component, Release	Code	No	FALSE												
eclipse/sw360	776	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI3NTU3OA==	795	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_sw360/pr_776.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI3NTU3OA==	Please create common logic to validate Set of Ids and place in parent class AttachementAwareDatabaseHandler So that it can be reused. Similarly for fields containing only IDs - String Maybe something like below code. public static <T, R extends DatabaseRepository> boolean isAllIdInSetExists(Set<String> setOfIds, R repository) {         long nonExistingIdCount = 0;         if (setOfIds != null) {             nonExistingIdCount = setOfIds.stream().filter(id -> CommonUtils.isNotNullEmptyOrWhitespace(id))                     .filter(id -> {                         T obj = (T) repository.get(id);                         return Objects.isNull(obj);                     }).count();         }          if (nonExistingIdCount > 0)             return false;          return true;     }	Code	No	FALSE												
eclipse/sw360	818	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1MDgzOA==	794	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_sw360/pr_818.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1MDgzOA==	Kindly consider adding some method level comments. And if it can be moved to database handlers or DatabaseHandlerUtil instead of repository.	Javadoc	Yes	FALSE												
eclipse/xtext-core	1510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2MDgwNg==	797	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2MDgwNg==	I'd go for org.junit.jupiter.api.extension.ExtensionConfigurationException instead.	Code	No	FALSE												
eclipse/xtext-core	1510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwOTY3NA==	798	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUwOTY3NA==	Cosmetics: Spacing looks inconsistent.	Code	Yes	FALSE												
eclipse/xtext-core	1417	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNzYyMw==	804	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1417.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxNzYyMw==	Unneeded parentheses	Code	Yes	FALSE												
eclipse/xtext-core	1417	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxODM1Nw==	805	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1417.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxODM1Nw==	Unneeded parentheses	Code	Yes	FALSE												
eclipse/xtext-core	1417	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNTQwNg==	806	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1417.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODkyNTQwNg==	Collections.emptyMap	Code	No	FALSE												
eclipse/xtext-core	1437	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1ODMyMw==	801	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1437.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg1ODMyMw==	I prefer the version on master.	Code	No	FALSE												
eclipse/xtext-core	1437	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0MzU2Mg==	802	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1437.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0MzU2Mg==	@link on this and the next line please	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Not Accepted									
eclipse/xtext-core	1507	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NzM4NA==	799	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1507.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM0NzM4NA==	This will break if the region spans multiple lines. If the endOffset if larger than the document lenght, end should simply point the the last position in the document.	Code	No	FALSE												
eclipse/xtext-core	1507	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1MTAyMA==	800	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1507.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM1MTAyMA==	map(Either::forRight).collection(..) ?	Code	No	FALSE												
eclipse/xtext-core	1533	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzc5Mg==	796	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1533.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwMzc5Mg==	looks like we are all but consistent on how to write life cycle	Javadoc	Yes	FALSE												
eclipse/xtext-core	1423	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzOTA4OA==	803	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-core/pr_1423.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzOTA4OA==	Update date	Javadoc	Yes	FALSE												
eclipse/xtext-eclipse	1374	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MzQyNA==	812	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-eclipse/pr_1374.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MzQyNA==	No need for Lists.newArrayList	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace Lists.newArrayList by Arrays.asList	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/xtext-eclipse	1483	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMTA5Mw==	808	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-eclipse/pr_1483.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMTA5Mw==	Collections.emptyList would do.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace method calling chain by existing API	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/xtext-eclipse	1420	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NjA4MA==	809	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-eclipse/pr_1420.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE5NjA4MA==	((XtextResource) expression.eResource()) -> (XtextResource) expression.eResource()	Code	Yes	FALSE												
eclipse/xtext-eclipse	1592	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE0MTc0NA==	807	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-eclipse/pr_1592.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE0MTc0NA==	set a space before - and +	Code	Yes	FALSE												
eclipse/xtext-eclipse	1387	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIzNDU4NQ==	811	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-eclipse/pr_1387.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIzNDU4NQ==	Typo in variable name	Code	Yes	TRUE	Bad identifier	Variable	Accepted	Modify an identifier to fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
eclipse/xtext-eclipse	1414	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwNzIxOQ==	810	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-eclipse/pr_1414.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMwNzIxOQ==	Arrays.asList	Code	Discard	FALSE												
eclipse/xtext-extras	612	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzNDUyOA==	813	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-extras/pr_612.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzNDUyOA==	Unneeded parentheses	Code	Yes	FALSE												
eclipse/xtext-extras	586	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMDQ4MA==	815	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-extras/pr_586.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMDQ4MA==	Can be final	Code	No	FALSE												
eclipse/xtext-extras	598	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMjM1Mg==	814	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/eclipse_xtext-extras/pr_598.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMjM1Mg==	Strings	Code	No	FALSE												
edx/edx-app-android	1488	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM5MTAyNw==	818	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1488.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM5MTAyNw==	better to use putString.	Code	Discard	FALSE												
edx/edx-app-android	1488	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5ODQ3NA==	819	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1488.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA5ODQ3NA==	appear  -> appears	Javadoc	Yes	FALSE												
edx/edx-app-android	1436	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ1MDU3MA==	820	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1436.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ1MDU3MA==	Extra import needs to be removed.	Code	Yes	FALSE												
edx/edx-app-android	1362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1MzkyMA==	823	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1MzkyMA==	Please describe some use case for FLAG_ACTIVITY_REORDER_TO_FRONT, the application is working fine without this.	Code	Yes	FALSE												
edx/edx-app-android	1498	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNDcwMA==	816	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1498.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNDcwMA==	unused constant.	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		UrF: Unread field (URF_UNREAD_FIELD); UrF: Unread public/protected field (URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD)	NONE	NONE	NONE
edx/edx-app-android	1419	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3MjkzOA==	821	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1419.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3MjkzOA==	Please remove KITS, CRASHLYTICS, ANSWER as well	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		UrF: Unread field (URF_UNREAD_FIELD)	UnusedPrivateField	Unused "private" fields should be removed	NONE
edx/edx-app-android	1405	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc5ODQxNg==	822	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1405.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc5ODQxNg==	This won't log the exception to Crashlytics as a non-fatal, you'll have to call the function as follows:  logger.error(e, true);	Code	No	FALSE												
edx/edx-app-android	1498	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNDYyOQ==	817	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/edx_edx-app-android/pr_1498.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNDYyOQ==	name should be course_enrollment.	Code	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Change magic value to adhere to project standards	Yes		Yes		NONE	NONE	NONE	NONE
elastic/apm-agent-java	1169	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NzE5Mw==	824	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_apm-agent-java/pr_1169.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NzE5Mw==	does it allows to make log4j plugin management work with relocation ? If yes, it might be a good idea to add a comment to make it a bit more explicit.	Comments	Yes	FALSE												
elastic/apm-agent-java	1117	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI5OTUwOQ==	826	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_apm-agent-java/pr_1117.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI5OTUwOQ==	Suggested change                                                                                                            "   bbbb b      ",                                                            " a aaaa aa a a ",                                                            "1 2    2  3 3 1"                                                            "   bbbb b      ",                                                            " a aaaa a a a ",                                                            "1 2    2 3 3 1"                                 Just to make sure that one measurement is enough	Code	No	FALSE												
elastic/apm-agent-java	1040	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NjI5MA==	827	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_apm-agent-java/pr_1040.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2NjI5MA==	why we have todos left here ? should we implement them or leave an empty impl. ?	Comments	No	FALSE												
elastic/apm-agent-java	1150	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMTk4MQ==	825	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_apm-agent-java/pr_1150.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMTk4MQ==	It will be great to get rid of this state, just make sure that the combination of discardRequested, discardable  and sampled provide the same meaning as noop.	Code	No	FALSE												
elastic/elasticsearch	63281	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MjQ3Mg==	829	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_elasticsearch/pr_63281.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA1MjQ3Mg==	nit: new line after end of method	Code	Yes	FALSE												
elastic/elasticsearch	55493	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3Mzg2OQ==	830	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_elasticsearch/pr_55493.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE3Mzg2OQ==	Maybe it isn't worth having the method named registerBareAggregatorRegistrar now.	Code	Yes	FALSE												
elastic/elasticsearch	65026	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMxNDk0MA==	828	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_elasticsearch/pr_65026.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDMxNDk0MA==	You could place this method in Percentile class and then re-use it in other places as well.	Code	No	FALSE												
elastic/elasticsearch	52577	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwMjA5OQ==	832	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_elasticsearch/pr_52577.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUwMjA5OQ==	I think this can be private, as well as shouldCountUnlabeled.	Code	No	FALSE												
elastic/elasticsearch	52822	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1Mzk2OQ==	831	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/elastic_elasticsearch/pr_52822.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1Mzk2OQ==	These two functions should not be part of the interface, checkCancelled should be enough	Code	No	FALSE												
enonic/xp	7900	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MzE1Ng==	839	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_7900.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MzE1Ng==	@PublicAPI instead of @beta	Other	Yes	TRUE	Incomplete or inadequate code documentation	Annotation	Not Accepted									
enonic/xp	8246	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0MzIwMg==	835	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_8246.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0MzIwMg==	use Enum::name as it is guaranteed to be stable	Code	No	FALSE												
enonic/xp	7980	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4MTkxOA==	837	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_7980.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM4MTkxOA==	It should not be a part of core-api	Code	No	FALSE												
enonic/xp	7980	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MTg4Mg==	838	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_7980.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk4MTg4Mg==	@vbradnitski the value can be NULL, will be better to use PRIVATE.name().equals(value) or Objects.equals(PRIVATE.name(), value). Also you can use ProjectReadAccessType.valueOf(...)	Code	No	FALSE												
enonic/xp	8531	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3MTQ5MA==	833	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_8531.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3MTQ5MA==	Do we use this field at all? We should not, probably as we should not trust the caller.	Code	No	FALSE												
enonic/xp	7982	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2MDgwNg==	836	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_7982.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2MDgwNg==	Should be List	Code	No	FALSE												
enonic/xp	8527	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MDU3Nw==	834	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/enonic_xp/pr_8527.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg0MDU3Nw==	Don't we want exception here?	Code	No	FALSE												
envoyproxy/envoy-mobile	992	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MDU1OA==	841	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/envoyproxy_envoy-mobile/pr_992.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MDU1OA==	Suggested change                                                                                                    engine.getStreamClient().newStreamPrototype()                                                        .setOnResponseHeaders((responseHeaders, endStream) -> {                                                    engine.getStreamClient()                                                        .newStreamPrototype()                                                        .setOnResponseHeaders((responseHeaders, endStream) -> {	Code	Yes	FALSE												
envoyproxy/envoy-mobile	714	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0NzAyMQ==	845	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/envoyproxy_envoy-mobile/pr_714.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA0NzAyMQ==	I considered putting all of the dns settings into a struct (same on iOS), but ultimately decided to keep this flat for this change. I think if this lists keeps growing we need to first think about how we are going to manage config as it gets more unruly. But for now keeping it flat seemed the least intrusive change.	Code	No	FALSE												
envoyproxy/envoy-mobile	989	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDU5MA==	842	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/envoyproxy_envoy-mobile/pr_989.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDU5MA==	Same as above	Code	Discard	FALSE												
envoyproxy/envoy-mobile	979	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4ODMwNA==	843	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/envoyproxy_envoy-mobile/pr_979.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4ODMwNA==	This would crash if the validation returns false?	Code	No	FALSE												
envoyproxy/envoy-mobile	979	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MDQzNA==	844	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/envoyproxy_envoy-mobile/pr_979.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM5MDQzNA==	what is capital V void?	Code	No	FALSE												
envoyproxy/envoy-mobile	1138	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4OTY5Nw==	840	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/envoyproxy_envoy-mobile/pr_1138.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4OTY5Nw==	Suggested change                                                                                                  private ReferenceQueue                                                      refQueue; // References are automatically enqueued when the gc flags them as unreachable.                                                  private Set refMaintainer; // Maintains references in the object graph while we wait for them to                                                                             // be enqueued.                                                  private RefQueueThread                                                      refQueueThread; // Blocks on the reference queue and calls the releaser of queued references.                                                  // References are automatically enqueued when the gc flags them as unreachable.                                                  private ReferenceQueue refQueue;                                                                                                  // Maintains references in the object graph while we wait for them to                                                  // be enqueued.                                                  private Set refMaintainer;                                                                                                  // Blocks on the reference queue and calls the releaser of queued references.                                                  private RefQueueThread refQueueThread;	Code	Yes	TRUE	Inconsistent or disrupted formatting	Attribute	Accepted	Move code elements to their own line	Yes		Yes		NONE	NONE	Comments should not be located at the end of lines of code	TrailingComment
epam/cloud-pipeline	1665	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5ODIzOQ==	846	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/epam_cloud-pipeline/pr_1665.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5ODIzOQ==	Pool label exists only on kubernetes nodes, so we shall check it in checkLabels method, which operates kubernetes Node instead of AWS VirtualMachine	Code	No	FALSE												
epam/cloud-pipeline	1478	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5NjcwMQ==	849	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/epam_cloud-pipeline/pr_1478.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA5NjcwMQ==	Could you please make this method static?	Code	No	FALSE												
epam/cloud-pipeline	1544	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2OTAyOQ==	847	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/epam_cloud-pipeline/pr_1544.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI2OTAyOQ==	Could you add a simple tests for methods with AclTree annotation?	Code	No	FALSE												
epam/cloud-pipeline	1160	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMTQ3Ng==	850	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/epam_cloud-pipeline/pr_1160.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMwMTQ3Ng==	As I can see from the test case description, "EPMCMBIBPC-2662" depends on "EPMCMBIBPC-2658". Shouldn't we make this test dependent on EPMCMBIBPC-2658?	Code	No	FALSE												
epam/cloud-pipeline	1481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5ODQzNA==	848	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/epam_cloud-pipeline/pr_1481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5ODQzNA==	Could you please use generic type to return List<T> rather then List<Object>. It probably is a good idea because it increases the possibility that this method will be reused.	Code	No	FALSE												
essentialsx/essentials	3337	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1NzE1NA==	856	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3337.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1NzE1NA==	Commands that have * as their first argument seem not to work, for example /clear * ** or /clear * dirt 1.	Code	No	FALSE												
essentialsx/essentials	3337	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI3MTc0Nw==	857	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3337.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI3MTc0Nw==	Why protected?	Code	No	FALSE												
essentialsx/essentials	3744	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2OTMwNA==	851	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3744.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2OTMwNA==	is there a reason you didn't make a paper specific provider? also has this been tested on 1.8.8-1.16.4?	Code	No	FALSE												
essentialsx/essentials	3702	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4Mjk2Ng==	853	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3702.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4Mjk2Ng==	Best to return BalanceTop here so people using Essentials will import the API class rather than impl	Code	No	FALSE												
essentialsx/essentials	3710	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjE3NTUyMQ==	852	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3710.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjE3NTUyMQ==	...after my previous review I realised this would've returned a translated string in the past. Not sure if it's worth doing the mailFormat translation, keeping this hardcoded as it is now, or undoing this change entirely Yes I'm indecisive shh	Code	No	FALSE												
essentialsx/essentials	3490	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5Njk5NQ==	854	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3490.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5Njk5NQ==	Suggested change                                                                                                    private boolean cancelled;                                                    private boolean cancelled = false;	Code	Yes	TRUE	Complex, long, or inadequate logic	Attribute	Not Accepted									
essentialsx/essentials	3415	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4MzQ4MQ==	855	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/essentialsx_essentials/pr_3415.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI4MzQ4MQ==	You can do here a new argument to clear all lines for lazy peoples. EDIT: reset -> clear	Code	No	FALSE												
expediagroup/circus-train	175	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDUyNw==	859	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_175.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDUyNw==	remove the if just set the default.	Code	Yes	FALSE												
expediagroup/circus-train	175	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDY2Mg==	860	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_175.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDY2Mg==	Suggested change                                                                                                    TransferManagerConfiguration tmConfig = transferManager.getConfiguration();                                                    TransferManagerConfiguration managerConfig = transferManager.getConfiguration();	Code	Yes	FALSE												
expediagroup/circus-train	175	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzU3OQ==	861	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_175.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NzU3OQ==	Can we just have a simple test class for this?	Code	No	FALSE												
expediagroup/circus-train	165	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcyOTc0OQ==	863	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_165.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTcyOTc0OQ==	Isn't this also a change in behaviour that we should mention in the CHANGELOG? HiveDiff will now process the partitions with newest first while in the past it was oldest first?	Code	No	FALSE												
expediagroup/circus-train	208	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MTU2Mg==	858	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_208.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MTU2Mg==	OMG, not sure how this slipped through but we don't want * imports, please get your IDE to expand these.	Code	Yes	TRUE	Complex, long, or inadequate logic	Import	Accepted	Expand the imports	Yes		Yes		NONE	NONE	Wildcard imports should not be used	AvoidStarImport
expediagroup/circus-train	163	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyMjA2NQ==	864	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_163.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyMjA2NQ==	Suggested change                                                                                                    Map<String, Object> mergeCopierOptions = new HashMap<>(TableReplication                                                    Map<String, Object> mergedCopierOptions = new HashMap<>(TableReplication	Code	Yes	FALSE												
expediagroup/circus-train	175	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MjYyOQ==	862	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/expediagroup_circus-train/pr_175.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MjYyOQ==	Move this to line 42, there's no point getting the duration if this is going to fail.	Code	No	FALSE												
fabric8io/kubernetes-client	2276	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwMTYwMw==	869	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2276.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwMTYwMw==	Is this still needed?	Code	Yes	FALSE												
fabricmc/fabric	641	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5ODYzOQ==	880	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_641.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU5ODYzOQ==	Suggested change                                                                                                    this.textFieldWidget.setEditableColor(16711680);                                                    this.textFieldWidget.setEditableColor(0xFF0000);	Code	Yes	FALSE												
fabricmc/fabric-loader	288	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NDM0OQ==	890	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_288.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTY2NDM0OQ==	Is it safe to call the black board at this point, I wonder	Code	No	FALSE												
fabricmc/fabric-loader	205	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3ODk4NA==	896	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_205.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI3ODk4NA==	Why not String.join(", ", missingMods)	Code	Yes	FALSE												
faforever/downlords-faf-client	1803	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0NzY2Ng==	898	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/faforever_downlords-faf-client/pr_1803.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0NzY2Ng==	Suggested change                                                                                                    }                                                    else {                                                    } else {                                 Please make sure that auto-formatting is enabled	Code	Yes	FALSE												
fcrepo/fcrepo	1746	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2MTk0OA==	903	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1746.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2MTk0OA==	In the code that you were working on last week, there was a case for if (updateClass.equals(UpdateModify.class)) here as well. Is that not needed?	Code	No	FALSE												
fcrepo/fcrepo	1650	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxNjQ4NA==	906	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1650.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYxNjQ4NA==	That seems like a reasonable optimization.	Comments	No	FALSE												
fcrepo/fcrepo	1786	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxOTIxOQ==	902	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1786.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxOTIxOQ==	These variables are getting confused. Some of them are property names and some of them are default property values. They should be visually separate in the file.	Code	Yes	FALSE												
firebase/firebase-admin-java	479	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MzkyOQ==	913	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-admin-java/pr_479.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MzkyOQ==	Again this is maybe just my own confusion, but -- I can see how a developer might want to automate the setting of a list of conditional values.  But isn't the actual value sort of set at runtime, after evaluating the conditions?	Code	No	FALSE												
firebase/firebase-admin-java	498	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5Njg2Mg==	911	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-admin-java/pr_498.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc5Njg2Mg==	ListVersionsPage to be consistent with the naming convention used in other APIs.	Code	Yes	FALSE												
firebase/firebase-admin-java	501	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5ODM2Mw==	910	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-admin-java/pr_501.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5ODM2Mw==	Nit: Some of these can be split into separate test case with a bit of effort and extra RPCs (I'll leave it to you to decide whether that's worth it)  validate can be easily turned into a separate test case getAtVersion and rollback can also be made into separate test cases if we are willing to run a few extra get and publish operations.	Code	Yes	FALSE												
firebase/firebase-android-sdk	2073	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA==	917	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_2073.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkwNjgwMA==	What can a model without a file be use for?	Code	No	FALSE												
firebase/firebase-android-sdk	1827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzMzMxNw==	919	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_1827.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzMzMxNw==	This is not a very good exception, let's tell the developer what is wrong in each case and how they could fix it.	Code	Yes	TRUE	Inadequate logging and monitoring	Try-Catch	Accepted	Change generic exception to a specific	Yes		Yes		NONE	SignatureDeclareThrowsException	Generic exceptions should never be thrown	NONE
flutter/flutter-intellij	5121	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3OTkyOA==	923	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/flutter_flutter-intellij/pr_5121.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3OTkyOA==	nit: this is java. Keep private and provide getDevToolsInstance()	Code	No	FALSE												
flutter/flutter-intellij	5011	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzUyNg==	925	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/flutter_flutter-intellij/pr_5011.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzUyNg==	typo - on the	Comments	Yes	FALSE												
foundationdb/fdb-record-layer	988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMzQ3NA==	936	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMzQ3NA==	Suggested change                                                                                                 * Interface for classes to implement entities which can be correlated to some other entity (usually a {@link Quantifier})                                                 * that is disambiguated by means of a {@link CorrelationIdentifier}. Objects of implementors of this class are said                                                 * to be correlated to a quantifier {@code q} if the identifiers returned by {@link #getCorrelatedTo()} set contain                                                 * the alias identifier that {@code q} uses.                                                 * A <em>correlated</em> entity is one which can only be evaluated as a function of some input (usually a {@link Quantifier}) from its relational parent.                                                 * Since a correlated entity can have multiple correlations to similar quantifiers, a correlation is disambiguated by a {@link CorrelationIdentifier}. Correlated entities are said                                                 * to be correlated to a quantifier {@code q} if the identifiers returned by {@link #getCorrelatedTo()} set contain                                                 * the correlation identifier that {@code q} uses.	Javadoc	Yes	FALSE												
futurewei-cloud/alcor	423	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM5OTkzOQ==	942	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_423.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM5OTkzOQ==	Which interface is in use? DataPlaneService or DataPlaneServiceNew :-)	Code	No	FALSE												
futurewei-cloud/alcor	219	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3OTcxNA==	947	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_219.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY3OTcxNA==	Please store it in a constant.	Code	Yes	FALSE												
futurewei-cloud/alcor	307	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUwOTMwOA==	943	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_307.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUwOTMwOA==	Very decent comment!	Comments	No	FALSE												
gchq/gaffer	2343	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzMTkyOA==	950	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2343.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzMTkyOA==	Might be worth adding some integration tests into the federated store to check the behaviour	Code	No	FALSE												
gchq/gaffer	2349	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNjg4NQ==	949	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2349.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNjg4NQ==	Here and in other places, I'd remove the static nulls and just put null. I think the code is pretty clear without the need for static nulls	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove null constants	Yes		Yes		UwF: Field only ever set to null (UWF_NULL_FIELD)	NONE	NONE	ExplicitInitialization
gchq/gaffer	2221	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc4MzE4NQ==	957	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2221.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc4MzE4NQ==	Perhaps create a default black list and store that in another class, otherwise this list here could get rather big and messy.	Code	Yes	FALSE												
geonetwork/core-geonetwork	4878	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMDEyMQ==	962	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_4878.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMwMDEyMQ==	Incomplete header.	Comments	Yes	FALSE												
geoserver/geoserver	4547	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1ODM1OQ==	965	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geoserver_geoserver/pr_4547.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE1ODM1OQ==	What was removed was OSHI tracking its own ticks here. You could keep track of the ticks yourself imilar to how you do for PER_CPU_LOAD and keep this.	Code	No	FALSE												
geotools/geotools	2780	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTkwNg==	977	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_2780.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTkwNg==	Good research! sidebar: Is @Private annotation useful?	Other	No	FALSE												
getodk/collect	3625	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc0NjQxMQ==	985	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_3625.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc0NjQxMQ==	Isn't this whole class unused now?	Code	Yes	FALSE												
getodk/collect	4025	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNTE4NQ==	980	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_4025.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcxNTE4NQ==	I think the action here should just be "Url". What we care about is that the user saw a url question.	Code	No	FALSE												
getodk/collect	4035	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1Mzc3OQ==	979	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_4035.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ1Mzc3OQ==	I think we could avoid the array initialization here with an if-else on the formMediaPath != null and just returning emptyList in the else case. The new File[0] going into the asList confused me.	Code	Yes	FALSE												
gluonhq/substrate	273	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEwNjI2NA==	991	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gluonhq_substrate/pr_273.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzEwNjI2NA==	Issue found: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.	Code	Yes	FALSE												
gluonhq/substrate	366	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0NTQ3NQ==	987	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gluonhq_substrate/pr_366.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE0NTQ3NQ==	A better location for the helper classes would be com.gluonhq.substrate.util.linux. We have all helper files for iOS in a similar directory.	Code	No	FALSE												
gluonhq/substrate	335	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5ODgxNg==	990	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gluonhq_substrate/pr_335.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5ODgxNg==	That sounds like the operation is halted, but from the code it seems you're continuing trying to solve this. It would be good if the developer got feedback (e.g. "You will know be shown a dialog" or so)	String value	Yes	FALSE												
gocd/gocd	7663	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3OTY1Nw==	996	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_7663.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk3OTY1Nw==	@kritika-singh3 where has this check moved? This check ensured a config repo is invalid if the material config within is invalid.	Code	No	FALSE												
google/ground-android	552	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODIwMg==	1003	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_552.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3ODIwMg==	This can return Completable instead.	Code	No	FALSE												
googleapis/gapic-generator	3305	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU3NTQ3Nw==	1006	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_gapic-generator/pr_3305.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU3NTQ3Nw==	tiny nit: What about: "Streaming methods only valid for gRPC transport"	String value	Yes	FALSE												
googleapis/gapic-generator	3275	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5MzgyMw==	1007	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_gapic-generator/pr_3275.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5MzgyMw==	can we also test for transport=rest?	Code	No	FALSE												
googleapis/java-bigquery	558	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2OTc3Ng==	1015	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_558.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg2OTc3Ng==	maybe we should name this string ddl? since this is a ddl create view sample?	Code	Yes	FALSE												
googleapis/java-bigquery	618	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1OTQ3Mg==	1014	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_618.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1OTQ3Mg==	could we setBody to something else? I don't really understand what the string here means... maybe something straightforward such as "new body text"?	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted									
googleapis/java-bigtable	299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTE2OA==	1025	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTE2OA==	Same notes as BulkMutation, but you dont need to comment about idempotency this rpc is not retried	Javadoc	Yes	FALSE												
googleapis/java-bigtable	299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTI5NQ==	1026	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTI5NQ==	same as ConditionalRowMutation	Javadoc	Discard	FALSE												
googleapis/java-bigtable	305	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjM2Ng==	1022	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_305.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY4NjM2Ng==	I think we can clean these up.	Code	Yes	FALSE												
googleapis/java-bigtable	305	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExMDkxMg==	1023	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_305.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExMDkxMg==	javadoc please	Javadoc	Yes	FALSE												
googleapis/java-bigtable	397	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTcwNQ==	1019	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_397.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MTcwNQ==	why not just bubble the exception up?	Code	No	FALSE												
googleapis/java-bigtable	347	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDIyOA==	1021	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_347.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDIyOA==	Please remove the printlns. If they are needed then maybe convert them into log.trace() or debug()	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Accepted	Remove log	Yes		Yes		NONE	SystemPrintln	Standard outputs should not be used directly to log anything	NONE
googleapis/java-bigtable	371	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0MTE3Mg==	1020	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_371.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE0MTE3Mg==	Is it safe to throw exceptions here? will grpc cancel the underlying call? will the supplied listener to be notified of the failure?	String value	Yes	FALSE												
googleapis/java-bigtable	305	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzUxMw==	1024	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigtable/pr_305.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzUxMw==	2020 (for this and other files)	Javadoc	Yes	FALSE												
googleapis/java-spanner	576	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3MzY5NA==	1027	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-spanner/pr_576.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ3MzY5NA==	nit: same as above, combine the writeAtLeastOnce and writeAtLeastOnceWithOptions?	Code	No	FALSE												
googleapis/java-spanner	576	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMDQyMw==	1028	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-spanner/pr_576.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyMDQyMw==	Suggested change                                                                                                          getExecuteSqlRequestBuilderWithTxnTag(                                                              statement,                                                              QueryMode.NORMAL,                                                              Options.fromUpdateOptions(options),                                                              this.options.hasTag() ? this.options.tag() : null);                                                          getExecuteSqlRequestBuilder(                                                              statement, QueryMode.NORMAL, Options.fromUpdateOptions(options));	Code	Discard	FALSE												
googleapis/java-spanner	54	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzU3OQ==	1030	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-spanner/pr_54.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzU3OQ==	Same as above regarding the package.	Code	Discard	FALSE												
googleapis/java-spanner	81	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NTg0MQ==	1029	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-spanner/pr_81.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NTg0MQ==	Even though tryNext() returns an enum, can we add a default case with a fallthough comment along the lines of "this should never happen"? Or even an exception in case the enum grows over time? https://google.github.io/styleguide/javaguide.html#s4.8.4.3-switch-default	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Accepted	Replace the while and switch structure by an alternative switch with default	Yes		Yes		NONE	NONE	NONE	NONE
googlecloudplatform/bigquery-utils	101	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ0MDkxNA==	1036	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_101.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ0MDkxNA==	Please add some comments about those member variables.	Comments	Yes	FALSE												
googlecloudplatform/bigquery-utils	141	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxNjQ0MQ==	1032	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_141.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxNjQ0MQ==	nit: TODO	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Conditional	Accepted	Remove TODO code comment for tasks that have already been performed	Yes		Yes		NONE	NONE	Track uses of "TODO" tags	TodoComment
googlecloudplatform/bigquery-utils	75	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ0ODI3Mw==	1039	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_75.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ0ODI3Mw==	Rather than give these a QV prefix can we change this to be a custom package called verification or query.verification?	Code	Yes	FALSE												
googlecloudplatform/bigquery-utils	106	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2OTY2Mg==	1035	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_106.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2OTY2Mg==	I would inline this into the return and then remove the {} from the lambda so it looks like jobInfo -> jobInfo.getConfiguration().getQuery() (I think this is valid syntax)	Code	Yes	FALSE												
googlecloudplatform/bigquery-utils	86	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNTEzMQ==	1038	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_86.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNTEzMQ==	nit: "Unable" and ..."the generated parser**.** "	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Change literal to adhere to project standards	Yes		Yes		NONE	NONE	NONE	NONE
googlecloudplatform/bigquery-utils	138	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNjc2NQ==	1033	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_138.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzNjc2NQ==	Instead of adding it one by one, is it possible to do it in a loop to add all dialects Calcite has. Therefore, when Calcite has new dialect, it will be automatically included?	Code	No	FALSE												
googlecloudplatform/bigquery-utils	100	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYwNTAwOQ==	1037	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_100.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYwNTAwOQ==	Its recommended to use UPPER_SNAKE_CASE for constant variable names. "TABLE_FETCH_SIZE"	Code	Yes	FALSE												
googlecloudplatform/bigquery-utils	123	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MjExNw==	1034	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_123.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MjExNw==	It's not clear to me how LocationTracker works. It seems that for each pair of (line, column), location.get(line - 1).get(column-1) will return the location. But I don't understand what the location value represents. It's an integer, so I guess it mean the index in the input string?	Javadoc	Yes	FALSE												
googlecloudplatform/bigquery-utils	159	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0OTk0NA==	1031	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_bigquery-utils/pr_159.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0OTk0NA==	anc' -> 'and'	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
googlecloudplatform/cloud-opensource-java	1523	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5NTcyMg==	1041	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_cloud-opensource-java/pr_1523.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU5NTcyMg==	if block isn't needed	Code	Yes	FALSE												
googlecloudplatform/cloud-opensource-java	1535	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzMzkwNA==	1040	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_cloud-opensource-java/pr_1535.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzMzkwNA==	no need to use quote marks here.	Comments	Yes	FALSE												
googlecloudplatform/fda-mystudies	735	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjE3Nw==	1044	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_fda-mystudies/pr_735.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjE3Nw==	These are not used and already stored in TestDataHelper/TestConstants so please remove	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		UuF: Unused public or protected field (UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD); UrF: Unread public/protected field (URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD)	NONE	NONE	NONE
googlecloudplatform/fda-mystudies	669	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5OTE3Nw==	1046	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_fda-mystudies/pr_669.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5OTE3Nw==	Suggested change                                                                                                      403, "EC-989", HttpStatus.FORBIDDEN.toString(), "Can not add participant to open study"),                                                      403, "EC-989", HttpStatus.FORBIDDEN.toString(), "Cannot add participant to open study"),	String value	Yes	FALSE												
googlecloudplatform/fda-mystudies	1394	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDQxMQ==	1042	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_fda-mystudies/pr_1394.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDQxMQ==	nit: your method seems to be returning a date range, so getDateRange might be a better name.	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
googlecloudplatform/fda-mystudies	390	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2Mzk0Nw==	1047	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_fda-mystudies/pr_390.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2Mzk0Nw==	can these asserts be moved into a helper method, since they seem to be repeated on multiple tests?	Code	No	FALSE												
googlecloudplatform/fda-mystudies	913	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM1MzIxOQ==	1043	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_fda-mystudies/pr_913.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM1MzIxOQ==	why does this only include uppercase letters?	Code	No	FALSE												
googlecloudplatform/fda-mystudies	673	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NzMxMQ==	1045	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecloudplatform_fda-mystudies/pr_673.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3NzMxMQ==	typo - successfully	String value	Yes	FALSE												
googlecontainertools/jib	2584	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyNjY1Mw==	1051	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecontainertools_jib/pr_2584.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyNjY1Mw==	Add @Immutable as other classes. Also our repo policy is to add a Javadoc for a public class. Can be a short one.	Javadoc	Yes	FALSE												
googlecontainertools/jib	2869	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzNTM2Nw==	1048	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecontainertools_jib/pr_2869.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMzNTM2Nw==	Can you file an issue to use gcr.io/distroless/java:11 when the application is Java 11+?	Code	No	FALSE												
googlecontainertools/jib	2699	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NDE5NQ==	1049	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecontainertools_jib/pr_2699.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU4NDE5NQ==	Suggested change                                                                                                                      results.builtImagesAndBaseImages.get().keySet().size());                                                                      results.builtImagesAndBaseImages.get().size());	Code	Yes	FALSE												
googlecontainertools/jib	2699	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNTM5MQ==	1050	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googlecontainertools_jib/pr_2699.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNTM5MQ==	ditto	Code	Discard	FALSE												
graphhopper/graphhopper	1953	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NDkyOQ==	1055	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphhopper_graphhopper/pr_1953.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5NDkyOQ==	Shouldn't this use the 3D distance?	Code	No	FALSE												
graphhopper/graphhopper	2015	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE1NTY1Mw==	1054	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphhopper_graphhopper/pr_2015.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE1NTY1Mw==	This is a bit ugly. If we set the custom model via Java API I think it should not be required to set a file (?)	Code	No	FALSE												
graphhopper/graphhopper	1880	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMjIxMw==	1056	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphhopper_graphhopper/pr_1880.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzgxMjIxMw==	Thanks again for adapting the code! It seems we also documented this Integer.MAX_VALUE here in the javadocs. Would you mind adapting also this :) ? Last thing I hope ;)	Javadoc	Yes	FALSE												
graphhopper/graphhopper	2168	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2Njg5OA==	1053	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphhopper_graphhopper/pr_2168.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2Njg5OA==	Do we want to keep the hierarchy here? e.g     OTHER()     FOOT(OTHER)     VEHICLE(OTHER)     BIKE(VEHICLE),     MOTOR_VEHICLE(VEHICLE),     CAR(MOTOR_VEHICLE),     MOTORCYCLE(MOTOR_VEHICLE),     HGV(MOTOR_VEHICLE);      TransportationMode(TransporationMode parent) {          // ... This would allow for constructs like this:     HGV.is(VEHICLE) == true	Code	No	FALSE												
graphhopper/graphhopper	2209	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI1NjAzNA==	1052	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphhopper_graphhopper/pr_2209.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI1NjAzNA==	Ah nice 👍. I also like Statement better than Clause and Keyword is better than Cond.	Code	No	FALSE												
graphql-java/graphql-java	2020	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg5MDY1MQ==	1058	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphql-java_graphql-java/pr_2020.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg5MDY1MQ==	I know this PR has already been merged and closed, and the issue is perfectly ignorable, but wanted to point out that sizing a map to an exact number of elements is generally a bad idea. With the default load factor of 0.75, sizing a map like this guarantees a need for resizing.	Code	No	FALSE												
graphql-java/graphql-java	1832	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1ODU1Mw==	1060	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphql-java_graphql-java/pr_1832.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1ODU1Mw==	I am sure we have a JSON string encoder somewhere in the code base Not sure off hand but I recall we do.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace usage of an external API by an internal one	Yes		Yes		NONE	NONE	NONE	NONE
graphql-java/graphql-java	1783	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDc4OA==	1061	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphql-java_graphql-java/pr_1783.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwNDc4OA==	I don't thing this is correct: we need to record the source location, ?	Code	No	FALSE												
graphql-java/graphql-java	1754	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDM2Ng==	1062	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphql-java_graphql-java/pr_1754.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE5NDM2Ng==	we should remove this comment	Comments	Yes	FALSE												
graphql-java/graphql-java	1859	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NzQxMg==	1059	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphql-java_graphql-java/pr_1859.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NzQxMg==	please have a look at the intellij formatter inside the root folder: we don't use * imports.	Code	Yes	FALSE												
graphql-java/graphql-java	2048	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk0MDE2OQ==	1057	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graphql-java_graphql-java/pr_2048.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk0MDE2OQ==	Can we please move this to  graphql.schema.idl so its next to graphql.schema.idl.ScalarInfo - its pretty much the same idea as a class and hence it should be in a similar place	Code	No	FALSE												
graylog2/graylog2-server	8518	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MzY2Nw==	1064	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graylog2_graylog2-server/pr_8518.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5MzY2Nw==	This will potentially build a "user" with the principal of a team.. We need to solve this sooner or later..	Code	No	FALSE												
graylog2/graylog2-server	7916	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MTI3OA==	1065	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graylog2_graylog2-server/pr_7916.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MTI3OA==	I think this function should not stringify its return value and should simply return Object. That way we can use it for IP addresses, lookup table results etc.	Code	No	FALSE												
graylog2/graylog2-server	7709	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk0NjYxMw==	1067	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graylog2_graylog2-server/pr_7709.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk0NjYxMw==	The leading wildcard handling probably needs to be enabled.	Code	No	FALSE												
graylog2/graylog2-server	8520	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMzc3NA==	1063	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graylog2_graylog2-server/pr_8520.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMzc3NA==	This variable is unused. The users variable is put into the UserPageListResponse. Is that correct?	Code	Yes	FALSE												
graylog2/graylog2-server	7867	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3MjA2OA==	1066	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graylog2_graylog2-server/pr_7867.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3MjA2OA==	Maybe we shouldn't call this streamsQuery?                         Suggested change                                                                                                    private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streamsQuery) {                                                        final Set<String> indexSetIds = streamsQuery.stream()                                                                .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))                                                                .filter(s -> !isNullOrEmpty(s))                                                                .collect(Collectors.toSet());                                                    private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streams) {                                                        final Set<String> indexSetIds = streams.stream()                                                                .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))                                                                .filter(s -> !isNullOrEmpty(s))                                                                .collect(Collectors.toSet());	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
greenplum-db/pxf	474	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMDQ2NQ==	1070	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/greenplum-db_pxf/pr_474.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIwMDQ2NQ==	do we care about case insensitivity ?	Code	No	FALSE												
greenplum-db/pxf	286	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5MjQ4MA==	1073	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/greenplum-db_pxf/pr_286.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg5MjQ4MA==	maybe we should refactor this to a function that takes a long: private BigDecimal bigDecimalFromLong(long val) and above (int32) you could cast the int to long.	Code	No	FALSE												
gridgain/gridgain	1027	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI2MDYwNg==	1077	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gridgain_gridgain/pr_1027.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI2MDYwNg==	Looks more like an ERROR.	Other	Yes	FALSE												
gridgain/gridgain	939	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1NjgyNw==	1078	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gridgain_gridgain/pr_939.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1NjgyNw==	braces	Code	Yes	TRUE	Inconsistent or disrupted formatting	Loop	Accepted	Add braces in a single statement block	Yes		Yes		NONE	ControlStatementBraces	Multiline blocks should be enclosed in curly braces; Control structures should use curly braces	NeedBraces
h2database/h2database	2545	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxODczNQ==	1088	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2545.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUxODczNQ==	Conditions should use castToBoolean(…) to ensure BOOLEAN data type of optimized expression.	Code	No	FALSE												
hapifhir/hapi-fhir	2104	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk2MTI0Mg==	1094	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_2104.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk2MTI0Mg==	This is technically false right? Subscriptions can be EMPI-managed. Not sure if that is relevant here.	Code	No	FALSE												
hapifhir/hapi-fhir	1807	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNTAyOQ==	1098	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_1807.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNTAyOQ==	Consider adding: ONLY_TO_DEFAULT_PARTITION,	Code	No	FALSE												
hartwigmedical/pipeline5	190	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MjQyOA==	1101	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_190.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MjQyOA==	As the argument is optional, we should use the features of Optional and not have another "empty" case of an empty string. You can either just not specify the image name in the builder or use Optional.empty(). I think the former is most consistent with what's already here.	Code	Yes	FALSE												
hashgraph/hedera-mirror-node	578	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNDY5OQ==	1111	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hashgraph_hedera-mirror-node/pr_578.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkyNDY5OQ==	Why is this added here if it is a standalone bean used in a standalone fashion in the handler?	Code	No	FALSE												
hmcts/ccd-data-store-api	1151	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MzAzNQ==	1130	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hmcts_ccd-data-store-api/pr_1151.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MzAzNQ==	IDE tell me it can be simplified to: .map(list -> String.join(".", list))	Code	Yes	FALSE												
hortonworks/cloudbreak	9116	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNzkxMw==	1133	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hortonworks_cloudbreak/pr_9116.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNzkxMw==	I don't think the EntitlementService can be null.	Code	No	FALSE												
hortonworks/cloudbreak	7484	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM5MjkwNA==	1136	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hortonworks_cloudbreak/pr_7484.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDM5MjkwNA==	this should be also come from a @Value so we can turn it off/on as we wish	Code	No	FALSE												
hub4j/github-api	674	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MjgzMQ==	1140	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hub4j_github-api/pr_674.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MjgzMQ==	This is also needed or the error just keeps happening.                        Suggested change                                                                                                                return parse(type, instance, timeouts - 1);                                                                uc = setupConnection(uc.getURL());                                                                return parse(type, instance, timeouts - 1);	Code	No	FALSE												
hubspot/jinjava	529	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1NTQ1Mw==	1143	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_529.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1NTQ1Mw==	A test for this could be good	Code	No	FALSE												
hugegraph/hugegraph	1121	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2Mjg2OA==	1150	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hugegraph_hugegraph/pr_1121.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2Mjg2OA==	RaftNode.this.started	Code	Yes	FALSE												
hyperledger/besu	423	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMTE2MQ==	1158	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_423.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIwMTE2MQ==	It will only find on chain groups, so maybe we should call it PivxFindOnChainPrivacyGroup?	Code	Yes	FALSE												
ibm/fhir	928	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3Mzk5NA==	1164	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_928.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3Mzk5NA==	maybe a comment here to explain that getInstance() loads all the static providers	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Call	Accepted in text but not change in code									
ibm/fhir	594	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NDc0NQ==	1166	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_594.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NDc0NQ==	I think we should throw an exception.  This could lead to unintended consequences.  if a tenant is not passed in, it should be treated as invalid.	Code	No	FALSE												
ibm/fhir	1813	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MTcxOA==	1159	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_1813.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MTcxOA==	do we ever get an "E" as input to this?	Code	No	FALSE												
ibm/fhir	1267	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAwMDA2MQ==	1160	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_1267.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAwMDA2MQ==	copyright needs to be updated	Other	No	FALSE												
ibm/fhir	1267	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4MzQ5NQ==	1161	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_1267.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4MzQ5NQ==	Suggested change                                                                                                    /* (non-Javadoc)                                                     * @see com.ibm.fhir.persistence.jdbc.connection.FHIRTransactionFactory#create()                                                     */	Javadoc	Yes	FALSE												
infinispan/infinispan	8270	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1ODU1NA==	1171	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8270.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1ODU1NA==	You need to take into account that the default is fs, and can be omitted. So having 2 entities with one of them pointing to local-heap, would cause only 1  property with DIRECTORY_PROVIDER_SUFFIX but two backends.	Code	No	FALSE												
infinispan/infinispan	8532	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MTQ0NQ==	1170	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8532.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MTQ0NQ==	We can add an if (trace)	Code	No	FALSE												
infinispan/infinispan	8600	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYyMTEyOQ==	1168	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8600.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYyMTEyOQ==	I worry that the blocking is now just relegated to this call instead. We really need https://issues.redhat.com/browse/ISPN-11731 to verify these are all fixed.	Code	No	FALSE												
infinispan/infinispan	7873	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2ODg5MA==	1174	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_7873.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2ODg5MA==	No, this does not start JMX :) Please name it registerMBeans.	Code	Yes	FALSE												
infinispan/infinispan	8129	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwNDc2OQ==	1172	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8129.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjgwNDc2OQ==	Is this is needed at all? All the constructors already have a storageMediaType parameter.	Code	No	FALSE												
infinispan/infinispan	8629	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY3MTM2Mg==	1167	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8629.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY3MTM2Mg==	Do we have a JIRA for this?	Code	No	FALSE												
infinispan/infinispan	8072	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODU0MTI5NQ==	1173	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8072.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODU0MTI5NQ==	isStale is always false	Code	Yes	TRUE	Inadequate logging and monitoring	Variable	Accepted	Change log settings	Yes		Yes		NONE	NONE	NONE	NONE
infinispan/infinispan	8571	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNjgwMQ==	1169	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/infinispan_infinispan/pr_8571.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNjgwMQ==	CacheQuery is also deprecated, so better not to change it.	Code	No	FALSE												
inria/spoon	3562	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU2OTYyMQ==	1179	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3562.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU2OTYyMQ==	expected should be the second argument, not the last you can remove the first one, the message, not relevant here	Code	Yes	FALSE												
inria/spoon	3565	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NjkzOA==	1178	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3565.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NjkzOA==	@martinezmatias a rotten assertion	Code	No	FALSE												
inria/spoon	3595	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4NzcyNA==	1177	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3595.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4NzcyNA==	is there a reason for the timeout?	Code	No	FALSE												
inria/spoon	3716	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUyOTIwNg==	1175	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3716.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUyOTIwNg==	What about keeping target != null to avoid crashing with NPE on target.isImplicit?	Code	No	FALSE												
inria/spoon	3627	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNjU5Mg==	1176	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3627.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNjU5Mg==	split it in 3 testcases?	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Extract method	Yes		Yes		NONE	ExcessiveMethodLength	NONE	MethodLength
ionic-team/capacitor	3834	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1NzcxMg==	1184	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ionic-team_capacitor/pr_3834.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1NzcxMg==	Would this incorrectly trigger if loadingUrl.getHost() = "something.app" and bridge.getHost() = "app"?	Code	No	FALSE												
iterable/iterable-android-sdk	284	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2OTI5NQ==	1201	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_284.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2OTI5NQ==	Why Boolean and not boolean?	Code	Yes	TRUE	Complex, long, or inadequate logic	Class	Accepted	Use a different type to be consistent with other parts of the code	Yes		Yes		NONE	NONE	NONE	NONE
jabref/jabref	6290	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxNDMyOA==	1210	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_6290.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcxNDMyOA==	Suggestion: convert this field to Set<FileType> then you don't need to compare extensions and it's a bit more readable as well.	Code	Yes	FALSE												
jabref/jabref	6152	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzA3NA==	1212	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_6152.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NzA3NA==	For this JabRef-intern drag&drops, the https://github.com/JabRef/jabref/blob/master/src/main/java/org/jabref/gui/util/CustomLocalDragboard.java is easier to use.	Code	No	FALSE												
jabref/jabref	7209	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4MjQ4NQ==	1207	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_7209.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI4MjQ4NQ==	The viewmodel should be free of any javafx controls, i.e. no javafx.scene  imports	Code	No	FALSE												
jabref/jabref	7036	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ==	1208	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_7036.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ==	This is not the right place. You cannot put GUI code into logic/model classes. See https://devdocs.jabref.org/getting-into-the-code/high-level-documentation The right place to check if the results are empty would be here: Than you have it generic as well for all kind of fetchers                jabref/src/main/java/org/jabref/gui/EntryTypeViewModel.java                    Line 147       in       7f4c36c                                                     Optional<BibEntry> result = fetcherWorker.getValue();	Code	No	FALSE												
janusgraph/janusgraph	2137	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUyNzUxNQ==	1216	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_2137.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUyNzUxNQ==	isReindexed parameter is not used. Anyway, you don't even need a whole method here. I suggest doing g.V().has("vtName", "A").inE().hasLabel("egLabel").has("assoKind", 1).count().next() directly, wherever you currently use countOfEdges method.	Code	Yes	FALSE												
jbosstm/narayana	1717	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0NDc5MA==	1226	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1717.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0NDc5MA==	we should add a message that says which one was null. The error message in test says it is only parentId.	Code	No	FALSE												
jellyfin/jellyfin-androidtv	579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIyNzA3OQ==	1233	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jellyfin_jellyfin-androidtv/pr_579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIyNzA3OQ==	Why not just "ImageButton"?	Code	Yes	TRUE	Bad identifier	Class	Not Accepted									
jenkinsci/jenkins	4517	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MTAzOQ==	1239	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_jenkins/pr_4517.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MTAzOQ==	Suggested change                                                                                                                            e.printStackTrace(listener.getLogger());                                                                            Functions.printStackTrace(e,listener.getLogger());                                 Core has something close to this i forgot what it was exactly	Code	No	FALSE												
jenkinsci/jenkins	4466	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NTk5NQ==	1241	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_jenkins/pr_4466.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA3NTk5NQ==	This should add the StatusFilter first into the list to minimize behavior changes through interactions between filters.	Code	No	FALSE												
jenkinsci/kubernetes-plugin	726	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk1MzUyOA==	1249	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_726.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njk1MzUyOA==	Indent with spaces                        Suggested change                                                                                                 if (workspaceVolume != null) {                                                            argMap.put("workspaceVolume", workspaceVolume);                                                 }                                                        if (workspaceVolume != null) {                                                            argMap.put("workspaceVolume", workspaceVolume);                                                        }	Code	Yes	FALSE												
jenkinsci/kubernetes-plugin	818	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw==	1245	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_818.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw==	Would effectively revert JENKINS-60088 Exposed labels in Kubernetes have no effect on the Jenkins labels. I would recommend reverting this hunk.	Code	No	FALSE												
jenkinsci/kubernetes-plugin	742	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMDE3Mg==	1248	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_742.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMDE3Mg==	Suggested change                                                                                                public class TaskListenerEventWatcher implements Watcher<Event> {                                                class TaskListenerEventWatcher implements Watcher<Event> {	Code	No	FALSE												
jenkinsci/warnings-ng-plugin	307	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMTYzMg==	1259	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_307.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQyMTYzMg==	I think you have a typo in the filename: the file is: ClangAnalzer.txt the fileName is: ClangAnalyzer.txt	String value	No	FALSE												
jenkinsci/warnings-ng-plugin	307	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3ODg3Ng==	1260	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_307.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU3ODg3Ng==	Can you please overwrite getUrl and return https://clang-analyzer.llvm.org (or the correct one if this is another tool)?	Code	No	FALSE												
jenkinsci/warnings-ng-plugin	379	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgyMw==	1257	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_379.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgyMw==	same as above. It is redundant but better readable...	Code	Yes	FALSE												
jenkinsci/warnings-ng-plugin	550	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NjI3NA==	1254	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_550.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NjI3NA==	Do you have an example output that shows how this is rendered?	Code	No	FALSE												
jenkinsci/warnings-ng-plugin	711	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA1OTM2Ng==	1253	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_711.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA1OTM2Ng==	I think wrapping in {@code and <pre> would look better	Javadoc	Yes	FALSE												
jmri/jmri	9119	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3NTU4NA==	1262	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_9119.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3NTU4NA==	Spotbugs complains about this line. The parameter command is known to be null at this point. So the @SuppressFBWarnings needs to be removed.	Code	No	FALSE												
jmri/jmri	8079	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MDUyOQ==	1268	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_8079.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1MDUyOQ==	It's better to return a List than an ArrayList, since List is an interface and ArrayList is a concrete class.	Code	No	FALSE												
junit-pioneer/junit-pioneer	285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcxMTE1MQ==	1270	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-pioneer_junit-pioneer/pr_285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcxMTE1MQ==	But who tests our tests? (Is this necessary? I'm not sure...)	Code	No	FALSE												
keycloak/keycloak	7328	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI4MTc5NQ==	1280	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7328.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI4MTc5NQ==	Could be return Stream.concat(super.getGroupsStream(), Stream.of(group))     .filter(Objects::nonNull);	Code	No	FALSE												
keycloak/keycloak	7524	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk3MzYxOQ==	1278	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7524.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk3MzYxOQ==	What "-1" in maxResults actually should achieve? If that means we don't want limit number of results shouldn't we use Integer.MAX_VALUE - 1 ? Not sure if limit(0) will do the same. If "-1" means I don't want any results (which doesn't make sense to me :D ) then it's, I guess correct.	Code	No	FALSE												
keycloak/keycloak	7136	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwNDYyNw==	1283	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7136.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwNDYyNw==	Ideally this would be addEndHandler but this method is only available with Vert.x 3.9.1 while current quarkus version is on 3.9.0. @stianst / @pedroigor Is it possible / how feasible is to update quarkus?	Code	No	FALSE												
keycloak/keycloak	7470	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMzEzMg==	1279	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7470.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQyMzEzMg==	The test should be deterministic and should know whether it's fetching the error message from the notification or from the field.	Code	No	FALSE												
keycloak/keycloak	7684	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjQyOTk5OA==	1276	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7684.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjQyOTk5OA==	Will there remain both KEYCLOAK-16584 and KEYCLOAK-16118 commits? It seems to me (and I might be wrong :) ) ModelCriteriaBuilder should rather belong to KEYCLOAK-16118 commit than to this one. But it'd mean to move all related code there so I'm not sure if it's worth it, wdyt?	Code	No	FALSE												
keycloak/keycloak	7263	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0OTQzNQ==	1281	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7263.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc0OTQzNQ==	dtto	Code	Discard	FALSE												
kframework/k	1003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1Nzk5MQ==	1288	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kframework_k/pr_1003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1Nzk5MQ==	Why is this in the temp directory? Shouldn't this be inside the -kompiled directory? Could you put all the related files inside a single directory? -kompiled already has many things in it, and it would make it easier to look for debugging info when files are a bit more organized.	Code	No	FALSE												
kframework/k	1003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzOTIyMA==	1289	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kframework_k/pr_1003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkzOTIyMA==	Wow, the logic here got a lot more complicated. I think having kast --gen-parser doesn't make much sense. kompile --backend bison or kompile --emit-bison-parser makes more sense to me. I also agree that the generated parser should go in the kompiled directory, and should form a standalone binary/executable which the user can call directly (without having to invoke immediately via kast). If you absolutely must keep it here, put all the bison generation stuff it its own method and call it under the if (options.genParser) instead of inlining it, so that it's easier to see the overall logic of this main method. It would also make sense to me to add kast --use-bison-parser and krun --use-bison-parser, which would use the parser emitted during kompile.	Code	No	FALSE												
kframework/k	1217	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5Nzg5OA==	1287	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kframework_k/pr_1217.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5Nzg5OA==	Please add comments where you see fit.	Comments	Yes	FALSE												
kframework/k	1327	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4NDc0OQ==	1284	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kframework_k/pr_1327.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4NDc0OQ==	Suggested change                                                                                                            } else                                                                kem.addAllKException(parse.getWarnings().stream().map(e -> e.getKException()).collect(Collectors.toList()));                                                            } else {                                                                kem.addAllKException(parse.getWarnings().stream().map(e -> e.getKException()).collect(Collectors.toList()));                                                            }	Code	Yes	FALSE												
kframework/k	1247	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3MDk5NA==	1285	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kframework_k/pr_1247.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDE3MDk5NA==	We should emit a parser for each $ variable that shows up in the configuration, not just $PGM.	Code	No	FALSE												
kframework/k	1237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDY3NA==	1286	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kframework_k/pr_1237.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDY3NA==	This whole feature is extraordinary error-prone. I'd say a warning must be added here when it is used.	Other	Yes	TRUE	Inadequate logging and monitoring	Method	Accepted	Add logging code	No	No			NONE	NONE	NONE	NONE
kiegroup/appformer	951	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk2NTkxNg==	1297	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_951.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk2NTkxNg==	@jomarko Duplication	Code	Yes	FALSE												
kiegroup/appformer	1016	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5ODkzMg==	1292	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_1016.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE5ODkzMg==	The for loop below will be unnecessarily evaluated in case componentId == null. So probably you'd want to just return in such a case.	Code	No	FALSE												
kiegroup/appformer	956	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTcwNw==	1294	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_956.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM3MTcwNw==	Suggested change                                                                                                        String multipleImportStr = System.getProperty(DASHBUILDER_RUNTIME_MULTIPLE_IMPORT, "false");                                                        String allowExternalStr = System.getProperty(ALLOW_EXTERNAL_FILE_REGISTER_PROP, "true");                                                        String multipleImportStr = System.getProperty(DASHBUILDER_RUNTIME_MULTIPLE_IMPORT, Boolean.FALSE.toString());                                                        String allowExternalStr = System.getProperty(ALLOW_EXTERNAL_FILE_REGISTER_PROP, Boolean.TRUE.toString());	Code	Yes	FALSE												
kiegroup/appformer	956	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyOTU4Mg==	1295	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_956.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyOTU4Mg==	Suggested change	Code	Yes	FALSE												
kiegroup/appformer	956	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3NTYzNw==	1296	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_956.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3NTYzNw==	This for block could be moved inside the if block below.	Code	No	FALSE												
kiegroup/appformer	995	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4ODc4OQ==	1293	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_995.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4ODc4OQ==	Shouldn't we show some sort of feedback if ifPresent is false? For example, when importID is null.	Code	No	FALSE												
kiegroup/appformer	933	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1NTMwMA==	1298	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_933.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1NTMwMA==	Suggested change                                                                                                 * Copyright 202 Red Hat, Inc. and/or its affiliates.                                                 * Copyright 2020 Red Hat, Inc. and/or its affiliates.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
kiegroup/appformer	1025	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwNDQ5Nw==	1291	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_1025.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTcwNDQ5Nw==	This is already in org.kie.workbench.common.dmn.webapp.kogito.marshaller.mapper.JsUtils	Code	Yes	FALSE												
kiegroup/appformer	1080	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NjkwNw==	1290	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_appformer/pr_1080.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY1NjkwNw==	Suggested change                                                                                                    public void addInternalComponents(List<ExternalComponent> components) {                                                    public void addProvidedComponents(List<ExternalComponent> components) {	Code	Yes	FALSE												
kiegroup/drools	2870	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMzIyOQ==	1302	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_drools/pr_2870.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMzIyOQ==	Please split to multiple lines.	Code	Yes	FALSE												
kiegroup/drools	2926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MzkzMA==	1300	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_drools/pr_2926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MzkzMA==	Is it possible to remove this workaround too hardcoded on ResourceType.PMML and use the generic new isNative condition?	Code	No	FALSE												
kiegroup/drools	2832	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE3OTY4OA==	1303	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_drools/pr_2832.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE3OTY4OA==	missing license header	Code	No	FALSE												
kiegroup/drools	3237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAzMzQxNQ==	1299	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_drools/pr_3237.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAzMzQxNQ==	Does this work in Java11/Native image?	Code	No	FALSE												
kiegroup/drools	2900	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0ODIwNw==	1301	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_drools/pr_2900.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDY0ODIwNw==	I believe that having a ThreadLocal here is only necessary if the engine is running in parallel evaluation mode (which is not the default). Probably you could have a single plain NodeStats if parallel evaluation is not enabled.	Code	No	FALSE												
kiegroup/droolsjbpm-integration	2220	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwNDQ2Mw==	1306	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_2220.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUwNDQ2Mw==	typo                         Suggested change                                                                                                public class InmutableContainerStartupStrategy implements StartupStrategy {                                                public class ImmutableContainerStartupStrategy implements StartupStrategy {	Code	Yes	FALSE												
kiegroup/droolsjbpm-integration	2191	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg3NjE3MQ==	1307	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_2191.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg3NjE3MQ==	please change it to:                         Suggested change                                                                                                    private static Logger logger = LoggerFactory.getLogger(AuditDataReplicationProcessEventProducer.class);                                                    private static final Logger logger = LoggerFactory.getLogger(JMSSender.class);	Code	No	FALSE												
kiegroup/droolsjbpm-integration	2191	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODgxNg==	1308	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_2191.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODgxNg==	typo                         Suggested change                                                                                                    public TaskLifeCycleEventListener createBAMTaskSumaryListener(EntityManagerFactory emf) {                                                    public TaskLifeCycleEventListener createBAMTaskSummaryListener(EntityManagerFactory emf) {	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
kiegroup/droolsjbpm-integration	2344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyODQ0Ng==	1304	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_2344.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzUyODQ0Ng==	Can containerSpec or getID() return a null value?	Code	No	FALSE												
kiegroup/droolsjbpm-integration	1986	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5MTA1OA==	1310	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_1986.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5MTA1OA==	This is a bit confusing. Constants names are usually all upper case.	Code	Yes	FALSE												
kiegroup/droolsjbpm-integration	2288	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTQ4Mw==	1305	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_2288.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyOTQ4Mw==	It would be nice to check some other data structure for the cloudEvent rather than always a String.	Code	No	FALSE												
kiegroup/droolsjbpm-integration	2191	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0OTE0Nw==	1309	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_droolsjbpm-integration/pr_2191.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0OTE0Nw==	typo                        Suggested change                                                                                                                throw new RuntimeException("Exception when receiving audit event event", e);                                                                throw new RuntimeException("Exception when receiving audit event", e);	String value	Yes	FALSE												
kiegroup/jbpm	1740	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNzc4MA==	1314	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_jbpm/pr_1740.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNzc4MA==	typo                         Suggested change                                                                                                                    List<? extends Reassignment> ressignments = escalation.getReassignments();                                                                    List<? extends Reassignment> reassignments = escalation.getReassignments();	Code	Yes	FALSE												
kiegroup/jbpm	1804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAxODk1NQ==	1312	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_jbpm/pr_1804.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAxODk1NQ==	Compilation error - this constructor has protected access only	Code	No	FALSE												
kiegroup/jbpm	1808	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTczNDQ5Mw==	1311	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_jbpm/pr_1808.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTczNDQ5Mw==	Please note that event is fired only if the signal has scope external	Code	No	FALSE												
kiegroup/jbpm	1637	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUyOTIxOA==	1315	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_jbpm/pr_1637.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUyOTIxOA==	Perhaps we may use Apache Commons Lang abbreviate method, adding 3 dots at the end, to indicate that it's trimmed. Notice that this method would throw IllegalArgumentException if length is equal or less than 3 (should not be a common length to use). What do you think?                         Suggested change                                                                                                        String trimmedErrorMessage = errorMessage;                                                        if (trimmedErrorMessage != null && trimmedErrorMessage.length() > ERROR_LOG_LENGTH) {                                                            trimmedErrorMessage = trimmedErrorMessage.substring(0, ERROR_LOG_LENGTH);                                                        }                                                        super.setErrorMessage(trimmedErrorMessage);                                                        super.setErrorMessage(StringUtils.abbreviate(errorMessage, ERROR_LOG_LENGTH));	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Not Accepted									
kiegroup/jbpm	1794	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2ODM4OQ==	1313	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_jbpm/pr_1794.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2ODM4OQ==	you need to add a callback here to know if the message was delivered or not. https://kafka.apache.org/10/javadoc/org/apache/kafka/clients/producer/KafkaProducer.html#send-org.apache.kafka.clients.producer.ProducerRecord-org.apache.kafka.clients.producer.Callback- in case the callback is a exception the data needs to be logged entirely	Code	No	FALSE												
kiegroup/kie-wb-common	3276	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNjUxOA==	1323	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3276.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDkxNjUxOA==	This class, as part of the BPMN eclise model for client side (kie-wb-common-stunner-bpmn-emf),  is being auto-generated from an eclipse model / plugin, so we're NOT  allowed to manually change any class in this module! Is the code here really necessary???? Again, this should not be manually changed please.	Code	No	FALSE												
kiegroup/kie-wb-common	3357	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwNjIwNw==	1317	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3357.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAwNjIwNw==	This seems be used just in single unit test, do we really need it?	Code	No	FALSE												
kiegroup/kie-wb-common	3290	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMTg5MQ==	1322	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3290.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYxMTg5MQ==	Could be final as well	Code	No	FALSE												
kiegroup/kie-wb-common	3316	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc5MzA1MQ==	1321	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3316.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc5MzA1MQ==	This can be simplified: private boolean typeRefMatchesBuiltInType(final QName typeRef) {         return BuiltInTypeUtils.isBuiltInType(typeRef.getLocalPart());     }	Code	Yes	FALSE												
kiegroup/kie-wb-common	3365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODY2Mg==	1316	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3365.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIwODY2Mg==	Reading sonar report, shouldn't we implement as :     public Set<String> find(final Path path) {         final Set<String> result = new HashSet<>();          final WorkspaceProject workspaceProject = projectService.resolveProject(path);          final List<RefactoringPageRow> rows = refactoringQueryService.query(FindPackageNamesQuery.NAME,                                                                             getValueIndexTerms(workspaceProject));          for (RefactoringPageRow row : rows) {             result.add(row.getValue().toString());         }                  return result;     } ?	Code	No	FALSE												
kiegroup/kie-wb-common	3199	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NTcyNQ==	1324	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3199.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NTcyNQ==	I'm a stickler for parameters on new lines.. but it's just my opinion, so I state it but don't expect it to be fixed.	Code	Yes	FALSE												
kiegroup/kie-wb-common	3347	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY3NjEyMg==	1318	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3347.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY3NjEyMg==	why the cache relies on the BpmnNode instance? This is an eclipse model object, not our internal model object. I would prefer, if possible, to always rely on our models, so we can populate the cache any time, whitout the need for having the eclipse models being parsed as well. WDYT?	Code	No	FALSE												
kiegroup/kie-wb-common	3317	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MDExMQ==	1320	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3317.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MDExMQ==	can be package protected	Code	No	FALSE												
kiegroup/kie-wb-common	3101	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyMzYyNA==	1326	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3101.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgyMzYyNA==	formatting	Code	Yes	FALSE												
kiegroup/kie-wb-common	3335	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU3MTY1OQ==	1319	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3335.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU3MTY1OQ==	no need for this	Code	Discard	FALSE												
kiegroup/kie-wb-common	3142	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwODYyMQ==	1325	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kie-wb-common/pr_3142.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwODYyMQ==	Do I want to be reallllllllly picky here? If we have an enumeration like: [1="one", 2="two, deux", 3="three"] this will break. Don't you have a utility class somewhere to handle the correct splits?	Code	No	FALSE												
kiegroup/kogito-apps	395	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMzU1MQ==	1330	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_395.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMzU1MQ==	Can you please add an explicit if( instanceof) to improve readability?	Code	Yes	FALSE												
kiegroup/kogito-apps	428	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ2MDY2NA==	1329	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_428.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ2MDY2NA==	Please consider to throw exception.	Code	No	FALSE												
kiegroup/kogito-apps	241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzM2MQ==	1331	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxNzM2MQ==	At the moment, I see these hard-coded values:  "graphiql": before this PR, this value was only used in VertxRouterSetup, but now it's used also in MultiTenantResolved and KeycloakIntegrationIndexingServiceIT. "web-app-tenant": it's used here and in the properties to configure the oidc properties.  What about to add a property to define the "graphiql" property: ´´´ dataindex.vertx-graphql.ui.path=/graphiql ´´´ | Note that the name property is in sync with the default vertx property called "quarkus.vertx-graphql.ui.path" (more in here) And also define the tenants for each path in the properties: dataindex.paths."/graphiql".tenant=web-app-tenant  This way we can configure the tenants and configuration entirely driven by properties: %keycloak.quarkus.oidc.web-app-tenant.auth-server-url=http://localhost:8280/auth/realms/kogito %keycloak.quarkus.oidc.web-app-tenant.client-id=kogito-data-index-service %keycloak.quarkus.oidc.web-app-tenant.credentials.secret=secret %keycloak.quarkus.oidc.web-app-tenant.application-type=web-app  And we can even define more custom tenants for different paths: dataindex.paths."/custom".tenant=custom-app-tenant %keycloak.quarkus.oidc.custom-app-tenant.auth-server-url=http://localhost:8280/auth/realms/kogitocustom  This is specially interesting to define different roles by paths. What do you think?	Code	No	FALSE												
kiegroup/kogito-apps	241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDExOTAxOA==	1332	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDExOTAxOA==	I think this test relies on some properties being injected from a maven profile. In order to make it isolated, what do you think of creating a givenTenantConfigured where: private void givenTentantIsConfigured() {         multiTenantResolver.graphUITenantId = GRAPH_UI_TENANT;         multiTenantResolver.graphUIPath = GRAPH_UI_PATH;     }	Code	No	FALSE												
kiegroup/kogito-apps	188	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1MTI5NQ==	1334	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_188.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU1MTI5NQ==	PATCH (like PUT) should target a specific ID, present as a path param.http://restcookbook.com/HTTP%20Methods/patch/	Code	No	FALSE												
kiegroup/kogito-apps	530	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0Mzk2MA==	1327	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_530.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk0Mzk2MA==	What about make both of them warn or debug?	Code	No	FALSE												
kiegroup/kogito-apps	530	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MTkzMQ==	1328	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_530.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MTkzMQ==	Suggested change                                                                                                    void testPrequalificationDMNExplanation1() throws ExecutionException, InterruptedException, TimeoutException {                                                    void testPrequalificationDMNExplanation() throws ExecutionException, InterruptedException, TimeoutException {	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
kiegroup/kogito-apps	241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNTA2Ng==	1333	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-apps/pr_241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzNTA2Ng==	Suggested change                                                                                                        verify(vertxRouterSetup,never()).addGraphiqlRequestHeader(any());                                                        verify(vertxRouterSetup, never()).addGraphiqlRequestHeader(any());	Code	Yes	FALSE												
kiegroup/kogito-runtimes	825	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE4MzMzNg==	1337	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_825.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE4MzMzNg==	I think you can use existing generatedAnnotation field	Code	Yes	TRUE	Complex, long, or inadequate logic	Variable	Accepted	Replace an expression that creates object by existing attribute	Yes		Yes		NONE	NONE	NONE	NONE
kiegroup/kogito-runtimes	327	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MzEzMQ==	1342	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_327.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MzEzMQ==	Please can you explain what you have changed?	Code	No	FALSE												
kiegroup/kogito-runtimes	327	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MzU4OA==	1343	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_327.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE3MzU4OA==	Please add systemMonitoring || or remove the property, now it is not used :)	Code	Yes	FALSE												
kiegroup/kogito-runtimes	763	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0NzM2MQ==	1338	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_763.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0NzM2MQ==	As far as I can see this concept only exists in Spring and not in CDI (even if quarkus impl should be lazy by default). Why do you need it? Minor note, can you add a javadoc?	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add new JavaDoc block to describe the functionality of a code element	No	No			NONE	CommentRequired	NONE	MissingJavadocMethod
kiegroup/kogito-runtimes	486	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNDQ3Nw==	1339	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_486.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMxNDQ3Nw==	same, you can extract this block of code to build the action	Code	No	FALSE												
kiegroup/kogito-runtimes	929	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5NDYwNQ==	1335	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_929.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5NDYwNQ==	this may be useless	Code	Yes	FALSE												
kiegroup/kogito-runtimes	472	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NDMwOQ==	1341	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_472.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI5NDMwOQ==	Maybe move all those strings to constants?	Code	Yes	FALSE												
kiegroup/kogito-runtimes	475	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczNjIyOA==	1340	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_475.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczNjIyOA==	What is our current code style? Somewhere it is one param per line, somewhere it is all on one line.	Code	Yes	FALSE												
kiegroup/kogito-runtimes	839	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4MjM5Mw==	1336	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_kogito-runtimes/pr_839.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4MjM5Mw==	What do you mean with demo?	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
kiegroup/optaplanner	890	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5NTgzNw==	1345	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_optaplanner/pr_890.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5NTgzNw==	Maybe an explanation here would be nice?	Comments	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Try-Catch	Accepted	Add a message to an exception	Yes		Yes		NONE	NONE	NONE	NONE
kiegroup/optaplanner	1064	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxNjA5MQ==	1344	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_optaplanner/pr_1064.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxNjA5MQ==	My suggestion is to remove this field and instead have                         Suggested change                                                                                                    private int nodeIndexMaximum = -1; // So that the first node starts at 0 when it increments.                                                    private int nextNodeIndex = 0;                                                                                                        public int nextNodeIndex() {                                                        return nextNodeIndex++;                                                    }                                 Every time a new node is created, it call this method and automatically gets the next one. Remember that join nodes are created after both bridges are created, so a join will never be before it's bridges or anything before it (but we should test those nodeIndexes with a unit test).	Code	No	FALSE												
kiegroup/optaplanner	718	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyMzQzNw==	1346	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kiegroup_optaplanner/pr_718.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDcyMzQzNw==	If you use format, don't use concatenate +: format("... Expected regular expression (%s) ...", regex)	Code	Yes	FALSE												
kitodo/kitodo-production	3907	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NTExMw==	1348	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kitodo_kitodo-production/pr_3907.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU1NTExMw==	The last if condition and the return true; at the end can be simplified to return firstTask.isBatchStep() == secondTask.isBatchStep();	Code	Yes	FALSE												
kitodo/kitodo-production	3921	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0MzM0OQ==	1347	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kitodo_kitodo-production/pr_3921.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTM0MzM0OQ==	Suggested change                                                                                                                .collect(Collectors.toList());                                                        mediaUnits.sort(Comparator.comparing(MediaUnit::getOrder));                                                                .sorted(Comparator.comparing(MediaUnit::getOrder)).collect(Collectors.toList());	Code	Yes	FALSE												
kitodo/kitodo-production	3858	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMjIyMA==	1349	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kitodo_kitodo-production/pr_3858.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMjIyMA==	Suggested change                                                                                                    private boolean allChildsExported(Process process) {                                                        if (process.getChildren().isEmpty()) {                                                            boolean allChildsExported = true;                                                            for (Process child : process.getChildren()) {                                                                allChildsExported &= child.isExported();                                                            }                                                            return allChildsExported;                                                    private boolean allChildrenExported(Process process) {                                                        if (process.getChildren().isEmpty()) {                                                            boolean allChildrenExported = true;                                                            for (Process child : process.getChildren()) {                                                                allChildrenExported &= child.isExported();                                                            }                                                            return allChildrenExported;                                 It should be "children" instead of "childs".	Code	Yes	FALSE												
kitodo/kitodo-production	3091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyMzkxMw==	1350	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/kitodo_kitodo-production/pr_3091.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyMzkxMw==	Is it a good idea to remove this process from the filteredList if deleting is causing a DAOException?	Code	No	FALSE												
knowm/xchange	3666	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzMQ==	1352	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3666.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI3MjEzMQ==	Why make this public?	Code	No	FALSE												
knowm/xchange	3457	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4NzI4Ng==	1356	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3457.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4NzI4Ng==	CancelOrderByIdParams is meant to be used then you can cancel an order by just passing its id CancelOrderByCurrencyPair i meant to be used then you can cancel all orders for a given currency pair I don't think this is needed, just use CancelOrderByPairAndIdParams besides this code doesn't do proper error handling	Code	No	FALSE												
knowm/xchange	3534	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc4OTk0Ng==	1355	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3534.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc4OTk0Ng==	sendMessage itself is asynchronous - I've been thinking for a while that it should return a Completable (see #3518). Is that likely to be a problem for you here? Are you only worried about exceptions from getUnsubscribeMessage and getSubscribeMessage?	Code	No	FALSE												
knowm/xchange	3539	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2NjgzNw==	1354	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3539.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY2NjgzNw==	Ditto	Code	No	FALSE												
knowm/xchange	3640	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMjUzOA==	1353	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3640.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMjUzOA==	small typo in adaptOrders	Code	Yes	FALSE												
knowm/xchange	3379	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU3MTA5NQ==	1357	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3379.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU3MTA5NQ==	UserTrade should not be mutable	Code	No	FALSE												
knowm/xchange	3848	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1MDI2Nw==	1351	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/knowm_xchange/pr_3848.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1MDI2Nw==	Why is this second arg an array?	Code	No	FALSE												
languagetool-org/languagetool	2908	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDU1OQ==	1361	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/languagetool-org_languagetool/pr_2908.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyNDU1OQ==	I'm not sure if this is a good idea, the input file could be very large and would be loaded into memory this way (the same is true for other cases in HttpApiSentenceChecler)...	Code	No	FALSE												
languagetool-org/languagetool	2908	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MTA5OA==	1362	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/languagetool-org_languagetool/pr_2908.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3MTA5OA==	This should also use scanner to avoid reading everything into RAM.	Code	No	FALSE												
languagetool-org/languagetool	3921	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5NjE5OQ==	1359	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/languagetool-org_languagetool/pr_3921.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5NjE5OQ==	As this is public, it might be in use somewhere and probably shouldn't be removed?	Other	Yes	FALSE												
languagetool-org/languagetool	3988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkyNTk4OQ==	1358	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/languagetool-org_languagetool/pr_3988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkyNTk4OQ==	This class would be a good candidate for a unit test, wouldn't it?	Code	No	FALSE												
languagetool-org/languagetool	3868	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5Njc4MQ==	1360	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/languagetool-org_languagetool/pr_3868.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5Njc4MQ==	Could these be split into two lines? I think it's a bit uncommon to have a second assignment like this.	Code	Yes	FALSE												
ldtteam/minecolonies	4396	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI4MjE0NA==	1371	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_4396.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI4MjE0NA==	could add the description from the PR here aswell, think Job is a fine place to give an overview	Javadoc	Yes	FALSE												
ldtteam/minecolonies	4396	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI5OTE5MQ==	1372	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_4396.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI5OTE5MQ==	do multiple hospitals near each other disrupt themselves?	Code	No	FALSE												
ldtteam/minecolonies	5636	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTU3MA==	1365	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_5636.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTU3MA==	use the one from render world last event, preferably also call the event from there	Code	No	FALSE												
ldtteam/minecolonies	6201	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMzcyNA==	1363	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_6201.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjgyMzcyNA==	either the message is off here, or sth else is wrong	Code	No	FALSE												
ldtteam/minecolonies	4651	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2OTUyNA==	1370	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_4651.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2OTUyNA==	you could flip this comparison, as that makes it way easier to read	Code	Yes	FALSE												
ldtteam/minecolonies	6136	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTgzOA==	1364	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_6136.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTgzOA==	comment move	Comments	Discard	FALSE												
ldtteam/minecolonies	4279	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgzMjk3Nw==	1373	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_4279.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgzMjk3Nw==	ImmutableList....	Code	No	FALSE												
ldtteam/minecolonies	5481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNzUyMQ==	1366	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_5481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNzUyMQ==	This here is important, we should re-request if the pickup failed.	Code	No	FALSE												
ldtteam/minecolonies	5481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg==	1367	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_5481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzODQxNg==	Potentially this should be more generic. Make it a set or a list, etc. So that this can be extended if needed.	Code	No	FALSE												
ldtteam/minecolonies	5070	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzNzQ4NQ==	1369	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_5070.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzNzQ4NQ==	This is actually more then needed. We have already a way to check on the sleep handler if a citizen is sleeping. So you only need to check this, no need for additional variables.	Code	No	FALSE												
ldtteam/minecolonies	5229	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAyMTExMQ==	1368	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ldtteam_minecolonies/pr_5229.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAyMTExMQ==	formatting	Code	Yes	FALSE												
line/armeria	2372	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE3ODM1NQ==	1383	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_2372.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE3ODM1NQ==	This is not correct. It must be either https or http (not h1c, ..)	Code	No	FALSE												
line/armeria	2552	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE1NTE3Ng==	1381	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_2552.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE1NTE3Ng==	How about adding this class to the extension?	Code	No	FALSE												
line/armeria	2422	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTE0Mw==	1382	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_2422.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjgyOTE0Mw==	to to -> to	Comments	Yes	FALSE												
line/armeria	3038	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAwMDE4MQ==	1377	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_3038.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAwMDE4MQ==	If so, how about rasing an exception?	Code	No	FALSE												
line/armeria	3110	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NDI4NA==	1376	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_3110.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM2NDI4NA==	I'm somewhat concerned that these methods make HttpRequest more crowded. How about moving them to HttpRequestBuilder? E.g. HttpRequest.builder().get("/{foo}")...	Code	No	FALSE												
line/armeria	2661	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5Mjc4Nw==	1380	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_2661.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5Mjc4Nw==	HTTP methods - {@link #GET}, {@link #HEAD}, {@link #PUT} and {@link #DELETE}. ?	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain the functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
line/armeria	2697	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkwMzIxNA==	1379	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_2697.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkwMzIxNA==	Could be moved to com.linecorp.armeria.internal.server.annotation ?	Code	No	FALSE												
line/armeria	3217	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNTY2OQ==	1374	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_3217.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjMwNTY2OQ==	nit: ImmutableList.Builder	Code	Yes	FALSE												
line/armeria	2954	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE4NDk1MA==	1378	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_2954.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE4NDk1MA==	How about making this as singleton by using @Scope or making enum singleton?	Code	No	FALSE												
line/armeria	3124	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMTQxNw==	1375	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/line_armeria/pr_3124.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMTQxNw==	❓	Other	No	FALSE												
linkedin/ambry	1350	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4MjE0MA==	1390	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1350.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4MjE0MA==	javadocs missing for actionName	Javadoc	Yes	FALSE												
linkedin/ambry	1681	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzNjUwMg==	1384	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1681.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzNjUwMg==	It might suffice to check if e instanceof SQLTransientConnectionException as above.  Are there cases that wouldn't handle?	Code	No	FALSE												
linkedin/ambry	1613	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNjk1NQ==	1387	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1613.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNjk1NQ==	Why TtlUpdate is also counted here?	Code	No	FALSE												
linkedin/ambry	1546	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyOTIzNg==	1388	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1546.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyOTIzNg==	Let's move this into if (leaderBasedReplicationAdmin.isPeerReplicaLeaderForPartition(partitionName, remoteReplicaId)) block.	Code	No	FALSE												
linkedin/ambry	1480	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk5OTk4MA==	1389	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1480.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk5OTk4MA==	same question here, do we account for the colo with single replica?	Code	No	FALSE												
linkedin/ambry	1619	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3NjIyOQ==	1386	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1619.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3NjIyOQ==	Format this file to remove unused import.	Code	Yes	FALSE												
linkedin/ambry	1630	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY4MTA1OQ==	1385	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_ambry/pr_1630.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY4MTA1OQ==	complete the java doc	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain the functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
linkedin/brooklin	733	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMzY2Ng==	1394	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_733.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyMzY2Ng==	nit: maybe we should keep this log? That Get was called? I know that I've used this log for other operations we perform (stop, resume, pause, etc), and it may be helpful to know if the server is receiving Get requests or not if we see some failures.	Other	Yes	FALSE												
linkedin/brooklin	698	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk0ODU5OA==	1396	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_698.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk0ODU5OA==	can we use lang3?	Code	No	FALSE												
linkedin/brooklin	682	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMDE3Mw==	1397	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_682.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMDE3Mw==	nit: it's preferable to use Map<K, V> for type declaration since it gives us the freedom to change the concrete type later should we need to. It would be nice to have a comment here documenting that access to this map must be synchronized because it is accessed by multiple concurrent threads.	Comments	Yes	FALSE												
linkedin/brooklin	701	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3MTE2Ng==	1395	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_701.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk3MTE2Ng==	do you need it to be public or can you change to package-private?	Code	No	FALSE												
linkedin/brooklin	734	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDgwNw==	1392	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_734.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk4MDgwNw==	One drawback of this is that the user of this API will have to wait for the duration of timeout even if the future completes quickly. I think the version I had in the other PR was taking care of that by creating a separate timeout future and composing it with the provided one. I don't know whether this optimization is important for your use case but we may want to have that if it's a general purpose util.	Code	No	FALSE												
linkedin/brooklin	734	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MDc3MQ==	1393	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_734.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc5MDc3MQ==	Best practice nit: this would entail adding a dependency on Guava under project(':datastream-utils') { in build.gradle.	Code	No	FALSE												
linkedin/cruise-control	1108	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwODQ1OA==	1403	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1108.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwODQ1OA==	If allowBrokerCapacityEstimation is false, then wouldn't node shuffling be redundant?	Code	No	FALSE												
linkedin/cruise-control	1429	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI0MjE2Mw==	1398	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1429.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI0MjE2Mw==	Does this goal ever generate swap action for satisfying the goal requirements? If not can we drop this function?	Code	No	FALSE												
linkedin/cruise-control	1186	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3OTIyMg==	1401	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1186.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3OTIyMg==	Nit: detectMetricAnomalies -> detectedMetricAnomalies?	Code	Yes	TRUE	Bad identifier	Variable	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
linkedin/cruise-control	1079	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzMzUyMw==	1405	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1079.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQzMzUyMw==	The meaning of the following sentence is not clear: Detected follow topics...	Code	No	FALSE												
linkedin/cruise-control	1143	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNjgyNA==	1402	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1143.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNjgyNA==	Nit: Can we use singular names in config -- i.e. SLOW_BROKERS_XXX -> SLOW_BROKER_XXX?	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
linkedin/cruise-control	1091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyOTQ2OQ==	1404	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1091.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYyOTQ2OQ==	Is there an implicit assumption that subject and roleDelegate cannot be null? -- e.g. JwtUserIdentity#getSubject() is accessed w/o a null check, which may potentially yield an NPE?	Code	No	FALSE												
linkedin/cruise-control	1066	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2NjAyNg==	1406	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1066.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2NjAyNg==	Can we rename this to deadBrokersWithUnknownCapacity? -- i.e. it is possible that a broker can be dead, but its capacity can still be resolved depending on whether the capacity resolving service can provide the capacity or not.	Code	Yes	FALSE												
linkedin/cruise-control	1429	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI0NjgwMQ==	1399	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1429.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI0NjgwMQ==	Moving a non-leader replica is acceptable only if the replica is offline and the action is a replica move. This is not a self satisfied action.	Code	No	FALSE												
linkedin/cruise-control	1349	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAxNjQ1Mw==	1400	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_cruise-control/pr_1349.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAxNjQ1Mw==	(Not introduced in this patch) I noticed that this JavaDoc is not fully accurate. Can we update it to reflect that it not only collects partition metrics, but any {@link CruiseControlMetric}?	Javadoc	Yes	FALSE												
linkedin/rest.li	435	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3Njc4MA==	1407	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_rest.li/pr_435.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3Njc4MA==	Include the original exception e in the new exception.	Code	No	FALSE												
linkedin/rest.li	425	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMDMxMw==	1408	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_rest.li/pr_425.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYzMDMxMw==	can we unit test for gradle tasks?	Code	No	FALSE												
linkedin/rest.li	335	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwOTkzMQ==	1412	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_rest.li/pr_335.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwOTkzMQ==	Initialize with size computed using DataMapBuilder::getOptimumHashMapCapacityFromSize	Code	No	FALSE												
linkedin/rest.li	414	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5ODkzNg==	1410	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_rest.li/pr_414.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk5ODkzNg==	style	Code	Yes	FALSE												
linkedin/rest.li	414	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2ODg2MA==	1411	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_rest.li/pr_414.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2ODg2MA==	This and the previous method seem identical except for the input/output directories. Can we de-duplicate the logic?	Code	Yes	FALSE												
linkedin/rest.li	425	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkxNjE1Nw==	1409	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_rest.li/pr_425.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkxNjE1Nw==	the Key should include the path or atleast the package (namespace)? what if there are two schemas with the same name in a module? Also add a unit test for this case	Code	No	FALSE												
ls1intum/artemis	1835	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg0MjU0Ng==	1416	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_1835.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg0MjU0Ng==	Use { }	Code	Yes	FALSE												
ls1intum/artemis	2086	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MTY1Mw==	1413	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_2086.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MTY1Mw==	Maybe you can refactor this logic into a different method, it makes this method quite large and I guess it might be useful elsewhere.	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Extract method	Yes		No	No	NONE	ExcessiveMethodLength	NONE	MethodLength
ls1intum/artemis	1633	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0NDU4NQ==	1417	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_1633.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc0NDU4NQ==	Could it be useful to put the check from line 122-125 within this method? To ensure that we only retrieve a Course when the Exercise is actually valid.	Code	No	FALSE												
ls1intum/artemis	1878	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNzY2NQ==	1415	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_1878.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzNzY2NQ==	Should be findAllWithEagerAchivement or not? I think this would be more understandable, when you do it the other way around. So in the AchievementRepository and make findByIdWithEagerUsers(achievementId)	Code	Yes	FALSE												
ls1intum/artemis	1581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0MTE2OA==	1418	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_1581.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0MTE2OA==	Suggested change                                                                                                    @Column(name = "END_TEXT")                                                    @Column(name = "end_text")	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Change magic value to adhere to project standards	Yes		Yes		NONE	NONE	NONE	NONE
ls1intum/artemis	2017	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDIyNQ==	1414	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_2017.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA3NDIyNQ==	Why do you pass this as a String? I think we should use Boolean instead. Alternatively you could leave it as a string and map it into a Boolean value afterwards	Code	No	FALSE												
ls1intum/artemis	1581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0NzQ5Mw==	1419	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_1581.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0NzQ5Mw==	Can we rename this to numberOfExercisesInExam	Code	Yes	FALSE												
ls1intum/artemis	1527	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MDE2Mg==	1420	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ls1intum_artemis/pr_1527.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MDE2Mg==	I'm not sure if we want to allow instructors to review every complaint, is that something you considered?	Code	No	FALSE												
mapstruct/mapstruct	2172	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4MjI3MQ==	1422	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2172.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4MjI3MQ==	Why is this needed?	Other	No	FALSE												
mapstruct/mapstruct	2138	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODY4OQ==	1423	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2138.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODY4OQ==	Why is this change needed? ySourceType and targetTypeX don't have to be the same types I think. One can be more specific then the other.	Code	No	FALSE												
mapstruct/mapstruct	2089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDUwOQ==	1426	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2089.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDUwOQ==	Suggested change                                                                                                    String nameTransformStrategy();                                                    String nameTransformationStrategy();                                 ?	Code	Yes	FALSE												
mapstruct/mapstruct	2210	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTU1OA==	1421	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2210.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTU1OA==	You can move this in the class annotated WithClasses. This might speed up the test a bit since it will do only one compilation per class instead of doing multiple in case the methods are ordered differently. Same comment for the other test methods.	Code	No	FALSE												
mapstruct/mapstruct	2134	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3ODMzOA==	1424	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2134.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3ODMzOA==	This makes sense. However, doesn't it make more sense to construct the appropriate MappingMethodOptions when we create a new ForgedMethod instead?	Code	No	FALSE												
mapstruct/mapstruct	2103	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5NjgxOA==	1425	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2103.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5NjgxOA==	Streams are all OK, but we are going twice through the same mappings. Why not defined the sets, then use a for-loop to iterate the mappings and add to the sets?	Code	No	FALSE												
marklogic/marklogic-data-hub	3476	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxNzEzNw==	1440	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3476.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAxNzEzNw==	I don't think we want this as a field of the class. Since ArtifactService is bound to a DatabaseClient, storing this as a field binds this class to a DatabaseClient, and thus to a single user. That's the main problem with all the DHF Service/Manager classes - they have HubConfig as a field, and thus they're bound to a single user. If the intent was for Service/Manager classes to be Spring-managed singletons, they should be stateless / threadsafe classes. That's unfortunately not the case, due to the HubConfig field. Ideally, HubConfig - or some subset of it - would be passed in as an argument to methods that need it. In the absence of that, an ArtifactService should be instantiated each time it's needed and not stored as a field.	Code	No	FALSE												
marklogic/marklogic-data-hub	4628	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMDQwNA==	1431	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_4628.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMDQwNA==	Same thing for this and the chunk below - need the code on the left, not the right.	Code	Discard	FALSE												
marklogic/marklogic-data-hub	3579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4ODgxNQ==	1438	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ4ODgxNQ==	Why require the controller to make 3 separate calls here? We want controllers to be as thin and as simple as possible. The controller doesn't care about all of these details - it just wants to say - Hey, I've got this uploadedFile, please make this the new project. A ProjectManager class - see below - can handle all the details of backing up an existing project and then extracting the new one. I think this class just wants to call a method named "replaceProject".	Code	No	FALSE												
marklogic/marklogic-data-hub	3746	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NDA4Ng==	1436	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3746.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NDA4Ng==	This seems like something we can check on before trying to do the search, right? Also, I'd say we should add a test - but it doesn't look like SearchHelper is actually being tested at all??? I see in SearchManagerTest that it's being mocked. Why is SearchHelper separate from SearchManager? SearchManager isn't doing anything other than delegating to SearchHelper. I recommend trying to write a real test here. This one is easy, because you don't need any data - just pass in a SearchQuery with no entity names, and verify you get back an empty StringHandle.	Code	No	FALSE												
marklogic/marklogic-data-hub	4105	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2Mjc3MA==	1434	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_4105.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2Mjc3MA==	You shouldn't change these files. These are generated by running generateJsonSchema2Pojo gradle task . If you want this changed, you will have to update schema and run this task.	Code	No	FALSE												
marklogic/marklogic-data-hub	4373	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4OTY3MA==	1432	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_4373.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE4OTY3MA==	installProjectInFolder will do this automatically for you, but the folder has to be named "data" instead of "input"	Code	No	FALSE												
marklogic/marklogic-data-hub	4257	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczNTgyOA==	1433	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_4257.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczNTgyOA==	You can just call getAllEntities, right? No need for a new method?	Code	No	FALSE												
marklogic/marklogic-data-hub	4916	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY5MDQ4OA==	1430	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_4916.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzY5MDQ4OA==	Once HubInputPartitionReader is updated to use the custom endpoint, this test should pass.	Code	No	FALSE												
marklogic/marklogic-data-hub	3664	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyNzc2Mw==	1437	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3664.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTYyNzc2Mw==	It looks like TestHelper already has properties for test.adminUsername and test.adminPassword, so there's no need to do this - the line doesn't really make sense either, as we can safely assume there's an admin user with the admin role. Also, to mirror similar methods in HubTestBase, call this "runAsAdminUser".	Code	Yes	FALSE												
marklogic/marklogic-data-hub	3450	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NTg0Mg==	1441	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3450.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3NTg0Mg==	All of these have constructors that take a HubConfig - those should be used instead, particularly for LoadHubModulesCommand, which will then construct its other field using the given HubConfig.	Code	No	FALSE												
marklogic/marklogic-data-hub	3789	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5NzM0MA==	1435	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3789.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY5NzM0MA==	I don't think these annotations are needed - they seem redundant with what the method is already doing, which is building a request-based EntitySearchManager with a session-based hubConfig.	Code	Yes	FALSE												
megamek/megamek	2027	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwMjQ3MA==	1446	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_megamek/pr_2027.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwMjQ3MA==	A little too many parens here.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Operation	Accepted	Remove parentheses in logical expression operands and move them to separated lines	Yes		Yes		NONE	UselessParentheses	Redundant pairs of parentheses should be removed; Parentheses should be removed from a single lambda input parameter when its type is inferred 	UnnecessaryParentheses
megamek/megamek	2334	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNDg0Mg==	1443	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_megamek/pr_2334.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNDg0Mg==	Suggested change	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove vertical spacing	Yes		No	No	NONE	NONE	NONE	NONE
megamek/megamek	2482	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwOTcyMQ==	1442	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_megamek/pr_2482.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwOTcyMQ==	Suggested change                                                                                                        }                                                        if (getProductionDate() > 0) {                                                        } else if (getProductionDate() > 0) {	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Not Accepted									
megamek/mekhq	2249	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTQzMg==	1447	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2249.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTQzMg==	Suggested change                                                                                                            for (int attempts = 0; attempts < MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER; ++attempts) {                                                            for (int attempts = 0; attempts < MAXIMUM_ATTEMPTS_TO_FIND_NON_MERC_EMPLOYER; attempts++) {	Code	No	FALSE												
megamek/mekhq	2123	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MDg3Ng==	1453	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2123.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MDg3Ng==	Suggested change                                                                                                                .filter(u -> u.requiresMaintenance() && null != u.getTech())                                                                .filter(u -> u.requiresMaintenance() && (null != u.getTech()))	Code	Yes	TRUE	Inconsistent or disrupted formatting	Operation	Accepted	Add parentheses to compound logical expressions	Yes		No	No	NONE	NONE	NONE	NONE
megamek/mekhq	2229	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMTU2OA==	1448	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2229.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgzMTU2OA==	Suggested change                                                                                                            if (prt instanceof EnginePart && prt.getName().contains("(Clan")                                                                    && prt.getTechBase() != Part.T_CLAN) {                                                            if ((prt instanceof EnginePart) && prt.getName().contains("(Clan")                                                                    && (prt.getTechBase() != Part.T_CLAN)) {	Code	Yes	FALSE												
megamek/mekhq	2144	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzQwMzM2NQ==	1451	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2144.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzQwMzM2NQ==	Suggested change                                                                                                 * along with MekHQ.  If not, see <http://www.gnu.org/licenses/>.                                                 * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.	Javadoc	Yes	FALSE												
metasfresh/metasfresh	10148	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3OTk5NA==	1455	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/metasfresh_metasfresh/pr_10148.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3OTk5NA==	i could understand noFutureExportOfOrder only after looking at the code in ShipmentScheduleRepository.. pls add a javadoc-comment to it, oooor think of a better name...like..maybe sth like onlyIfAllFromOrderExportable?	Javadoc	Yes	FALSE												
metasfresh/metasfresh	6935	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2NDkxMw==	1457	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/metasfresh_metasfresh/pr_6935.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM2NDkxMw==	what does this and Collect do? feel free to explain verbally or with some pseudo-SQL..	Code	No	FALSE												
metasfresh/metasfresh	10217	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4MzUzMw==	1454	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/metasfresh_metasfresh/pr_10217.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4MzUzMw==	pls use <= 0	Code	No	FALSE												
micronaut-projects/micronaut-core	4012	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0Mjg4NQ==	1463	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_4012.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0Mjg4NQ==	Add javadoc description	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Annotation	Not Accepted									
micronaut-projects/micronaut-core	4012	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MzA5OQ==	1464	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_4012.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0MzA5OQ==	@Target should be TYPE, METHOD and ANNOTATION_TYPE	Code	No	FALSE												
micronaut-projects/micronaut-core	4319	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjE4OQ==	1462	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_4319.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE0NjE4OQ==	Please add @SInCE 2.2.0 here	Javadoc	Yes	FALSE												
micronaut-projects/micronaut-core	3339	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzU1Ng==	1466	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_3339.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNzU1Ng==	Maybe make this final	Code	No	FALSE												
micronaut-projects/micronaut-core	4717	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMTIzNw==	1460	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_4717.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMTIzNw==	Missing javadoc	Javadoc	Yes	FALSE												
micronaut-projects/micronaut-core	4610	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5NjUxNw==	1461	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_4610.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5NjUxNw==	This should be context.with(beanProperty.asArgument()) so that errors are combined in the same context	Code	No	FALSE												
micronaut-projects/micronaut-core	2683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNDA2MQ==	1470	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_2683.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTczNDA2MQ==	perhaps log an error here?	Other	Yes	FALSE												
micronaut-projects/micronaut-core	3168	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDI3OA==	1468	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_3168.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDI3OA==	I don't think we need this business. If a file exists call reflect-config.json then GraalVM will pick it up automatically	Code	No	FALSE												
micronaut-projects/micronaut-core	3801	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1MDI3OQ==	1465	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_3801.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1MDI3OQ==	Instead of a bean just for this one converter please add this to one of the existing TypeConverterRegistrar beans	Code	No	FALSE												
microsoft/mssql-jdbc	1251	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyOTAyMg==	1479	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1251.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYyOTAyMg==	Use multi line comments here.	Comments	Yes	FALSE												
microsoft/mssql-jdbc	1284	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1NDQzNA==	1478	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1284.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1NDQzNA==	This exception should be handled from the method that reads from the file, not here.	Code	No	FALSE												
microsoft/mssql-jdbc	1286	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjE4Mg==	1476	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1286.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjE4Mg==	This is not necessarily AKV user principal ID. Please align the docs with ODBC connection property documentation.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve explanation about functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
microsoft/mssql-jdbc	1286	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4MTMyOQ==	1477	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1286.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI4MTMyOQ==	aren't you supposed to use connStr ?	Code	Yes	FALSE												
microsoft/mssql-jdbc	1393	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcxOTQzOQ==	1472	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1393.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzcxOTQzOQ==	Make sure to drop this procedure in cleanup() method.	Code	No	FALSE												
minecraftforge/minecraftforge	6791	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MDg5Mg==	1489	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_6791.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU3MDg5Mg==	Why does it need to be a chestplate that seems a bit restrictive could you change it so it works in any equipmentslot (for example elytra boots)	Code	No	FALSE												
minecraftforge/minecraftforge	6562	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA5NDIzOQ==	1490	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_6562.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA5NDIzOQ==	Type parameters on events are meaningless, unless IGenericEvent is used, which provides very limited filtering and is not applicable here.	Code	Yes	FALSE												
minecraftforge/minecraftforge	7176	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzI3MQ==	1485	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7176.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NzI3MQ==	All the getter lines are wrong formatting should be same line getters. i.e. public PlayerEntity getPlayer() { return player; }	Code	Yes	FALSE												
minecraftforge/minecraftforge	7176	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODk1MQ==	1486	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7176.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA2ODk1MQ==	Change Set<ToolType> toolTypes to ToolType toolType (see my main comment for more info)	Code	No	FALSE												
minecraftforge/minecraftforge	7176	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1OTE2Mw==	1487	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7176.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1OTE2Mw==	Bracket should be on the next line	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Move code elements to their own line	Yes		Yes		NONE	NONE	An open curly brace should be located at the beginning of a line	LeftCurly
minecraftforge/minecraftforge	7448	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NDIxNA==	1482	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7448.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NDIxNA==	Would it be worth noting in the comment that modded world-types must be specified with a namespace? Modders will need to relay that information anyway (for server.properties) but there could still be confusion since "default" isn't prefixed with "minecraft:"	String value	No	FALSE												
minecraftforge/minecraftforge	7435	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcyNzQ5Mg==	1483	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7435.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzcyNzQ5Mg==	New import	Code	No	FALSE												
minecraftforge/minecraftforge	7485	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU3MTk0Nw==	1480	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7485.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU3MTk0Nw==	This buffer is released after this packet is processed*, either a copy of the buffer should be created or a switch to writing buffer bytes to a single cumulation buffer should be made. *should be released, as after confirming this, it is not in fact due to a patch port error introducing a memory leak for what it was intended to fix, new issue report in progress.	Code	No	FALSE												
minecraftforge/minecraftforge	7427	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA==	1484	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7427.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA==	Just asking, wouldn't this be better as a static constant, instead of a local constant?	Code	Yes	FALSE												
minecraftforge/minecraftforge	6994	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMTIzNg==	1488	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_6994.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIwMTIzNg==	Now that we have seperate interfaces for everything, we might as well add more specific context, so pass in the LightTexture and the position here	Code	No	FALSE												
minio/minio-java	948	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5NjY5Mg==	1491	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minio_minio-java/pr_948.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE5NjY5Mg==	This won't create the error message correctly. e.g. if expires is passed as 0, the message will be: "0expires must be in range of 1 to 604800"	String value	Yes	FALSE												
minio/minio-java	843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MTMxOA==	1494	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minio_minio-java/pr_843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MTMxOA==	can we also add legal-hold, retentionandtags` as part of this?	Code	No	FALSE												
minio/minio-java	918	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3MzA0Ng==	1492	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minio_minio-java/pr_918.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3MzA0Ng==	Maybe these two lines can go into a private method called taggingParams() which can then be directly used in the call to the executeGet() method. Will be useful as same code is being used in multiple methods.	Code	No	FALSE												
movingblocks/terasology	3912	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4NDMxMQ==	1499	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/movingblocks_terasology/pr_3912.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg4NDMxMQ==	I'd prefer manipulating single vector components using: newSpawnPos.y -= consecutiveAirBlocks I guess that's a matter of taste, just take it as something to consider.	Code	Yes	FALSE												
movingblocks/terasology	3841	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4MzE4MA==	1500	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/movingblocks_terasology/pr_3841.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4MzE4MA==	Same here, please use a better name for the method.	Code	Yes	FALSE												
movingblocks/terasology	3935	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDMzMw==	1498	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/movingblocks_terasology/pr_3935.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDMzMw==	Message says > 0, but argument validation checks for >= 0.	Code	No	FALSE												
movingblocks/terasology	4244	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDc1NzYxNg==	1496	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/movingblocks_terasology/pr_4244.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDc1NzYxNg==	Suggested change                                                                                                // Copyright 2020 The Terasology Foundation                                                // Copyright 2021 The Terasology Foundation	Comments	Yes	FALSE												
movingblocks/terasology	3942	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MDU5Ng==	1497	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/movingblocks_terasology/pr_3942.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MDU5Ng==	Suggested change                                                                                                    public static final Name CORE_GAMEPLAY_MODULE = new Name("coresamplegameplay");                                                    public static final Name CORE_GAMEPLAY_MODULE = new Name("buildersamplegameplay");	String value	Yes	FALSE												
mulesoft/mule	8914	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MzM2Ng==	1504	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mulesoft_mule/pr_8914.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MzM2Ng==	comment	Javadoc	Yes	FALSE												
mulesoft/mule	9672	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDY1OQ==	1502	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mulesoft_mule/pr_9672.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDY1OQ==	missing description	Javadoc	Yes	FALSE												
mulesoft/mule	8826	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5Nzg2MA==	1505	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mulesoft_mule/pr_8826.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5Nzg2MA==	isn't there allure constants for flow-ref? that would be mor appropriate here.	Code	No	FALSE												
mulesoft/mule	9403	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0NTc0Nw==	1503	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mulesoft_mule/pr_9403.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA0NTc0Nw==	java docs	Javadoc	Yes	FALSE												
mulesoft/mule	8625	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2NjgyOA==	1506	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mulesoft_mule/pr_8625.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY2NjgyOA==	handle this inside getExceptionsAsList(me), so adding unwanted elements to the list is avoided from the start	Code	No	FALSE												
mulesoft/mule	9735	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1MTE5Nw==	1501	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mulesoft_mule/pr_9735.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU1MTE5Nw==	move to MuleSystemProperties and document properly.	Javadoc	Yes	FALSE												
nationalsecurityagency/datawave	789	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxOTcxNw==	1512	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_789.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxOTcxNw==	Not required, but you can simplify this quite a bit with streams...                         Suggested change                                                                                                                        boolean include = true;                                                                        Iterator<Pattern> patternItr = patterns.iterator();                                                                        while (patternItr.hasNext() && include == true) {                                                                            Pattern p = patternItr.next();                                                                            if (p.matcher(zipEntry.getName()).matches()) {                                                                                include = false;                                                                            }                                                                        }                                                                        if (include) {                                                                        final String entryName = zipEntry.getName();                                                                        if (patterns.stream().noneMatch(p -> p.matcher(entryName).matches())) {	Code	Yes	FALSE												
nationalsecurityagency/datawave	942	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NTI1OA==	1510	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_942.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NTI1OA==	Instead of repeating the message Error: problem with query syntax everywhere, could we give any additional information that may allow the receiver of this error to troubleshoot the problem	String value	Yes	FALSE												
nationalsecurityagency/datawave	926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyOTg0MQ==	1511	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyOTg0MQ==	why has this case changed?	Code	No	FALSE												
nationalsecurityagency/datawave	980	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5ODAwMw==	1508	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_980.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI5ODAwMw==	Why not put this before the while loop and avoid the firstRun flag altogether?	Code	Yes	FALSE												
nationalsecurityagency/datawave	980	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzczNQ==	1509	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_980.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMwMzczNQ==	I don't think this will work if the srcHdfs is different than the destHdfs, in which case the directory will have been discp'ed to the destHdfs prior to having been processed.  See the routine below that marks the directory for cleanup which works with the destHdfs.	Code	No	FALSE												
nationalsecurityagency/datawave	787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4MTg4MQ==	1513	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4MTg4MQ==	Tried to scope down the number of patterns that get parsed. Might not be necessary.	Code	No	FALSE												
neo4j-contrib/neo4j-apoc-procedures	1389	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1ODAyOA==	1519	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1389.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1ODAyOA==	See above comment.   This code should be in Tables4LabelsProfile#finished(), and you need to check only for existance constraints, not for any constraint (which includes uniqueness, which does not guarantee the property is mandatory)	Code	No	FALSE												
neo4j-contrib/neo4j-apoc-procedures	1462	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwNjE4OA==	1517	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1462.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwNjE4OA==	we can compute  started + timeoutSeconds * 1000 here (in both methods)	Code	Yes	TRUE	Complex, long, or inadequate logic	Variable	Accepted	Replace an expression by an alternative expression	Yes		Yes		NONE	AvoidLiteralsInIfCondition	NONE	NONE
neo4j-contrib/neo4j-apoc-procedures	1462	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwNzIzMg==	1518	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1462.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwNzIzMg==	not sure it's worth the indirection. what about that Thread.currentThread().interrrupt() handling? I always forget which one is right :)	Code	No	FALSE												
neo4j-contrib/neo4j-apoc-procedures	1672	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1MzYzNA==	1516	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1672.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1MzYzNA==	see the id(n) thing I sent to @conker84	Code	No	FALSE												
neo4j-contrib/neo4j-apoc-procedures	1692	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM0OTYxNw==	1515	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1692.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM0OTYxNw==	reuse the original	Code	No	FALSE												
neo4j-contrib/neo4j-apoc-procedures	1746	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1NzEwNQ==	1514	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1746.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA1NzEwNQ==	this should be a byte[]	Code	No	FALSE												
opensearch-project/security	477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NjMwOQ==	1692	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_477.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NjMwOQ==	nit: RuntimeException does not need to be declared	Code	Yes	FALSE												
opensearch-project/security	548	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4OTc1Mg==	1690	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_548.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4OTc1Mg==	Suggested change                                                                                                            String text = ((String)value).trim();                                                            String text = ((String)value).trim().toLower();                                                            if ("true".equals(text)) {	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Not Accepted									
opensearch-project/security	362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5MTE2OA==	1695	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5MTE2OA==	What is the difference between NodesDnModelV6 and NodesDnModelV7?	Code	No	FALSE												
opensearch-project/security	539	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA5Nzg4Nw==	1691	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_539.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA5Nzg4Nw==	nit: undo new line	Code	Yes	FALSE												
opensearch-project/security	409	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTM0MA==	1694	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_409.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTM0MA==	nit: add new line.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Class	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	Files should contain an empty newline at the end	NewlineAtEndOfFile
opensrp/opensrp-client-core	708	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODU4Mzc0MA==	1697	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_708.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODU4Mzc0MA==	Suggested change                                                                                                        if (StringUtils.isNotBlank(CoreLibrary.getInstance().context().configuration().appName()) && CoreLibrary.getInstance().context().configuration().appName().equals(APP_NAME_INDONESIA)) {                                                        if (APP_NAME_INDONESIA.equals(CoreLibrary.getInstance().context().configuration().appName()) {	Code	Yes	FALSE												
opensrp/opensrp-client-core	544	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5NzIwNA==	1701	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_544.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM5NzIwNA==	I think this should get getErrorStream I also think that the loginresponse for an internal error is a custom message & not the message checked in this test. Kindly fix and confirm if the assumptions here are correct	Code	No	FALSE												
opensrp/opensrp-client-core	481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2MTczNw==	1702	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2MTczNw==	We are going to be searching by identififer & active boolean/integer` whenever we want to load a form. I think we can have an index for active also or just have a multi-column index with both	Code	No	FALSE												
opensrp/opensrp-client-core	477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0OA==	1703	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_477.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNTU0OA==	I think that this should be mutually exclusive. Either save the list of checked options in one obs, or an obs for each selection, however not both	Code	No	FALSE												
opensrp/opensrp-client-core	641	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5ODg4OA==	1698	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_641.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg5ODg4OA==	Isn't createObservation being called on line 445?	Code	Discard	FALSE												
opensrp/opensrp-client-native-form	412	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwOTgyNw==	1708	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_412.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwOTgyNw==	Why is this set to true?	Code	No	FALSE												
opensrp/opensrp-client-native-form	509	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYxODUwMA==	1704	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_509.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjYxODUwMA==	Could we use underscores instead of camelCase for the field? That is more consistent with other fields in native form widgets.	String value	Yes	FALSE												
opensrp/opensrp-client-native-form	476	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjI5Ng==	1705	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_476.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNjI5Ng==	Any reason for this because this change might break other people's code.	Code	No	FALSE												
opensrp/opensrp-client-native-form	430	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1MTk2Mg==	1707	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_430.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1MTk2Mg==	Could you catch a more specific exception?	Code	Yes	FALSE												
opensrp/opensrp-client-native-form	407	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5MzgyNQ==	1709	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_407.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY5MzgyNQ==	@bennsimon any idea why the skip blank step logic still doesn't work for JsonFormFragments? Seems related to this code being removed and moved to JsonWizardFormFragmentPresenter https://github.com/OpenSRP/opensrp-client-native-form/pull/407/files#diff-026e337bf5459fc5eee13061b659364e67ba948390ac996edef6fb3feae6ca3dR53.	Code	No	FALSE												
opensrp/opensrp-client-native-form	407	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5ODY0NQ==	1710	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_407.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5ODY0NQ==	https://github.com/OpenSRP/opensrp-client-native-form/pull/407/files#r486797468	Code	Discard	FALSE												
opensrp/opensrp-client-native-form	453	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMzkzMg==	1706	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_453.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYwMzkzMg==	You can also add this to LINE 1973 of the same file	Code	No	FALSE												
opensrp/opensrp-client-native-form	403	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ==	1711	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_403.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ==	This class looks very similar to  com.vijay.jsonwizard.domain.Form.	Code	No	FALSE												
opentracksapp/opentracks	309	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwMTc4Nw==	1714	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentracksapp_opentracks/pr_309.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMwMTc4Nw==	When deleting is finished the user can see the spinner going down. Why don't hide it before finish()? findViewById(R.id.progress_bar).setVisibility(View.INVISIBLE);	Code	No	FALSE												
opentracksapp/opentracks	368	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTA1Mg==	1713	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentracksapp_opentracks/pr_368.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTA1Mg==	For Interval: public void adjust(float adjustFactor) { distance *= adjustFactor; time *= adjustFactor; }	Code	No	FALSE												
opentripplanner/opentripplanner	3002	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwNDgyMQ==	1722	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3002.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgwNDgyMQ==	reverseBoardSlack rather than revere	Code	Yes	FALSE												
opentripplanner/opentripplanner	3090	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NTU0OA==	1720	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3090.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NTU0OA==	Add a short javadoc to this method including that it configure a Sandbox feature.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add new JavaDoc block to describe the functionality of a code element	Yes		Yes		NONE	CommentRequired	Public types, methods and fields (API) should be documented with Javadoc	MissingJavadocMethod
opentripplanner/opentripplanner	2975	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyNDU2Mw==	1723	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_2975.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMyNDU2Mw==	Checked with @t2gran, this method is just moved, not changed.	Code	No	FALSE												
opentripplanner/opentripplanner	3222	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3MjEwMA==	1716	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3222.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc3MjEwMA==	If the localDate is the serviceDate then this calculation is should using the DateMapper. The DateMapper take a ZonedDateTime so I am not sure how to fix it. This calculation is not accounting for the DST, and possible have some zone issues.	Code	No	FALSE												
opentripplanner/opentripplanner	3133	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5ODA3MA==	1719	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3133.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5ODA3MA==	Use List.of(...) and not Collections.singletonList(...). I know you just copied the code, so maybe update the existing code as well. This is an old code smell, but to make OTP a better place we try to improve a little for every PR.	Code	No	FALSE												
opentripplanner/opentripplanner	3166	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NDA5Nw==	1718	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3166.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4NDA5Nw==	FYI These methods made me ask: Should these be pushed into the TransitAlert class? Is there other places in the code that perform the same logic? Then I investigated a little and it seems that this is over-engineered. The list of TransitAlert.entities is always filtered down to a specific type - So maybe just keeping a set of Selectors for each type is sufficient. The selectors do not select anything - they are just a placeholder witch reference a type(inderect) and one or two ids. It toke me a while before I got that. Or am I missing something? I do not expect this to be fixed as part of the PR, but I it would be good to clean it up at some point.	Code	No	FALSE												
openzipkin/brave	1055	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjczMzI2OQ==	1727	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_brave/pr_1055.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjczMzI2OQ==	the tracecontext here in currentSpan should be the same as what's above set in context.setAttribute right? as there's some cost to fetching it, I think we should remember or reuse the context value.	Code	No	FALSE												
openzipkin/brave	1084	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NTY3OA==	1726	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_brave/pr_1084.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk3NTY3OA==	It's not brave's job to validate HTTP, so this comment is a bit overkill	Comments	Yes	FALSE												
openzipkin/brave	1130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0Mzg4NA==	1725	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_brave/pr_1130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0Mzg4NA==	Probably over optimization, but what do you think about defaulting to only trace ID + span ID (think the javadoc on the fields indicate those are the two common ones), and having a Double for premature optimization of this use case? :)	Code	No	FALSE												
openzipkin/brave	1142	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc5OTkzOQ==	1724	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_brave/pr_1142.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc5OTkzOQ==	Think you may have intended to have the below comment here too, or only here since it's the first occurrence	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Conditional	Accepted in text but not change in code									
openzipkin/zipkin	3171	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk0NDUyMA==	1730	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_zipkin/pr_3171.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk0NDUyMA==	if this is about index templates, possibly we can make this a test instead. ex we don't have ITEnsureIndexTemplate like in cassandra ITEnsureSchema. My assumption is that this is independent of api calls and so only needs to run once, but it should run after we setup the templates. having it as a separate test file will make this part more explicit and close to what fails imho.	Code	Yes	FALSE												
openzipkin/zipkin	3050	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDM3NA==	1732	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_zipkin/pr_3050.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDM3NA==	Can you make the link <a href ...	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Add new tag and hyperlink to existing JavaDoc	Yes		Yes		NONE	NONE	NONE	NONE
openzipkin/zipkin	3050	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTA2OQ==	1733	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_zipkin/pr_3050.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4NTA2OQ==	failing at startup will help people figure out initialization problems. The logic I wrote above should be fine as if the sophistication of a dynamic file loader is file is used, it would be dumb to have an empty password :) calling loader.updateCredentialsFromProperties() once before scheduling will catch all these things.       DynamicCredentialsFileLoader credentialsLoader = new DynamicCredentialsFileLoader(basicCredentials, credentialsFile);        // throw and crashes the server on any setup error.       credentialsLoader.updateCredentialsFromProperties();       ses.scheduleAtFixedRate(0, credentialsLoader, credentialsRefreshInterval, TimeUnit.SECONDS);	Code	No	FALSE												
openzipkin/zipkin	3176	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIzNDg2Nw==	1729	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_zipkin/pr_3176.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTIzNDg2Nw==	This not working as hoped is unfortunate indeed. Increments to a Counter reference held that is registered to a meter registry that is cleared effectively do nothing (from the view of the registry) since the counter is no longer registered to the MeterRegistry. Making a new Spring context will make a new registry and all the metrics will be registered to that again in the remade beans. If using the API that retrieves or creates a meter, this isn't an issue (e.g. registry.counter("my.counter").increment()) because the first time after clear it will create and register a Counter. Perhaps we can improve this situation or at least document it better in Micrometer.	Javadoc	Yes	FALSE												
openzipkin/zipkin	3137	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMzI2NQ==	1731	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_zipkin/pr_3137.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyMzI2NQ==	Guess we might check isDebug first	Code	No	FALSE												
opfab/operatorfabric-core	266	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDY2OA==	1737	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opfab_operatorfabric-core/pr_266.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDY2OA==	It could may be possible to use peek method to putt all the actions perform upon the userData to update into one place and then collect it in a list in order to save it ? it would be more compact and more functional.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace an imperative logic by functional	Yes		Yes		NONE	NONE	NONE	NONE
opfab/operatorfabric-core	559	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3OTM3NA==	1736	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opfab_operatorfabric-core/pr_559.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3OTM3NA==	You should sychronized this bock of code	Code	No	FALSE												
opfab/operatorfabric-core	624	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwOTk3Mg==	1734	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opfab_operatorfabric-core/pr_624.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIwOTk3Mg==	Always and not Alvays	String value	Yes	FALSE												
opfab/operatorfabric-core	196	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NzY0Mw==	1738	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opfab_operatorfabric-core/pr_196.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NzY0Mw==	Everything looks good, and I do get the 404 status when requesting a third that doesn't exist, but not the message?\nHere's what I get if I do a GET on http://localhost:2100/third/DoesntExist using PostMan:\n{\n    \"timestamp\": \"2020-02-11T16:07:52.565+0000\",\n    \"status\": 404,\n    \"error\": \"Not Found\",\n    \"message\": \"Not Found\",\n    \"path\": \"/third/DoesntExist\"\n}\n\nI can't figure out what that is... If I try another similar method and do a GET on : http://localhost:2103/users/doesntexist/settings\nI do get the correct message:\n{\n    \"status\": \"NOT_FOUND\",\n    \"message\": \"User setting for user doesntexist not found\"\n}\n\nI've compared the two but can't find the difference ?	Code	No	FALSE												
oracle/graal	2728	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NjUxNQ==	1740	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_graal/pr_2728.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NjUxNQ==	dummy is not a good name. A better name is something like NULL_MARKER.	Code	Yes	FALSE												
oracle/graal	2396	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4NTYwMw==	1741	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_graal/pr_2396.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4NTYwMw==	Is this necessary given that super.getDependencies does the same?	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
oracle/graal	2396	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5ODcwOQ==	1742	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_graal/pr_2396.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5ODcwOQ==	As in CVTypeSectionImpl, this may be unnecessary.	Code	Yes	FALSE												
oracle/graal	2088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM4NDk2MQ==	1743	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_graal/pr_2088.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjM4NDk2MQ==	That is the right place to switch from Path to String objects.	Code	No	FALSE												
oracle/helidon	1510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzNDgyOA==	1747	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_1510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjkzNDgyOA==	Public constructor cannot be used. Also if class is not to be public, this method will not be public.	Code	No	FALSE												
oracle/helidon	1280	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MTU4NQ==	1750	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_1280.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1MTU4NQ==	I do not think the .flavor() method is good. We do not control the time when the flavor is configured and this is not the intention (HelidonFeatures task is to list features of Helidon, not to handle the flavor of Helidon). Also the approach for thread pools is to use one of the existing ThreadPoolSupplier classes, that already handle lazy initiialization. If you do not need an executor in SE, than why is this method in this class? It should be in the CDI extension for WebSockets, and the TyrusSupport class should only provider features to handle the SE model (with capability to build the MP model on top of it).	Code	Yes	FALSE												
oracle/helidon	1280	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1ODgzMg==	1751	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_1280.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1ODgzMg==	This looks like a candidate for finest, not fine. Also when constructing a message in log levels lower than info, please use lambda: LOGGER.finest(() -> "..."  + msg); to avoid string concatenation on every single byte buffer received	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Accepted	Change log settings	Yes		No	No	NONE	NONE	NONE	NONE
oracle/helidon	2591	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2MDcxMg==	1744	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_2591.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU2MDcxMg==	I am unsure of the threading implications of who can modify this field, but I see it being modified in several places.  Does it need to be volatile?	Code	No	FALSE												
oracle/helidon	1356	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MTgyMQ==	1749	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_1356.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MTgyMQ==	javadoc for return is not correct (please fix for all methods)	Javadoc	Yes	FALSE												
oracle/helidon	2504	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzNjIwNQ==	1745	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_2504.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMzNjIwNQ==	How about PRIMITIVE_ARRAY_MAP.containsValue(clazz)?	Code	Yes	FALSE												
oracle/opengrok	3045	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzOTE1Mg==	1757	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3045.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMzOTE1Mg==	oh yeah, thank you	Code	No	FALSE												
oracle/opengrok	3056	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyNDA2Mw==	1756	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3056.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMyNDA2Mw==	Iterating in the conditional possibly miscounts since one last read() is done to get the -1.	Code	No	FALSE												
oracle/opengrok	3011	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc4MDY0OQ==	1758	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3011.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzc4MDY0OQ==	can be final and thus with constant naming scheme - capital letters	Code	No	FALSE												
oracle/opengrok	3200	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg==	1753	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3200.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg==	I know it was like this but since you are touching it, could you please rename to timeStr to follow Java standard?	Code	Yes	TRUE	Bad identifier	Variable	Accepted	Change the style of an identifier to be camelCase, capitalized, or lowercase	Yes		Yes		NONE	LocalVariableNamingConventions	Local variable and method parameter names should comply with a naming convention	LocalVariableName
oracle/opengrok	3279	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTE3Nw==	1752	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3279.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTE3Nw==	Let's say that statsd is disabled. What is the point of creating Prometheus registry if it cannot be accessed?	Code	No	FALSE												
oracle/opengrok	3190	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2NzQyOA==	1754	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3190.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2NzQyOA==	I missed the whitespaces :(                         Suggested change                                                                                                        LdapUser ldapUser = (LdapUser) req.getSession().                getAttribute(LdapUserPlugin.getSessionAttrName(ldapUserInstance));                                                        LdapUser ldapUser = (LdapUser) req.getSession().getAttribute(LdapUserPlugin.getSessionAttrName(ldapUserInstance));	Code	Yes	TRUE	Inconsistent or disrupted formatting	Call	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	NONE	NoWhitespaceAfter
oracle/weblogic-kubernetes-operator	1535	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2MTIzMg==	1768	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1535.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM2MTIzMg==	combo check	Code	No	FALSE												
oracle/weblogic-kubernetes-operator	1896	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUzMjYyMg==	1761	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1896.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUzMjYyMg==	Modify Test name to "testJmsWldfSystemResourceOverride" to describe the usecase.	Code	Yes	FALSE												
oracle/weblogic-kubernetes-operator	1903	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUyOTE4NA==	1760	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1903.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUyOTE4NA==	We should check for non ZERO size of the log file or look for certain String on the Log file	Javadoc	No	FALSE												
oracle/weblogic-kubernetes-operator	1911	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzAxOA==	1759	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1911.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzAxOA==	Should this test be named ..._jobNotCreated rather than ..._reportValidationError?	Code	Yes	FALSE												
oracle/weblogic-kubernetes-operator	1753	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY5MzYwMA==	1763	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1753.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY5MzYwMA==	is there a reason why it shouldn't run in parallel?	Code	No	FALSE												
oracle/weblogic-kubernetes-operator	1764	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MTk4Mg==	1762	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1764.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MTk4Mg==	So this is the name of an environment variable whose value is a comma-separated list of environment variable names? That's far from obvious. At the very least, please include a Javadoc comment explaining that.	Javadoc	Yes	FALSE												
oracle/weblogic-kubernetes-operator	1648	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDMzOA==	1767	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1648.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NDMzOA==	we need to consider moving these methods into helper classes, it applies for MII methods also before the code is duplicated in multiple It classes as more tests will be added now.	Code	No	FALSE												
oracle/weblogic-kubernetes-operator	1651	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxMTM2NQ==	1766	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1651.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIxMTM2NQ==	method name seems wrong, something like verifyRollingRestartOccurred maybe?	Code	Yes	FALSE												
osgp/open-smart-grid-platform	228	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0MTUxNg==	1774	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osgp_open-smart-grid-platform/pr_228.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0MTUxNg==	Why are these validations on request and response set to false?	Code	No	FALSE												
osgp/open-smart-grid-platform	355	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMTc3NA==	1772	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osgp_open-smart-grid-platform/pr_355.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMTc3NA==	remove the Db and name attributes from the annotation	Code	Yes	TRUE	Bad identifier	Class	Not Accepted									
osgp/open-smart-grid-platform	488	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY2NjcxOA==	1770	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osgp_open-smart-grid-platform/pr_488.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY2NjcxOA==	The value of AES_SECRET is not used. It looks like it should be removed.	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		UrF: Unread field (URF_UNREAD_FIELD)	UnusedPrivateField	Unused "private" fields should be removed	NONE
osgp/open-smart-grid-platform	326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMjgyMg==	1773	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osgp_open-smart-grid-platform/pr_326.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcxMjgyMg==	like this (also see the closed source JpaDeviceSpecifications class for similar code), in case the "or" remains: Specification descriptionSpecification = this.eventSpecifications(...); Specification descriptionStartsWithSpecification = this.eventSpecifications(...); return specification.and(descriptionSpecification.or(descriptionStartsWithSpecification)); And in the eventSpecifications methods: if (description == null) { return (eventRoot, query, cb) -> cb.and(); } return ((eventRoot, query, cb) -> cb.equal(eventRoot. get(DESCRIPTION), description)); When using the "cb.and()" construction, you can also remove the "throws ArgumentNullOrEmptyException" clause.	Code	No	FALSE												
osgp/open-smart-grid-platform	381	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNTUwMQ==	1771	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osgp_open-smart-grid-platform/pr_381.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzNTUwMQ==	License header missing.	Javadoc	No	FALSE												
osmandapp/osmand	9469	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxNTQ1Mw==	1778	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmandapp_osmand/pr_9469.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxNTQ1Mw==	Introduce typeName for GpxSplitType	Code	Discard	FALSE												
osmandapp/osmand	10369	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MzQ5Nw==	1775	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmandapp_osmand/pr_10369.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MzQ5Nw==	Delete not used class	Code	Yes	FALSE												
osmandapp/osmand	9584	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4NTk4Nw==	1777	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmandapp_osmand/pr_9584.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4NTk4Nw==	getTrkSegment > getNonEmptyTrkSegment	Code	Yes	FALSE												
osmandapp/osmand	8918	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYxMjIwNA==	1780	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmandapp_osmand/pr_8918.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYxMjIwNA==	? Iterate in the loop over and check each subtype, it should be faster	Code	No	FALSE												
osmandapp/osmand	9619	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0NDU0Mg==	1776	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmandapp_osmand/pr_9619.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA0NDU0Mg==	description??	Code	No	FALSE												
osmlab/atlas-checks	276	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5MzYwMg==	1785	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmlab_atlas-checks/pr_276.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5MzYwMg==	What is callSite.short ?	String value	No	FALSE												
osmlab/atlas-checks	263	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5Nzc0OQ==	1786	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmlab_atlas-checks/pr_263.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5Nzc0OQ==	Rather than having this as a boolean switch, perhaps it would be more useful to have the configurable be a taggable filter. That way the user could easily select whatever lines they liked to be flagged.	Code	No	FALSE												
osmlab/atlas-checks	381	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2MjE5Mg==	1781	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmlab_atlas-checks/pr_381.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc2MjE5Mg==	this might need to be changed if you use the suggestion I made last ^ && !edgeBeingVerifiedHighwayTag.equals(HighwayTag.NO)	Code	No	FALSE												
osmlab/atlas-checks	357	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA5MTc0OA==	1782	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmlab_atlas-checks/pr_357.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2OTA5MTc0OA==	I'm guessing this was to test something?	Code	No	FALSE												
palantir/atlasdb	4515	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MjgwMg==	1790	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_atlasdb/pr_4515.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MjgwMg==	nit: renaming can reduce the diff	Code	Discard	FALSE												
palantir/atlasdb	4711	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2Nzc2Mg==	1788	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_atlasdb/pr_4711.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2Nzc2Mg==	Refactor this check to a method.	Code	No	FALSE												
palantir/atlasdb	4503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2NjUxMw==	1791	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_atlasdb/pr_4503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjA2NjUxMw==	I think we should test the logic in this class in this PR, especially since it's on a live path	Code	No	FALSE												
palantir/gradle-baseline	1447	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mzc2NA==	1795	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1447.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mzc2NA==	No suggested fix to lop off a few unimportant params? ;-) We might want to add something to the message suggesting an args object with a builder, potentially recommending immutables.	Code	No	FALSE												
palantir/gradle-baseline	1365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0NDcxNg==	1798	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1365.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0NDcxNg==	Not sure these negative tests are necessary when we have refactoring tests as well.	Code	Discard	FALSE												
palantir/gradle-baseline	1492	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIwNDE3OA==	1793	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1492.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIwNDE3OA==	possible endsWith? I'm thinking we might want to catch some classes like FooBuilder or SimpleBuilder?	Code	No	FALSE												
palantir/gradle-baseline	1459	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5NTc3Nw==	1794	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1459.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg5NTc3Nw==	Slight preference to use factory methods for these, that way we can fluently build the test from the factory. I recall some of the preconditions tests attempting multiple asserts on a shared helper and getting unexpected results because these guys are stateful!	Code	No	FALSE												
palantir/gradle-baseline	1145	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0ODgzNw==	1803	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1145.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0ODgzNw==	I think we may want to provide a different message if new duplicates appear vs when problems are fixed, or mention here that it's dangerous to have duplicate classes on the classpath and explain why it's worth spending time to fix. Otherwise I think folks will see "run X to update locks" and they'll ./X.	Code	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Add a message to an exception	Yes		No	No	NONE	NONE	NONE	NONE
palantir/gradle-baseline	1163	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMjYzNg==	1802	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1163.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMjYzNg==	Suggested change                                                                                                    private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()                                                    private static final Matcher<VariableTree> LOGGER = Matchers.allOf(                                                            Matchers.isField(),                                                            Matchers.isSameType(Logger.class),                                                            Matchers.variableInitializer(MethodMatchers.staticMethod()                                                                    .onClass(LoggerFactory.class.getName())                                                                    .named("getLogger")                                                                    .withParameters(Class.class.getName())));	Code	Yes	FALSE												
palantir/gradle-baseline	1338	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMDY0Nw==	1801	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1338.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMDY0Nw==	should this be @Classpath?	Code	No	FALSE												
pantsbuild/intellij-pants-plugin	508	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyNzI0Nw==	1806	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pantsbuild_intellij-pants-plugin/pr_508.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgyNzI0Nw==	Does this generate a json parser? Where are we changing our JSON parsing to consume this new field?	Code	No	FALSE												
pantsbuild/intellij-pants-plugin	476	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDY4OA==	1808	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pantsbuild_intellij-pants-plugin/pr_476.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwMDY4OA==	Also run formatter on this file	Code	Yes	FALSE												
pantsbuild/intellij-pants-plugin	492	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2MzU5MA==	1807	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pantsbuild_intellij-pants-plugin/pr_492.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2MzU5MA==	The method name is actually self-descripting :)	Comments	Yes	FALSE												
pantsbuild/intellij-pants-plugin	516	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NjgyMg==	1805	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pantsbuild_intellij-pants-plugin/pr_516.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NjgyMg==	This leaves a leading / in the start resulting in project names like .foo	Code	No	FALSE												
pantsbuild/intellij-pants-plugin	526	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4OTA5OQ==	1804	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pantsbuild_intellij-pants-plugin/pr_526.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4OTA5OQ==	Just to confirm, does this check happen for users who are not using a BSP project?	Code	No	FALSE												
papermc/paper	3193	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTA1MQ==	1809	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/papermc_paper/pr_3193.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTAxMTA1MQ==	Wasn't this supposed to be called AsyncPlayerSendCommandsEvent?	Code	Yes	FALSE												
patchworkmc/patchwork-api	79	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0Mjc0Nw==	1815	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_79.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0Mjc0Nw==	Suggested change                                                                                                  // TODO: Some vanilla registry types are not patched yet, add this check to avoid crash                                                  // TODO: Some vanilla registry types are not patched yet, this check is added to avoid a crash	Comments	Yes	FALSE												
patchworkmc/patchwork-api	38	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzM0MA==	1817	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_38.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzM0MA==	No separation between doc comments and the class.                         Suggested change	Javadoc	Yes	TRUE	Inconsistent or disrupted formatting	Class	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	NONE	NONE
patchworkmc/patchwork-api	38	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzQ1MA==	1818	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_38.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzQ1MA==	Same for the other lines                         Suggested change                                                                                                  * <p>This event is not Cancelable.</p>                                                  * <p>This event is not cancellable.</p>	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
patchworkmc/patchwork-api	38	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxNjA4Nw==	1819	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_38.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxNjA4Nw==	Technically this should be a FIELD injection before the GETFIELD instruction.	Code	No	FALSE												
patchworkmc/patchwork-api	130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MjExNw==	1812	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MjExNw==	This doesn't actually implement the interface?	Code	No	FALSE												
patchworkmc/patchwork-api	47	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4OTQ2Ng==	1816	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_47.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA4OTQ2Ng==	We can probably avoid this cast?	Code	No	FALSE												
patchworkmc/patchwork-api	87	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyNjAyMQ==	1814	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_87.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyNjAyMQ==	Suggested change                                                                                                                                                                                                 // TODO: This isn't called anywhere yet	Comments	Yes	FALSE												
patchworkmc/patchwork-api	162	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyOTE1Mg==	1811	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_162.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyOTE1Mg==	I don't think this part of World is thread-safe. Maybe implement something like what I do in my BlockSnapshot PR?	Code	No	FALSE												
payara/payara	4904	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1MTg4NA==	1823	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4904.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI1MTg4NA==	Whats expected if there is a number followed by a whitespace and vice versa?	Code	No	FALSE												
payara/payara	5063	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMDQwOQ==	1822	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_5063.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMDQwOQ==	I would move instance count into own class, not have instance counts in different classes. Minimize changes to WebappClassLoader Also, this doesn't touch non-webapp (jar, ear etc) class loaders	Code	No	FALSE												
payara/payara	4433	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM1NDc1Mg==	1827	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4433.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM1NDc1Mg==	I don't see why this would be a String instead of byte[] directly. The extra step of encoding that as String again seems unnecessary and a potential source or trouble.	Code	No	FALSE												
payara/payara	4422	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxNzU5Nw==	1829	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4422.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxNzU5Nw==	Minor point: this comment seems to be floating in space a bit	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Loop	Accepted	Remove a useless code comment	Yes		No	No	NONE	NONE	NONE	NONE
payara/payara	4430	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2MjEwMg==	1828	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4430.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk2MjEwMg==	As javadoc suggests, you should add following line to avoid interaction with other tests. It can also detect that some threads cannot finish: assertTrue("Deadlock detected!", executor.awaitTermination(10, TimeUnit.SECONDS)); EDIT: I updated this several times, I was sleepy yesterday and could not decide between assertTrue/assertFalse, sorry :D	Code	No	FALSE												
payara/payara	4884	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMjMwMw==	1824	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4884.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgwMjMwMw==	Wonder why this does not have the Command suffix.	Code	Yes	FALSE												
payara/payara	4758	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NTc3MQ==	1826	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4758.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NTc3MQ==	Would it hurt to instead initialise the properties field with an empty map?	Code	No	FALSE												
pgmdev/pgm	758	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEzNzQ5Ng==	1830	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pgmdev_pgm/pr_758.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDEzNzQ5Ng==	Suggested change                                                                                                      ImmutableSet.Builder<SelfIdentifyingFeatureDefinition> modes = ImmutableSet.builder();                                                      for (String modeId : node.getValue().split("\\s")) {                                                        SelfIdentifyingFeatureDefinition mode =                                                            context.getFeatures().get(modeId, SelfIdentifyingFeatureDefinition.class);                                                        if (mode == null) {                                                          throw new InvalidXMLException("No mode with ID '" + modeId + "'", node);                                                        }                                                        modes.add(mode);                                                      }                                                      return modes.build();                                                      ImmutableSet.Builder<Mode> modes = ImmutableSet.builder();                                                      for (String modeId : node.getValue().split("\\s")) {                                                        Mode mode = context.getFeatures().get(modeId, Mode.class);                                                        if (mode == null) {                                                          throw new InvalidXMLException("No mode with ID '" + modeId + "'", node);                                                        }                                                        modes.add(mode);                                                      }                                                      return modes.build();                                 Get modes, not SelfIdentifyingFeatureDefinitions	Code	No	FALSE												
pgmdev/pgm	621	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3MzcxMg==	1831	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pgmdev_pgm/pr_621.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDI3MzcxMg==	You can simplify this using a reducer instead of a collector:     TextComponent result =         this.scores.entrySet().stream()             .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))             .limit(10)             .reduce(                 TextComponent.builder(),                 (builder, entry) ->                     builder                         .append(entry.getKey().getName(NameStyle.VERBOSE))                         .append(": ", TextColor.GRAY)                         .append("" + entry.getValue().intValue(), TextColor.WHITE),                 ComponentBuilder::append)             .build();	Code	Yes	FALSE												
pgmdev/pgm	284	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyNzI4Nw==	1833	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pgmdev_pgm/pr_284.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzcyNzI4Nw==	Since this is TeamMatchModule, we will need to check if the Party is a Team and not a Tribute. event.getOldParty() instanceof Team && event.getNewParty() instanceof Team The reason this works is because null instanceof <anything> is always evaluated to be false.	Code	No	FALSE												
pgmdev/pgm	218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0Mzg3MQ==	1834	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pgmdev_pgm/pr_218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0Mzg3MQ==	& should also be translatable.	Code	No	FALSE												
phac-nml/irida	813	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNzU5MQ==	1836	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/phac-nml_irida/pr_813.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNzU5MQ==	Remove the final from the variables	Code	No	FALSE												
phac-nml/irida	834	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA5OTExNg==	1835	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/phac-nml_irida/pr_834.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA5OTExNg==	Is there any use for the setters?  Since its an enum it doesn't really make sense for an outside object to modify it.  If its needed for hibernate or something though you can switch them to private.	Code	No	FALSE												
pmd/pmd	2635	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMDk4MQ==	1841	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2635.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyMDk4MQ==	Should we collect ruleset related APIs in a subpackage net.sourceforge.pmd.ruleset?	Code	No	FALSE												
pmd/pmd	2830	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxNjEzMA==	1838	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2830.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxNjEzMA==	This descriptor is unused, right?	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		UrF: Unread field (URF_UNREAD_FIELD)	UnusedPrivateField	Unused "private" fields should be removed	NONE
pmd/pmd	2830	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjU3Nw==	1839	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2830.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjU3Nw==	Please return an unmodifiable List here (or even an Iterable<Issue>). We rarely use arrays in the codebase. You can write Collections.unmodifiableList(Arrays.asList(...))	Code	Yes	TRUE	Complex, long, or inadequate logic	Class	Accepted	Use a different type to be consistent with other parts of the code	Yes		Yes		NONE	NONE	NONE	NONE
pmd/pmd	2396	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5OTkyMg==	1843	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2396.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5OTkyMg==	You could just use a Comparator<Node> here, defining it like so: Comparator.<Node>comparingInt(Node::getBeginLine).thenComparing(Node::getBeginColumn)	Code	No	FALSE												
pmd/pmd	2281	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg1ODQzNQ==	1844	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2281.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg1ODQzNQ==	Suggested change                                                                                                     * Returns the canonical name of this class, it it exists.                                                     * Returns the canonical name of this class, if it exists.	Javadoc	Yes	FALSE												
pmd/pmd	2672	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MjM1Mw==	1840	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2672.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ3MjM1Mw==	same here, although ReportTree is already deprecated	Code	Discard	FALSE												
pmd/pmd	2968	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYyMjg5OQ==	1837	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2968.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYyMjg5OQ==	What's the reason to go one level up in the hierarchy?	Code	No	FALSE												
powsybl/powsybl-core	1461	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1MTIxMg==	1846	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/powsybl_powsybl-core/pr_1461.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1MTIxMg==	Would be more pretty to wrtie PsseVersion.isSupported(rev) or maybe a PsseVersion.checkVersion(rev) method	Code	Yes	FALSE												
powsybl/powsybl-core	1319	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyODU0Ng==	1849	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/powsybl_powsybl-core/pr_1319.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyODU0Ng==	Do we really need this method: what is the risk to change the behavior of the getIdentifiable(String id) if we consider aliases like unique IDs. At the end, all the user code would use this new method, don't they?	Code	No	FALSE												
powsybl/powsybl-core	1442	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg5OTYyMw==	1847	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/powsybl_powsybl-core/pr_1442.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg5OTYyMw==	Please rename also dynamicEventModelsSupplier into eventModelsSupplier here.	Code	Yes	FALSE												
powsybl/powsybl-core	1130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1MTQxOA==	1850	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/powsybl_powsybl-core/pr_1130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTE1MTQxOA==	Same remark here	Code	Discard	FALSE												
powsybl/powsybl-core	1496	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MzEyMA==	1845	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/powsybl_powsybl-core/pr_1496.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4MzEyMA==	This is arguable: I think we should keep the tests here: It's not possible to update the GenerationAdder after you have called the add(). So you should be noticed that it's not complete when we consider it should be fully completed. @MioRtia @tadam50 What do you think?	Code	No	FALSE												
pravega/pravega	4716	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg3MDg1Nw==	1854	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4716.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg3MDg1Nw==	This method should return CompletableFuture.	Code	No	FALSE												
pravega/pravega	4716	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMDI2OQ==	1855	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4716.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxMDI2OQ==	You only have 1 bookie. Simplify your code.	Code	No	FALSE												
pravega/pravega	4555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTUxNw==	1859	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4555.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTUxNw==	This needs wrapping as well.	Javadoc	Yes	FALSE												
pravega/pravega	4686	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMTYxNw==	1857	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4686.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMTYxNw==	Why does this have a setter?	Code	No	FALSE												
pravega/pravega	4999	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODA4MzUwNA==	1851	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4999.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODA4MzUwNA==	Minor: extra spaces	Code	Yes	FALSE												
pravega/pravega	4941	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDY2Nw==	1852	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4941.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDY2Nw==	How can a transaction that does not exist can fail? Maybe it is fine to have this error here but it deserves a little explanation in javadocs	Javadoc	Yes	FALSE												
pravega/pravega	4588	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5MDQ1OA==	1858	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4588.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI5MDQ1OA==	+1	Code	No	FALSE												
prebid/prebid-server-java	1031	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxOTgzNA==	1861	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_1031.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTYxOTgzNA==	Minor. Pls place this line near to usage.	Code	Yes	FALSE												
prebid/prebid-server-java	664	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5NTAwMg==	1866	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_664.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5NTAwMg==	inline throws	Code	Yes	FALSE												
prebid/prebid-server-java	685	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NDUyMQ==	1865	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_685.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NDUyMQ==	make {{Host}} and {{SourceId}} constants in the class	Code	Yes	FALSE												
prebid/prebid-server-java	729	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg2MjY4MQ==	1863	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_729.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg2MjY4MQ==	Probably you can remove this 'if' completely and later use impsByTagID.keySet(), the result should be the same.	Code	Yes	FALSE												
prebid/prebid-server-java	1032	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NDYzMg==	1860	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_1032.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NDYzMg==	Method is not on his method call ordering position	Code	Yes	TRUE	Inconsistent or disrupted formatting	Class	Accepted	Move methods to be in a call ordering position	Yes		No	No	NONE	NONE	NONE	NONE
prebid/prebid-server-java	583	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUwNzUyMA==	1870	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_583.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUwNzUyMA==	No need to add a custom message, just use the one from caught exception - e.getMessage().	Code	Yes	FALSE												
prebid/prebid-server-java	596	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNDY0Mw==	1868	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_596.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDYwNDY0Mw==	Arrange method, according to workflow chain.	Code	Yes	FALSE												
prebid/prebid-server-java	596	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NDAzNg==	1869	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_596.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjg1NDAzNg==	FALSE	Code	No	FALSE												
prebid/prebid-server-java	712	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMzg2Nw==	1864	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_712.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMzg2Nw==	Hint: we can use Objects.equals(...) helper here, so will avoid one check.	Code	Yes	FALSE												
prestodb/presto	14101	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMwMzE5MA==	1875	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prestodb_presto/pr_14101.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTMwMzE5MA==	keep	Comments	No	FALSE												
prestodb/presto	15187	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzODQ4NA==	1872	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prestodb_presto/pr_15187.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzODQ4NA==	why can we short circuit for non-structs?  is it because there will never be any subfields?  I think the shortcircuiting is more confusing.	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Accepted	Replace short-circuit in stream by an alternative reducing operation	Yes		Yes		NONE	NONE	NONE	NONE
prestodb/presto	14863	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc5OA==	1873	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prestodb_presto/pr_14863.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxODc5OA==	nit: Should we omit adding a helper method when it is used only once ? I think this can be inlined ?	Code	Yes	FALSE												
primefaces/primefaces	6472	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0OTEyNg==	1876	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/primefaces_primefaces/pr_6472.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI0OTEyNg==	Made this a fall through since both 'z' and 'Z' do the same thing.	Code	Yes	FALSE												
primefaces/primefaces	6041	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzA2NQ==	1878	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/primefaces_primefaces/pr_6041.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzA2NQ==	I think a better way to write this method is:         protected void addResponseCookie(ExternalContext externalContext) {             final boolean secure = ((HttpServletRequest) externalContext.getRequest()).isSecure();             Map<String, Object> map;             if (secure) {                 map = new HashMap<>(2);                 map.put("secure", secure);                 map.put("sameSite", "Strict");             }             else {                 map = Collections.emptyMap();             }             externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, "true", map);         } I also future proofed it by adding sameSite=Strict even though JSF and Servlet spec does not support it yet it hopefully will in the future as this is becoming a requirement of most browsers.	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Rewrite the code to avoid semantic duplicate method call	Yes		No	No	NONE	NONE	Two branches in a conditional structure should not have exactly the same implementation	NONE
project-ncl/pnc	3335	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyODc5Mg==	1881	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/project-ncl_pnc/pr_3335.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyODc5Mg==	(!(o instanceof BuildConfigurationAudited))	Code	No	FALSE												
project-ncl/pnc	3342	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDAxMg==	1880	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/project-ncl_pnc/pr_3342.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg5MDAxMg==	Please add super.close() there so that the underlying regular client closes too.	Code	No	FALSE												
project-ncl/pnc	3090	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5OTI0Nw==	1882	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/project-ncl_pnc/pr_3090.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5OTI0Nw==	A Build Config contains...	Javadoc	Yes	FALSE												
pytorch/serve	15	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMxNDQ3OA==	1889	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pytorch_serve/pr_15.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMxNDQ3OA==	this removes unregisterModel() is the impl for this coming in a future commit?	Code	No	FALSE												
pytorch/serve	15	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Nzk1Ng==	1890	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pytorch_serve/pr_15.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDc5Nzk1Ng==	modelVersion.equals("all")	Code	Yes	FALSE												
pytorch/serve	261	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NjExNA==	1886	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pytorch_serve/pr_261.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NjExNA==	It's not clear if this plugin is needed to move the plugins SDK?	Code	No	FALSE												
pytorch/serve	460	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMDYyNw==	1885	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pytorch_serve/pr_460.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMDYyNw==	ssl port for metric endpoint?	Code	No	FALSE												
pytorch/serve	152	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMDA2Mg==	1887	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pytorch_serve/pr_152.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMDA2Mg==	move "marName" to a global name	Code	No	FALSE												
pytorch/serve	152	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMTUyNg==	1888	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pytorch_serve/pr_152.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIyMTUyNg==	Same here. const strings / prop names to either global location or use getter methods.	Code	Yes	FALSE												
quarkusio/quarkus	6782	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY2ODY0NQ==	1895	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus/pr_6782.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY2ODY0NQ==	Same here, I'm pretty sure it will end up calling declaredAnnotations() again.	Code	No	FALSE												
quarkusio/quarkus	13394	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4NDAzMQ==	1892	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus/pr_13394.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzQ4NDAzMQ==	We generally try to avoid having lambdas in code that executes at runtime. Can you please replace it with an if statement?	Code	No	FALSE												
quarkusio/quarkus	12857	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4NzEwNg==	1893	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus/pr_12857.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk4NzEwNg==	Isn't just a matter of checking whether or not the state cookie was set and if not just redirect to the IdP ?	Code	No	FALSE												
quarkusio/quarkus	13532	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA0MDI0OQ==	1891	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus/pr_13532.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA0MDI0OQ==	Suggested change                                                                                                                    .addClasses(DisabledSchedulerTest.Jobs.class)                                                                    .addClasses(PausedSchedulerTest.Jobs.class)                                 Thank you for adding a test. I think we added a wrong job class. It should be PausedSchedulerTest #Jobs.  Can you have a look at this, once it is done please squash the commits into one commit as suggested by @gsmet and this will be good for merging.	Code	No	FALSE												
quarkusio/quarkus	10890	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDY1OA==	1894	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus/pr_10890.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDY1OA==	This javadoc will be the title of the section so maybe just "User interface" or "UI configuration" would be better.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to make it more concise	Yes		Yes		NONE	NONE	NONE	NONE
quarkusio/quarkus-quickstarts	626	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEyNjg1Mg==	1897	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_626.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEyNjg1Mg==	Is ReactiveRoutes.asJsonArray( required now?	Code	No	FALSE												
quarkusio/quarkus-quickstarts	683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU3NDYwMQ==	1896	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_683.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU3NDYwMQ==	Use log.info?	Other	Yes	FALSE												
quarkusio/quarkus-quickstarts	477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg==	1900	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_477.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ3Mjg0Mg==	fyi you can greatly simplify the parsing and usage text by using picocli ... not a blocker for the PR but just a pointer.  example: https://github.com/maxandersen/jbang/blob/master/examples/smee.java#L51	Code	Yes	FALSE												
quarkusio/quarkus-quickstarts	459	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzNzUyMA==	1902	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_459.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkzNzUyMA==	Some of them have quickstart in it but not all of them? Should we make everything consistent? @rsvoboda WDYT? BTW, we will need to upgrade the guides too.	Code	Yes	FALSE												
quarkusio/quarkus-quickstarts	578	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2NDQ2Mw==	1898	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_578.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc2NDQ2Mw==	Also assert the station name so to see the joining works?	Code	No	FALSE												
quarkusio/quarkus-quickstarts	468	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MjIzNA==	1901	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_468.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE1MjIzNA==	Any reason not to have this bean in its own package?	Code	No	FALSE												
quarkusio/quarkus-quickstarts	560	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDExNg==	1899	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quarkusio_quarkus-quickstarts/pr_560.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0MDExNg==	ID will be automatically populated by MongoDB so you can skip them	Code	No	FALSE												
questdb/questdb	301	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NjU5NQ==	1907	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_301.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1NjU5NQ==	This change seems to be unrelated, was it added accidentally or it is on purpose?	Code	No	FALSE												
questdb/questdb	133	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTUyMQ==	1909	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_133.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA1MTUyMQ==	sorry to be a pain, all other "for" loops across the project at limited by constant rather than function. The rationale is to avoid calling function in a loop unnecessarily (which java will do). This may not matter as much here, but still it goes on the assumption that sourceMetaData.getColumnCount() is lightweight, which it is, but only coincidentally. More robust loop would be: for (int i = 0, n = sourceMetaData.getColumnCount(); i < n; i++) {	Code	No	FALSE												
questdb/questdb	244	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwNzA3OQ==	1908	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_244.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwNzA3OQ==	This is a bad reference ownership. I feel this whole class can be part of TableWriter to avoid issues like this	Code	No	FALSE												
quickfix-j/quickfixj	322	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzODE0Ng==	1910	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quickfix-j_quickfixj/pr_322.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEzODE0Ng==	I know it does not make any sense, but to be backward compatible we need to set OutputKeys.INDENT, "yes" without setting the indent-amount, right?	Code	No	FALSE												
quickfix-j/quickfixj	322	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU2MTkwMg==	1911	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quickfix-j_quickfixj/pr_322.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzU2MTkwMg==	Suggested change                                                                                                     * probably not sufficient for production use, but it more intended                                                     * probably not sufficient for production use, but is more intended	Javadoc	Yes	FALSE												
quickfix-j/quickfixj	298	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0Mzg5Nw==	1913	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quickfix-j_quickfixj/pr_298.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc0Mzg5Nw==	assertFalse(acceptorSessions.contains(session2)); would be good.	Code	No	FALSE												
quickfix-j/quickfixj	288	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxODYzOQ==	1914	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quickfix-j_quickfixj/pr_288.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxODYzOQ==	Just a nitpick: could we remove the access modifier to enable access from within the package?	Code	No	FALSE												
quickfix-j/quickfixj	259	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NTkwMg==	1915	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quickfix-j_quickfixj/pr_259.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM0NTkwMg==	Make this private - it's not used outside this class.	Code	No	FALSE												
quran/quran_android	1363	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTE5Mg==	1917	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quran_quran_android/pr_1363.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTE5Mg==	replace with:   @Inject   QuranSettings quranSettings;  field at the top.	Code	No	FALSE												
quran/quran_android	1371	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTIzMQ==	1916	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quran_quran_android/pr_1371.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTIzMQ==	I continued to use the same IDs that the default Toast layout used.	Code	No	FALSE												
quran/quran_android	1313	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDgxNQ==	1918	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quran_quran_android/pr_1313.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDgxNQ==	what's the o here for? can we expand it?	Code	Yes	FALSE												
quran/quran_android	1313	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDkxOQ==	1919	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quran_quran_android/pr_1313.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQ0MDkxOQ==	this function would really benefit from some unit tests	Code	No	FALSE												
reactor/reactor-core	2277	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NDU3OA==	1925	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/reactor_reactor-core/pr_2277.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU0NDU3OA==	actually, I don't think this one should be removed :( It looks like it was deprecated by mistake, because ultimately the one we'd want removed is the one with a Consumer<Subscription> (see the TODO on subscribe variant with such a Consumer below)	Code	No	FALSE												
reactor/reactor-core	2363	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNzcxNA==	1924	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/reactor_reactor-core/pr_2363.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNzcxNA==	After further thoughts, I'm having huge doubts about the introduction of this method and the corresponding one in Mono as I think it can easily be missed by the user and though results in an invalid mix & match of firstValues and or operators called.	Code	No	FALSE												
reactor/reactor-core	2405	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMjk1Nw==	1923	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/reactor_reactor-core/pr_2405.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMjk1Nw==	we need either to make it consistent with the above constructor or open a separate PR to swap the parameters of the above constructor, wdyt? (the later would be breaking between RC1 and RC2, but probably a more meaningful order)	Code	Yes	FALSE												
reactor/reactor-core	2518	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxNzIxNw==	1920	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/reactor_reactor-core/pr_2518.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxNzIxNw==	wait, do we still need that? now the subscriber could be null and none of the Consumer<CoreSubscriber> have been amended to fix that :(	Code	No	FALSE												
realm/realm-java	6837	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNjcxNw==	1930	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6837.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNjcxNw==	Should probably be getDefaultCodecRegistry	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
realm/realm-java	6837	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNzk3NQ==	1931	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6837.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNzk3NQ==	It is fine to keep this public as long as there is a Javadoc stating it is still work-in-progress. The v10 branch is considered under development anyway, so merging "half-finshed" work should be okay as long as it is marked as such and doesn't break existing functionality.	Code	No	FALSE												
realm/realm-java	6839	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk0NzU5MQ==	1929	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6839.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk0NzU5MQ==	Suggested change                                                                                                        String filterString = filter == null ?                                                        String filterString = (filter == null) ?	Code	Yes	FALSE												
realm/realm-java	6786	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTI3Mw==	1934	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6786.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTI3Mw==	Suggested change                                                                                                     * @param callback callback used when the the keys were fetched or the call failed. The callback                                                     * @param callback callback used when the keys were fetched or the call failed. The callback	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
realm/realm-java	7053	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA==	1927	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_7053.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQzNzI5MA==	You don't need to call refresh. It should be up to date when opened.	Code	No	FALSE												
realm/realm-java	6788	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg3NzE4MA==	1933	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6788.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg3NzE4MA==	Unfortunately I still have not found a nice way to serialize to json without adding json keys using org.bson-library	Code	No	FALSE												
realm/realm-java	6961	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMyOTg5Ng==	1928	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6961.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMyOTg5Ng==	This factory method feels a bit weird to have public? Since it doesn't really work for any other "feature"?	Code	No	FALSE												
realm/realm-java	7097	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NDI1MA==	1926	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_7097.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODU3NDI1MA==	Is the code snippet pointed to from the doc is up-to-date?	Code	No	FALSE												
redhataccess/pantheon	266	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwMjk4Ng==	1937	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/redhataccess_pantheon/pr_266.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwMjk4Ng==	Would it make more sense to set the path to "/api/assemblies"?	Code	No	FALSE												
redhataccess/pantheon	301	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NzQ3OQ==	1936	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/redhataccess_pantheon/pr_301.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NzQ3OQ==	instead of this conditional you coul use the traversal api. It would yield cleaner, more concise code.	Code	Yes	TRUE	Complex, long, or inadequate logic	Operation	Accepted	Replace method calling chain by existing API	Yes		No	No	NONE	NONE	NONE	NONE
redhataccess/pantheon	362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQzODUwNQ==	1935	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/redhataccess_pantheon/pr_362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQzODUwNQ==	please rename module_uuid to assembly_uuid	Code	Yes	TRUE	Bad identifier	Variable	Accepted but with different solution	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
redhataccess/pantheon	218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA1MDY1OA==	1938	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/redhataccess_pantheon/pr_218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA1MDY1OA==	So, this will NOT be appearing in the API anymore? Just confirming...	Code	No	FALSE												
redhataccess/pantheon	218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA1MjAyNQ==	1939	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/redhataccess_pantheon/pr_218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjA1MjAyNQ==	I'm having a bit of trouble following these event types. Could you explain what the difference is between ModuleVersionPublishStateEvent and ModuleVerisonPublishedEvent? they seem to be the same thing	Code	No	FALSE												
resilience4j/resilience4j	1063	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTY4Ng==	1945	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_1063.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTY4Ng==	Let's rename it to DEFAULT_TIMESTAMP_FUNCTION	Code	Yes	FALSE												
resilience4j/resilience4j	1093	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NzcxOA==	1944	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_1093.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NzcxOA==	Please use AssertJ	Code	Yes	FALSE												
resilience4j/resilience4j	990	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0MjI3NQ==	1946	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_990.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY0MjI3NQ==	Per my comment here, I'd strongly suggest we rename this default.	Code	Yes	FALSE												
resilience4j/resilience4j	1156	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUzMTYzOA==	1943	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_1156.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUzMTYzOA==	remove qualified name	Code	Yes	TRUE	Unnecessary Code	Class	Accepted	Remove imported type from fully qualified names	Yes		Yes		NONE	UnnecessaryFullyQualifiedName	Simple class names should be used	NONE
resilience4j/resilience4j	1175	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4NDI4OQ==	1942	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_1175.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4NDI4OQ==	just cosmetic/convention changes (empty lines): FallbackMethod fallbackMethod = FallbackMethod             .create("fallbackMethod", testMethod, new Object[]{"test", "test"}, target);  String fallback = fallbackMethod.fallback(new IllegalStateException("err");   assertThat(fallback)).isEqualTo("recovered-IllegalStateException");	Code	Yes	FALSE												
resilience4j/resilience4j	1179	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MTIxMQ==	1941	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_1179.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MTIxMQ==	You may want to make these values relative to the built in values in Micronaut https://github.com/micronaut-projects/micronaut-core/blob/2.1.x/aop/src/main/java/io/micronaut/aop/InterceptPhase.java#L43	Code	No	FALSE												
resteasy/resteasy	2526	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Njk3OA==	1949	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resteasy_resteasy/pr_2526.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0Njk3OA==	no RX layer so far  Where is RX classes used here?	Other	No	FALSE												
resteasy/resteasy	2526	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0OTE4NA==	1950	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resteasy_resteasy/pr_2526.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA0OTE4NA==	Why is this annotation added here?	Code	No	FALSE												
resteasy/resteasy	2632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ==	1947	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resteasy_resteasy/pr_2632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc3MzIzOQ==	This looks different from how we did it in the 3.x branches.	Code	No	FALSE												
resteasy/resteasy	2582	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyNDAxNw==	1948	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resteasy_resteasy/pr_2582.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgyNDAxNw==	should it handle rejection?	Code	No	FALSE												
resteasy/resteasy	2501	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyMDI5OQ==	1952	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resteasy_resteasy/pr_2501.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyMDI5OQ==	if (cache== null) check again here ?	Code	No	FALSE												
ripe-ncc/whois	651	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ5ODUxMg==	1955	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ripe-ncc_whois/pr_651.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODQ5ODUxMg==	Can the TODO be resolved?	Comments	No	FALSE												
ripe-ncc/whois	711	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUyMzkyNQ==	1953	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ripe-ncc_whois/pr_711.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUyMzkyNQ==	Can you add in a test for nameservers (i.e. the search) - the previous ones were removed	Code	No	FALSE												
ripe-ncc/whois	629	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA==	1957	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ripe-ncc_whois/pr_629.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA==	update.getUpdatedObject().getValuesForAttribute(AttributeType.MNT_BY); is a bit cleaner?	Code	Yes	FALSE												
ripe-ncc/whois	653	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5OTYwMw==	1954	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ripe-ncc_whois/pr_653.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM5OTYwMw==	Nitpicking here but .withPath(...) should be on next line.	Code	Yes	FALSE												
ripe-ncc/whois	632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NDEzMA==	1956	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ripe-ncc_whois/pr_632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NDEzMA==	Prefix with 'sort consistently ... for predictable search results'	Comments	Yes	FALSE												
rsksmart/rskj	1304	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTI5Ng==	1963	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1304.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTI5Ng==	Suggested change                                                                                                        byte[] opReturnOutput = BtcTransactionFormatUtils.extractOpReturnData(btcTx);                                                        byte[] opReturnOutputData = BtcTransactionFormatUtils.extractOpReturnData(btcTx);	Code	Yes	FALSE												
rsksmart/rskj	1350	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwNjUwMg==	1958	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1350.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEwNjUwMg==	Unused variable hash	Code	Yes	FALSE												
rsksmart/rskj	1305	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3ODk4OA==	1962	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1305.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTg3ODk4OA==	Any reason to this change?	Code	No	FALSE												
rsksmart/rskj	1159	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3NDIyOA==	1967	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1159.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk3NDIyOA==	Really? xD	Code	No	FALSE												
rsksmart/rskj	1303	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMTc2NA==	1964	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1303.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUzMTc2NA==	how about this way?     public static int numBytes(String val) {         return new BigInteger(val).bitLength() / 8 + 1;     }	Code	Yes	FALSE												
rsksmart/rskj	1326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyOTMyOA==	1961	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1326.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyOTMyOA==	Shouldn't we validate header and block, before preprocessing? This is a more open/complex question. The issue that i see, is that if block header (e.g.) is invalid, we'll be trying to get parents when not necessary.	Code	No	FALSE												
rsksmart/rskj	1294	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzMTA5NA==	1965	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1294.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMzMTA5NA==	I would add some tests for this method, seems to have some complexity.	Code	No	FALSE												
rsksmart/rskj	1344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3MTk2NQ==	1959	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1344.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3MTk2NQ==	Suggested change                                                                                                        when(provider.getFastBridgeFederationInformation(fastBridgeFederationP2SH)).thenReturn                                                            (Optional.of(fastBridgeFederationInformation)                                                        );                                                        when(provider.getFastBridgeFederationInformation(fastBridgeFederationP2SH))                                                           .thenReturn(Optional.of(fastBridgeFederationInformation));	Code	Yes	FALSE												
rsksmart/rskj	1327	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwMTAzMg==	1960	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1327.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMwMTAzMg==	shouldn't we limit the size of this map?	Code	No	FALSE												
rstudio/rstudio	6765	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTMyMw==	1974	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_6765.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MTMyMw==	nit: best practice is to use the Java interface type (List) and then instantiate it with the concrete class as required (ArrayList)	Code	No	FALSE												
rstudio/rstudio	6428	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2Mjc3Mw==	1975	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_6428.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2Mjc3Mw==	nit: update copyright year in header	Javadoc	No	FALSE												
rstudio/rstudio	6787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTE4MA==	1972	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_6787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU5MTE4MA==	Realize you're just moving this, but adding a unit test for this would be helpful!	Code	No	FALSE												
rstudio/rstudio	6787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTA0OQ==	1973	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_6787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzMTA0OQ==	I think you could re-use chunkLabel here. (I realize this is just coming up in the diff as part of the refactor but worth changing while you're in this code)	Code	No	FALSE												
rstudio/rstudio	6849	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwODY0Nw==	1971	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_6849.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwODY0Nw==	Reduce this whole method to:  public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)    {       return () -> handleUnsavedChangesBeforeExit(new ArrayList<>(), onCompleted);    }	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Replace anonymous inner class by lambda	Yes		Yes		NONE	NONE	Anonymous inner classes containing only one method should become lambdas	NONE
rstudio/rstudio	7416	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjAzNA==	1970	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_7416.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjAzNA==	IMHO, a more idiomatic way of specifying this is JavaScript would be this.activeColumn || "".	Code	Yes	TRUE	Incomplete or inadequate code documentation	Conditional	Accepted	Change code comment to better explain the associated code element	Yes		Yes		NONE	NONE	NONE	NONE
rstudio/rstudio	7994	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3NDY4NQ==	1968	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_7994.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM3NDY4NQ==	This command needs to be disabled, and probably hidden, when the allowSourceColumns preference prevents it from working. I'd suggest handling that in the source column manager (i.e. bind a preference listener that sets the command to be enabled/visible based on the value of the pref).	Code	No	FALSE												
rstudio/rstudio	7568	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYyMDEwMA==	1969	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_7568.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYyMDEwMA==	nit: missing comment header	Comments	Yes	FALSE												
runelite/runelite	11218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ2MDYyNg==	1983	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_11218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ2MDYyNg==	This probably breaks 9a2872e	Code	No	FALSE												
runelite/runelite	10682	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjQzNg==	1985	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_10682.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjQzNg==	Remove this newline	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	NONE	NONE
runelite/runelite	11852	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3OTYyMQ==	1979	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_11852.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3OTYyMQ==	Suggested change                                                                                                  new CrypticClue("Search the crates in the guard house of the northern gate of East Ardougne.", CRATE_356, new WorldPoint(2645, 3338, 0), "The guard house is northwest of the  East Ardougne market."),                                                  new CrypticClue("Search the crates in the guard house of the northern gate of East Ardougne.", CRATE_356, new WorldPoint(2645, 3338, 0), "The guard house northwest of the East Ardougne market."),	String value	No	FALSE												
runelite/runelite	11309	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MDQwMg==	1982	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_11309.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MDQwMg==	While this technically works as-is and is unlikely to break since it depends on hot-cold internals which are unlikely to change, it is completely dependent upon the ordering of temps and can be made to give incorrect results by passing a set with out-of-order temperatures. I'd like to see this made deterministic so that ordering would not matter.	Code	No	FALSE												
runelite/runelite	12377	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1OTA0NQ==	1977	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_12377.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE1OTA0NQ==	Perhaps 12593 and 12849 should be Lumbridge Swamp?	Code	No	FALSE												
runelite/runelite	11879	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5NDAwOA==	1978	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_11879.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk5NDAwOA==	Im pretty sure this is just draggingWidget.getIndex()	Code	No	FALSE												
runelite/runelite	11358	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3MzE2OQ==	1981	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_11358.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc3MzE2OQ==	There are potentially ~3 threads here (event, which comes in on EDT?), this thread, and the thread executing ping, so this is not thread safe. You should make a local reference to sessionId and then use that.	Code	No	FALSE												
runelite/runelite	10699	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE1MQ==	1984	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_10699.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE1MQ==	You could probably just make this reverse() + limit + forEach(buildBox)	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace an imperative logic by functional	Yes		Yes		NONE	NONE	"Stream" call chains should be simplified when possible	NONE
sage-bionetworks/synapse-repository-services	4006	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzNTMzMA==	1989	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sage-bionetworks_synapse-repository-services/pr_4006.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzNTMzMA==	Add test for the invalid token case, see the interceptor comment	Code	No	FALSE												
sage-bionetworks/synapse-repository-services	4014	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExNTY5Mw==	1988	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sage-bionetworks_synapse-repository-services/pr_4014.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExNTY5Mw==	+modify, view	Code	No	FALSE												
sage-bionetworks/synapse-repository-services	4207	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzMzkwNA==	1986	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sage-bionetworks_synapse-repository-services/pr_4207.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEzMzkwNA==	You can return a boolean from your query	Code	No	FALSE												
sage-bionetworks/synapse-repository-services	4029	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NDk0Mg==	1987	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sage-bionetworks_synapse-repository-services/pr_4029.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NDk0Mg==	You might want to check that there are no DB interactions instead and wrap it into the assertDoesNotThrow to give it context	Code	No	FALSE												
sage-bionetworks/synapse-repository-services	3999	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4NDA1MA==	1990	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sage-bionetworks_synapse-repository-services/pr_3999.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ4NDA1MA==	ID first then type	Code	No	FALSE												
sage-bionetworks/synapse-repository-services	3890	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDIwNA==	1991	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sage-bionetworks_synapse-repository-services/pr_3890.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDIwNA==	maxListSize	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
sakaiproject/sakai	7985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzI1MA==	1998	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_7985.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNzI1MA==	Use the AssignmentConstants in the pi that's the whole purpose so we don't recreate all these constants.	Code	Discard	FALSE												
sakaiproject/sakai	8689	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyMTMxMg==	1994	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_8689.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyMTMxMg==	Revert this change please.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Conditional	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	NONE	NONE
sakaiproject/sakai	8068	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE5NTE5NQ==	1997	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_8068.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE5NTE5NQ==	Can this be put into the above if(site != null) block? Conditional seems duplicated. Edit: disregard, I didn't notice the check on submitterID	Code	No	FALSE												
sakaiproject/sakai	8768	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQwODc1MQ==	1993	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_8768.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQwODc1MQ==	Suggested change                                                                                                      String targetRole = (String) target.get(userEid);                                 looks like targetRole is no longer needed?	Code	Yes	FALSE												
sakaiproject/sakai	8477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMTY4OA==	1996	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_8477.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxMTY4OA==	Why not use j2ee JsonObject here, instead? I know simplepagebean uses Google's lib, but the j2ee version is a very similar api, with perhaps better builder patterns.	Code	No	FALSE												
scireum/sirius-biz	843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NTg4Mw==	2004	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk3NTg4Mw==	Suggested change                                                                                                        return "zip".equalsIgnoreCase(fileExtension);                                                        return FILE_EXTENSION_ZIP.equalsIgnoreCase(fileExtension);	Code	Yes	FALSE												
scireum/sirius-biz	904	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwNzAwMw==	2002	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_904.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwNzAwMw==	Suggested change                                                                                                     * Once the parameter is build, the builder itself should no longer be used.                                                     * Once the parameter is built, the builder itself should no longer be used.	Javadoc	Yes	FALSE												
scireum/sirius-biz	926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzOTc1Ng==	1999	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzOTc1Ng==	make abstract for Blob ? the actual database isn't important here	Code	No	FALSE												
scireum/sirius-biz	913	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjI5NQ==	2000	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_913.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjI5NQ==	Suggested change                                                                                                                    executeForValidStream(inputStream, handlerConsumer);                                                                    executeProcessingStage(inputStream, stage);	Code	Yes	FALSE												
scireum/sirius-biz	846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE3Mzg1Ng==	2003	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE3Mzg1Ng==	s.a.	Code	No	FALSE												
scireum/sirius-biz	652	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQyNDQ2MA==	2006	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_652.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjQyNDQ2MA==	should this really be putIfAbsent ? If setUpDefaultClient changes and provides a idle timeout by default, this will no longer apply but it should still apply?	Code	No	FALSE												
seata/seata	2398	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzNzE1Nw==	2010	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/seata_seata/pr_2398.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzNzE1Nw==	How about change to final Map<String, ColumnMeta> primaryKeyMap = getTableMeta().getPrimaryKeyMap(); ... if (primaryKeyMap.containsKey(field.getName())) {	Code	No	FALSE												
seata/seata	2852	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzMzI0MQ==	2008	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/seata_seata/pr_2852.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzMzI0MQ==	Specifies beans that won't be scanned in the GlobalTransactionScanner	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Attribute	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
seata/seata	3050	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0Njg0NA==	2007	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/seata_seata/pr_3050.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjc0Njg0NA==	I think we don't need to check sql grammer.	Code	No	FALSE												
senx/warp10-platform	772	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyMjQ2Mw==	2015	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_772.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUyMjQ2Mw==	I think && !preBoundaryScan && !postBoundaryScan should be added. Better, enclose the few conditionals sharing this.	Code	No	FALSE												
senx/warp10-platform	772	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMDU0OA==	2016	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_772.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMDU0OA==	If you want to remove this kind of code, you left it in MultiScanGTSDecoderIterator, lines 385-410.	Code	No	FALSE												
senx/warp10-platform	891	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTUzNTg2Mw==	2011	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_891.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTUzNTg2Mw==	Same here with spaces in keys, prefer dots.	String value	Yes	FALSE												
senx/warp10-platform	891	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTU2MzI2Nw==	2012	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_891.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTU2MzI2Nw==	Can throw NPE because conn.getErrorStream(); can return null.	Code	No	FALSE												
senx/warp10-platform	862	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODM2Ng==	2013	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_862.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4ODM2Ng==	Unused.	Code	Yes	FALSE												
senx/warp10-platform	833	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0MTM4Mw==	2014	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_833.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0MTM4Mw==	GeoTimeSerie.TYPE.LONG == gts.getType()	Code	Yes	FALSE												
skriptlang/skript	3432	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MjIzNQ==	2021	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3432.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MjIzNQ==	We usually don't include annotations like this. It should be okay for the warning to be there.	Other	Yes	FALSE												
skriptlang/skript	3199	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng==	2025	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3199.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1ODY3Ng==	Nitpick, but could you remove the space here? ;)	Code	Yes	FALSE												
skriptlang/skript	3173	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4NzU4Ng==	2026	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3173.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4NzU4Ng==	This was an unnecessary line change.                         Suggested change                                                                                                  return join ? "join " + strings.toString(e, debug)                                                   +(delimiter != null ? " with "                                                   + delimiter.toString(e, debug) : "")                                                   : ((regex ? "regex " : "")                                                   +"split " + strings.toString(e, debug)                                                   + (delimiter != null ? " at "                                                   + delimiter.toString(e, debug) : ""));                                                  return join ? "join " + strings.toString(e, debug) +(delimiter != null ? " with " + delimiter.toString(e, debug) : "") : ((regex ? "regex " : "") +"split " + strings.toString(e, debug) + (delimiter != null ? " at " + delimiter.toString(e, debug) : ""));	Code	Yes	FALSE												
skriptlang/skript	2757	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MTc1NA==	2028	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_2757.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU3MTc1NA==	if the change is less than 1 why does it change anything at all?	Code	No	FALSE												
skriptlang/skript	2757	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjgwMw==	2029	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_2757.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NjgwMw==	missing spaces around <	Code	Yes	FALSE												
skriptlang/skript	3223	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng==	2023	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3223.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA0NDc5Ng==	IMO you should use curly brackets when you have an it / else if / else, but I’m not sure what the conventions say about that actually	Code	Yes	FALSE												
skriptlang/skript	3105	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NzEzMQ==	2027	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3105.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk0NzEzMQ==	Why did you change this?	Code	No	FALSE												
sleuthkit/autopsy	5691	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyMTgxMQ==	2033	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sleuthkit_autopsy/pr_5691.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyMTgxMQ==	The signature should likely be PropertySheetTask<T extends AbstractNode>. See the comment on computePropertyValue for more details.	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
sleuthkit/autopsy	5668	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwOTkzMw==	2034	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sleuthkit_autopsy/pr_5668.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUwOTkzMw==	Could this be an enum? Then we could use case statements later.	Code	Yes	FALSE												
sleuthkit/autopsy	5741	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMjIwMg==	2032	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sleuthkit_autopsy/pr_5741.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMjIwMg==	Just to appease netbeans create a private init function and put setLayout and the adds in that function.  That will make the light bulbs in netbeans go away.	Code	No	FALSE												
sleuthkit/autopsy	6205	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1NzA3Ng==	2030	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sleuthkit_autopsy/pr_6205.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU1NzA3Ng==	Why put these methods in a separate class?	Code	No	FALSE												
slimefun/slimefun4	2220	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxNTI3Mw==	2036	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/slimefun_slimefun4/pr_2220.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMxNTI3Mw==	this can just be nextDouble(0.5)                         Suggested change                                                                                                                double offset = ThreadLocalRandom.current().nextDouble(0, 0.5);                                                                double offset = ThreadLocalRandom.current().nextDouble(0.5);	Code	Yes	FALSE												
slimefun/slimefun4	2057	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4NjQyNQ==	2037	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/slimefun_slimefun4/pr_2057.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4NjQyNQ==	Copied comment. Wasn't changed.	Javadoc	Yes	FALSE												
slimefun/slimefun4	1925	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ==	2038	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/slimefun_slimefun4/pr_1925.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ==	getSlots() seem rather un-intuitive. Think that name could be improved.	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
smallrye/smallrye-reactive-messaging	774	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NDczMg==	2041	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_774.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU3NDczMg==	Why would it run on another context? Doesn't vert.x assure that the timer runs on the same context it was created on?	Comments	No	FALSE												
smallrye/smallrye-reactive-messaging	703	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1OTgxNQ==	2042	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_703.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1OTgxNQ==	Should have been received?	Comments	Yes	FALSE												
smallrye/smallrye-reactive-messaging	659	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMzAyMQ==	2043	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_659.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMwMzAyMQ==	It would be good to check if the spans belong to the same trace	Code	No	FALSE												
smallrye/smallrye-reactive-messaging	659	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMxNTc0OQ==	2044	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_659.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMxNTc0OQ==	There are missing tests when an active span is created in the test an messages are produced and consumed. In this case the spans created by the instrumentation should by linked to the span in the test.	Code	No	FALSE												
smallrye/smallrye-reactive-messaging	867	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MDA2Nw==	2039	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_867.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE2MDA2Nw==	This null check isn't strictly necessary since the code block is in a while received offset is not empty. But this is fine.	Code	Discard	FALSE												
smartdevicelink/sdl_java_suite	1426	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc2NDk3MQ==	2048	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smartdevicelink_sdl_java_suite/pr_1426.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc2NDk3MQ==	Should a card be added to address the TODO here and should we remove the TODO comment now?	Comments	No	FALSE												
smartdevicelink/sdl_java_suite	1426	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3Mzg4MQ==	2049	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smartdevicelink_sdl_java_suite/pr_1426.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3Mzg4MQ==	Do we need to update this right now and does it need to go from 2017 - 2020 as a combination of the original SdlSession and SdlSession2	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Change text in existing JavaDoc to update copyright	Yes		Yes		NONE	NONE	NONE	NONE
smartdevicelink/sdl_java_suite	1328	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI2OTEyMA==	2051	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smartdevicelink_sdl_java_suite/pr_1328.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI2OTEyMA==	Suggested change                                                                                                            if (windowCapability == null) {                                                            if (windowCapability == null || name == null) {	Code	No	FALSE												
smartdevicelink/sdl_java_suite	1481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1MDI2MA==	2047	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smartdevicelink_sdl_java_suite/pr_1481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1MDI2MA==	Can we remove this method and replace it with the proposed one liner Collections.singletonList(new TTSChunk(simple, SpeechCapabilities.TEXT));	Code	No	FALSE												
smartdevicelink/sdl_java_suite	1394	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxMjA5OQ==	2050	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smartdevicelink_sdl_java_suite/pr_1394.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxMjA5OQ==	For all Methods in this class, to be consistent, will you add a space before { to look like:  public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	NONE	WhitespaceAfter
sonarsource/sonar-java	2929	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2Nzk3MQ==	2055	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sonarsource_sonar-java/pr_2929.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2Nzk3MQ==	The test about hasSemantic() is useful for checks that extends IssuableSubscriptionVisitor. But because AbstractMethodDetection already do this test, we don't need it.	Code	Yes	TRUE	Unnecessary Code	Call	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
sonarsource/sonar-java	2871	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1OTk3NQ==	2057	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sonarsource_sonar-java/pr_2871.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc1OTk3NQ==	Code after this line does not appear anywhere in the two new files, this will reduce the coverage.	Code	No	FALSE												
sonarsource/sonar-java	3216	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzNTI1NA==	2054	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sonarsource_sonar-java/pr_3216.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzNTI1NA==	There's false-negatives because we don't support the second form:  return ACCESS_GRANTED; return AccessDecisionVoter.ACCESS_GRANTED;	Code	No	FALSE												
sonarsource/sonar-java	3274	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTExMDU3Ng==	2053	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sonarsource_sonar-java/pr_3274.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTExMDU3Ng==	Looks like my suggestion was not that elegant. For me it will be more readable to use lambda.                         Suggested change                                                                                                        ((Predicate<Tree>) ConstantsShouldBeStaticFinalCheck::isIgnoredKind).or(ConstantsShouldBeStaticFinalCheck::isThisOrSuper));                                                        (tree -> isIgnoredKind(tree) || isThisOrSuper(tree)));	Code	Yes	FALSE												
spinnaker/kork	516	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0MzgxNA==	2058	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spinnaker_kork/pr_516.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0MzgxNA==	why not init it once and store as instance var?	Code	No	FALSE												
spinnaker/kork	516	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2MTM4OA==	2059	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spinnaker_kork/pr_516.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2MTM4OA==	nit: I'm not particularly stoked on using enums for things like this. It means that if anyone comes along and wants to add an extension for their own pubsub implementation, they need to make a change to core Spinnaker code before it's even possible to do so.	Code	No	FALSE												
spinnaker/kork	516	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3MTI1Nw==	2060	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spinnaker_kork/pr_516.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3MTI1Nw==	is it the messageHandler's job to mark the message as handled successfully? would it make sense to put that responsibility in here, and then maybe on error we could know that we could return the message to the queue with a failure status and eventually it can get DLQ'd (otherwise it won't redrive until its visiblity timeout expires - maybe a longer backoff than we want)	Code	No	FALSE												
splicemachine/spliceengine	3124	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NDI4MA==	2066	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/splicemachine_spliceengine/pr_3124.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NDI4MA==	Remove DB-8883 comment	Comments	Yes	FALSE												
splicemachine/spliceengine	3869	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjU4OA==	2065	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/splicemachine_spliceengine/pr_3869.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjU4OA==	Remove this?	Comments	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Remove commented out code statements	No	No			NONE	NONE	Sections of code should not be commented out	NONE
splicemachine/spliceengine	4302	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0Mjc2OA==	2064	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/splicemachine_spliceengine/pr_4302.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0Mjc2OA==	afaik you can just do SpliceUnitTest.rowContainsQuery(levels, query, "rows=10","MergeJoin"); which does the try/createStatement for you	Code	Yes	TRUE	Complex, long, or inadequate logic	Try-Catch	Not Accepted									
splicemachine/spliceengine	4690	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzMTA1OQ==	2063	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/splicemachine_spliceengine/pr_4690.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIzMTA1OQ==	Should we keep writing something here to prevent issues if we rollback to a previous version? Say we upgrade to this version, create a constraint, we write only 6 values. There's an issue with the upgrade, so we rollback to the previous version. When deserializing the descriptor for the new constraint we try to read the 7th column but fail.	Code	No	FALSE												
spongepowered/sponge	2454	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5ODI0Mw==	2072	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2454.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM5ODI0Mw==	Why the change?	Code	No	FALSE												
spongepowered/sponge	2582	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0Njk5OA==	2067	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2582.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0Njk5OA==	Module to run Aikar's Timings, profile your server performance and get a sharable web result https://github.com/aikar/timings#aikars-minecraft-timings-viewer-v2	Code	No	FALSE												
spongepowered/sponge	2558	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyODU4MQ==	2069	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2558.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIyODU4MQ==	Minor niptick this. Thanks	Code	Yes	FALSE												
spongepowered/sponge	2503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMDc2NQ==	2071	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMDc2NQ==	The constant here should be shoved into the related (or new) Constants nested class.	Code	Yes	TRUE	Missing constant usage	Literal	Accepted	Replace hardcoded value by a new constant	Yes		Yes		NONE	NONE	NONE	NONE
spongepowered/spongeapi	2091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NDgzNw==	2081	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2091.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NDgzNw==	trait should be renamed to property or stateProperty	Code	Yes	FALSE												
spongepowered/spongeapi	2215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1NjA1Mg==	2078	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY1NjA1Mg==	final and Objects.requireNonNull in the method to fail out as soon as possible if there is a problem.	Code	No	FALSE												
spongepowered/spongeapi	2241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyNjE5Mg==	2076	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEyNjE5Mg==	rotation -> orientation	String value	No	FALSE												
spongepowered/spongeapi	2241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MzU4Ng==	2077	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MzU4Ng==	I disagree with these defaults. I always thought that a particular volume holder may have a faster way to query this data instead of going through a provider. Granted this is a default so not like we can't do that..	Code	No	FALSE												
spongepowered/spongeapi	2116	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzY1Nw==	2080	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2116.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzY1Nw==	Suggested change                                                                                                        Builder setArgument(@Nullable String string);                                                        Builder setArguments(@Nullable String string);                                 Like the above thought, probably want to update this builder function to be plural rather than singular	Code	Yes	TRUE	Bad identifier	Method	Accepted but with different solution	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
spongepowered/spongeapi	2133	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyMzIyNw==	2079	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2133.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyMzIyNw==	I would call it getRegistration, not sure which prupose this method has though.	Code	Yes	FALSE												
spongepowered/spongeapi	2278	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyNjg1Nw==	2074	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2278.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyNjg1Nw==	Unused import	Code	Yes	TRUE	Unnecessary Code	Import	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		NONE	UnnecessaryImport	Unnecessary imports should be removed	UnusedImports
spring-cloud/spring-cloud-gcp	2227	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxMTU4NA==	2087	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-cloud_spring-cloud-gcp/pr_2227.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxMTU4NA==	side note: use true for the third argument, defines the return_immediately as true. However according to the Google PubSub API docs, this is not recommended and the argument is actually deprecated (see https://cloud.google.com/pubsub/docs/reference/rpc/google.pubsub.v1#pullrequest). What to do with it? Separate bug?	Code	No	FALSE												
spring-cloud/spring-cloud-gcp	2290	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3MDcxMg==	2086	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-cloud_spring-cloud-gcp/pr_2290.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3MDcxMg==	as this is src/test ... maybe just use Long.whatever? HexCodec is mostly for performance	Code	No	FALSE												
spring-cloud/spring-cloud-gcp	2333	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNTgwMw==	2085	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-cloud_spring-cloud-gcp/pr_2333.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNTgwMw==	What were the errors that we are fixing?	Code	No	FALSE												
spring-cloud/spring-cloud-gcp	2434	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NzQ1Ng==	2084	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-cloud_spring-cloud-gcp/pr_2434.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3NzQ1Ng==	I think you may need to invent a new abstraction here which implements FirestoreReactiveOperations and just has a reference to the subcollection and the FirestoreTemplate and then delegates calls to the firestoretemplate. I think copying the whole FirestoreTemplate object is too heavyweight for just setting the root; feels like there is too much redundant information being copied each time the method is called. Another reason why it doesn't feel quite right is because you are also going to need to call all the setter methods to copy over the settings that were set outside the constructor to do this right.	Code	No	FALSE												
spring-projects/spring-integration	3228	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjQ5Mw==	2094	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3228.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjQ5Mw==	from the request message	String value	Yes	FALSE												
spring-projects/spring-integration	3355	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY1NTI1Nw==	2090	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3355.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY1NTI1Nw==	Suggested change                                                                                                 * frontend and backend ports are evaluated from this proxy and respective connection string is built from them.                                                 * frontend and backend ports are evaluated from this proxy and the respective connection string is built from them.	Javadoc	Yes	FALSE												
spring-projects/spring-integration	3361	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI4NjM3Mg==	2088	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3361.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI4NjM3Mg==	Ah! I got it. Gary, take a look, please, what does that @SuppressWarnings("deprecation") do on this class?	Code	No	FALSE												
spring-projects/spring-integration	3327	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMjMyNw==	2093	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3327.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwMjMyNw==	Looks like you have there this setter as well setUnsolicitedMessageChannel(MessageChannel unsolicitedMessageChannel). Don't we need to have similar option here on DSL level? Thanks	Code	No	FALSE												
spring-projects/spring-integration	3339	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1OTE3Nw==	2091	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3339.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1OTE3Nw==	Looks like you have changed your mind and decided to not use this setter in the ctor. I mean doesn't look like there is still a justification for a final...	Code	No	FALSE												
spring-projects/spring-security	7846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MDg5Mw==	2098	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-security/pr_7846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MDg5Mw==	You can use StandardCharsets.UTF_8 here instead of the String "UTF-8"	Code	Yes	FALSE												
spring-projects/spring-security	7846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MTE5OA==	2099	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-security/pr_7846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MTE5OA==	You can use StandardCharsets.ISO_8859_1 here instead of the String "ISO-8859-1"	Code	Yes	FALSE												
spring-projects/spring-security	7846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NTUwOA==	2100	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-security/pr_7846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NTUwOA==	Although this test name follows the same pattern as other tests in this class, we would like any new tests to follow the convention methodWhenConditionThenResult. A possible name could be:                         Suggested change                                                                                                 public void testCredentialsWithUmlautUsingCharset_Utf_8() throws Exception {                                                 public void doFilterWhenTokenAndFilterCharsetMatchThenAuthenticated() throws Exception {	Code	Yes	FALSE												
spring-projects/spring-security	8805	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMzMTU2Mw==	2097	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-security/pr_8805.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMzMTU2Mw==	What are the consequences of not adding the other shared objects that WebSecurityConfigurerAdapter adds?	Code	No	FALSE												
strimzi/strimzi-kafka-operator	3453	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY4MDc0NA==	2101	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/strimzi_strimzi-kafka-operator/pr_3453.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY4MDc0NA==	Why do you expect it to be 0 here?	Code	No	FALSE												
strimzi/strimzi-kafka-operator	3408	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0MDIwOA==	2102	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/strimzi_strimzi-kafka-operator/pr_3408.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0MDIwOA==	Why should this be "true"?	Code	No	FALSE												
strimzi/strimzi-kafka-operator	3405	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MjA4Ng==	2103	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/strimzi_strimzi-kafka-operator/pr_3405.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MjA4Ng==	It wasn't clear to me that this listener is always run on the same thread (and note that it's implicitly initialized to {false} on this thread). It would be safer to just use AtomicBoolean I think.	Code	No	FALSE												
strimzi/strimzi-kafka-operator	2389	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM2NDU1Ng==	2104	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/strimzi_strimzi-kafka-operator/pr_2389.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM2NDU1Ng==	This looks very crude for info level. Is it some left over from debugging?	String value	Yes	FALSE												
talend/tbd-studio-se	1690	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk3MDkxNA==	2106	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1690.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk3MDkxNA==	Comment to be removed	Comments	Yes	FALSE												
talend/tbd-studio-se	1690	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzgyNTQ3OA==	2107	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1690.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzgyNTQ3OA==	could you please rename it?	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
talend/tbd-studio-se	1364	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0NTQ1Mg==	2110	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1364.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0NTQ1Mg==	Do we have similar file for cdh ?	Code	No	FALSE												
talend/tbd-studio-se	1364	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MTc1NA==	2111	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1364.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MTc1NA==	same here	Code	Discard	FALSE												
talend/tbd-studio-se	1364	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MTg2Ng==	2112	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1364.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY1MTg2Ng==	same here	Code	Discard	FALSE												
talend/tbd-studio-se	1744	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjA2OQ==	2105	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1744.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjA2OQ==	Were these imports missing in this class? I don't see you add their usage, maybe they are redundant?	Code	Yes	TRUE	Unnecessary Code	Import	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		NONE	UnnecessaryImport	Unnecessary imports should be removed	UnusedImports
talend/tbd-studio-se	1459	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzNjc5Nw==	2109	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1459.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTIzNjc5Nw==	Is it still CDH in path ?	Code	No	FALSE												
talend/tdi-studio-se	5515	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0NTk0MQ==	2113	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_5515.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0NTk0MQ==	should not remove the condition directly but check offline mode inside this method, project still could have ref projects in offline mode and also need to take care of git TAG mode(all readonly)	Code	No	FALSE												
talend/tdi-studio-se	4521	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3MDcyOQ==	2120	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_4521.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE3MDcyOQ==	I don't think it is specific for tCreateTable and we already have another constructure public RepositoryReviewDialog(Shell parentShell, ERepositoryObjectType type, String repositoryType, String[] itemFilter) , itemFilter is used to filter the repository item to select . If can't reuse this constructor , you can refer to this implementation.	Code	No	FALSE												
talend/tdi-studio-se	4734	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4OTQzOA==	2118	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_4734.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY4OTQzOA==	no need this function in this class	Code	No	FALSE												
teamnewpipe/newpipeextractor	261	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDUzMQ==	2150	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_261.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMwMDUzMQ==	@TobiGr @wb9688 I noticed that this page is very heavy to download, about 300~400KB per request. What do you think of using the pbj parameter? Using it offers a big advantage: it's a JSON formatted response which is, as you might've imagine, much less error prone to parse (it is basically the initialData already extracted). Another thing is that the size would be as tiny, or even tinier than it was, a gziped 15~20KB response. Here's an example using the /videos endpoint (could be another one as well or even the "root", but this one seems to be sufficient to parse all the things we need, like description, name, etc.): curl 'https://www.youtube.com/channel/UCLA_DiR1FfKNvjuUpBHmylQ/videos?pbj=1' \     -H 'x-youtube-client-name: 1' -H 'x-youtube-client-version: 2.20200224.11.00' \     -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:68.0) Gecko/20100101 Firefox/68.0' \     -H 'Accept-Encoding: gzip' --compressed -v | jq > videos.pbj1.json It looks like the only headers that we need are those two, which maybe we can just hardcode it (who knows how long it remains valid) or even find some lightweight method to get it dynamically. I'll investigate more about it later. PS: This is used throughout YouTube, replacing the channel with a video url works like a charm. Worth investigating as well.	Code	No	FALSE												
techempower/frameworkbenchmarks	5467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2Mjg4MA==	2155	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2Mjg4MA==	This can return 10001, which is an invalid world id.  Also, you should use ThreadLocalRandom, which shares one Random instance with each thread instead of constructing a new Random instance for every number.  Do something like this instead:                 FrameworkBenchmarks/frameworks/Java/undertow/src/main/java/hello/HelloWebServer.java                    Line 255       in       f510e94                                                     return 1 + ThreadLocalRandom.current().nextInt(10000);	Code	No	FALSE												
techempower/frameworkbenchmarks	5467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2NjMwNg==	2156	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2NjMwNg==	Date and SimpleDateFormat are part of the legacy Java time libraries, which were effectively replaced by the new java.time libraries in Java 8.  Here, what you're looking for is DateTimeFormatter.  Other frameworks show how to use it.  Example:                 FrameworkBenchmarks/frameworks/Java/armeria/src/main/java/hello/App.java                   Lines 25 to 27       in       b843c9e                                                     ctx.addAdditionalResponseHeader(HttpHeaderNames.DATE,                                                                           DateTimeFormatter.RFC_1123_DATE_TIME.format(                                                                                   ZonedDateTime.now(ZoneOffset.UTC)));                     Note that DateTimeFormatter is immutable, so a single instance can be reused every time you want to format a date.  And luckily there is already a built-in DateTimeFormatter constant that has the format you want here.  One of SimpleDateFormat's problems is that it is mutable -- formatting a date modifies the SimpleDateFormat instance -- so you have to construct a new instance for each date like this.	Code	No	FALSE												
techempower/frameworkbenchmarks	5467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2Njc1Mw==	2157	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2Njc1Mw==	TFB --> "ServiceTalk".  The convention we use is that theServer header contains the name of the framework.	String value	No	FALSE												
techempower/frameworkbenchmarks	5728	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTUwMw==	2153	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5728.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTUwMw==	would be nice for these to be constants for readability	Code	Yes	FALSE												
telefonicaid/fiware-cygnus	1860	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyNDk4Ng==	2162	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1860.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyNDk4Ng==	It this constructor used?	Code	No	FALSE												
telefonicaid/fiware-cygnus	1860	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNTk3OA==	2163	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1860.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNTk3OA==	It would be better to declare this Strings as constants.	Code	Yes	TRUE	Missing constant usage	Literal	Accepted	Replace hardcoded value by a new constant	Yes		Yes		NONE	NONE	Magic numbers should not be used	MagicNumber
telefonicaid/fiware-cygnus	1804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1MzkxOQ==	2167	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1804.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI1MzkxOQ==	could mdAggregation var be inside the if? It seems that it's not used in other scope.	Code	Yes	FALSE												
telefonicaid/fiware-cygnus	1851	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwNTk0NA==	2165	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1851.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwNTk0NA==	There is no need to overload the costructor in this case, since mongoAuthSource has a not null validation on getDatabase.	Code	No	FALSE												
telefonicaid/fiware-cygnus	1865	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyNDgwNQ==	2161	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1865.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyNDgwNQ==	An entry in CHANGES_NEXT_RELEASE describing the fix and citing #1863 should be included, using the usual style.	Other	No	FALSE												
telstra/open-kilda	3859	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzNzc1MA==	2169	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3859.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzNzc1MA==	Is it supposed to call AbstractBolt.handleLifeCycleEvent or it's overloaded version? If so, then routing must be done inside AbstractBolt.dispatch.	Code	No	FALSE												
telstra/open-kilda	3688	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMDQ4MQ==	2171	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3688.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMDQ4MQ==	2 questions:  How are the changes in this file related to the title "NPE during producting flow dump"? What benefits do these changes bring? IMHO, 2 iterators instead of an index are neither shorter nor clearer.	Code	Yes	FALSE												
telstra/open-kilda	3381	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTQ0OA==	2172	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3381.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTQ0OA==	why on earth will you put this local-only code into lockkeeper and request container name over http? Do it directly in test classes def dockerClient = DefaultDockerClient.fromEnv().build()	Code	No	FALSE												
telstra/open-kilda	3787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2MjM4MA==	2170	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA2MjM4MA==	will it work in q-in-q?	Code	No	FALSE												
telstra/open-kilda	3872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgyMTcxNQ==	2168	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgyMTcxNQ==	found	String value	Yes	FALSE												
temporalio/sdk-java	219	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5NDM2Nw==	2176	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_219.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5NDM2Nw==	I think you can avoid this call here if line 111 calls this.hasNext	Code	No	FALSE												
temporalio/sdk-java	150	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcwMDUwNg==	2180	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_150.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcwMDUwNg==	why ReplyWorkflowContext?  Looks like a comment would be helpful here.	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Attribute	Accepted	Add code comment to explain type of attribute	Yes		Yes		NONE	NONE	NONE	NONE
temporalio/sdk-java	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2OTEzMw==	2178	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM2OTEzMw==	if the user exceeds the bounds of the values/payload, no issues right?	Code	No	FALSE												
temporalio/sdk-java	161	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDE2Mw==	2179	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_161.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDE2Mw==	We already have constants for some defaults in this file. I would convert these to constants as well.	Code	Yes	TRUE	Missing constant usage	Literal	Accepted	Replace hardcoded value by a new constant	Yes		Yes		NONE	NONE	Magic numbers should not be used	MagicNumber
temporalio/sdk-java	93	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyMDg5MQ==	2182	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_93.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyMDg5MQ==	Does this solve something unrelated to this change? (Failing test?)	Code	No	FALSE												
temporalio/sdk-java	101	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMzMwNA==	2181	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_101.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMzMwNA==	Is there pros to this naming vs isRetryable? Seems off having a negative on a bool property	Code	Yes	FALSE												
temporalio/sdk-java	236	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDc3Njg5Ng==	2175	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_236.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDc3Njg5Ng==	Add comment to explain why it is async	Comments	Yes	FALSE												
tensorflow/java	160	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk1Njg0NQ==	2185	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/tensorflow_java/pr_160.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk1Njg0NQ==	implicitly via try-with-resources	Javadoc	Yes	FALSE												
tensorflow/java	172	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MTM2Nw==	2184	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/tensorflow_java/pr_172.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1MTM2Nw==	Did you mean to change the access level of mapDense here? It's protected in the super class and the other implementations.	Code	No	FALSE												
tensorflow/java	129	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0MTU2OQ==	2186	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/tensorflow_java/pr_129.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk0MTU2OQ==	rank could be -1 at this point.	Code	No	FALSE												
tensorflow/java	178	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODc4Ng==	2183	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/tensorflow_java/pr_178.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1ODc4Ng==	Why leave the exception in there if it's not triggered?	Code	Yes	FALSE												
testcontainers/testcontainers-java	2816	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxMDU5Mw==	2192	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_2816.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxMDU5Mw==	I wonder - should we take the opportunity to clean up this test class a bit? Way back at the beginning of the project I wanted to test/demonstrate that diverse images could be used - partly to serve as documentation. Now, though, I think these are no longer truly necessary and just add extra image pull time to our build. Thoughts?	Code	No	FALSE												
testcontainers/testcontainers-java	3021	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4OTA3NA==	2189	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_3021.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4OTA3NA==	nit: should we move it before the non-static class members?	Code	Yes	FALSE												
testcontainers/testcontainers-java	2491	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNTI2OA==	2193	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_2491.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNTI2OA==	see above	Code	No	FALSE												
testcontainers/testcontainers-java	2491	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNjI2NQ==	2194	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_2491.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTgzNjI2NQ==	Suggested change                                                                                                        final Map<String, ContainerNetwork> networks = getContainerInfo().getNetworkSettings().getNetworks();                                                        for (ContainerNetwork network : networks.values()) {                                                            return network.getIpAddress();                                                        }                                                        throw new IllegalStateException("No network available to extract the internal IP from!");                                                        return getContainerInfo().getNetworkSettings().getNetworks().values().stream()                                                            .map(ContainerNetwork::getIpAddress)                                                            .findFirst()                                                            .orElseThrow(() -> new IllegalStateException("No network available to extract the internal IP from!"));                                 Not sure if better, but on first reading, I stumbled upon the for-loop for getting the first element.	Code	Yes	FALSE												
testcontainers/testcontainers-java	3003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MDg3OQ==	2191	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_3003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MDg3OQ==	exception is swallowed here	Code	No	FALSE												
thingsboard/thingsboard	2846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAxNDM1Nw==	2198	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_2846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAxNDM1Nw==	We need ability to find EntityProfile using EntityType. PageData<EntityProfile> findEntityProfilesByTenantId(TenantId tenantId, PageLink pageLink); PageData<EntityProfile> findEntityProfilesByTenantIdAndType(TenantId tenantId, EntityType entityType, PageLink pageLink); // This will be used by system administrator. TenantId is SYS_TENANT_ID in this case and EntityType = Tenant PageData<EntityProfile> findTenantProfiles(PageLink pageLink);	Code	No	FALSE												
thingsboard/thingsboard	2846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNTg5NQ==	2199	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_2846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNTg5NQ==	deviceId -> entityProfileId	Code	Yes	FALSE												
thingsboard/thingsboard	2846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNzc5Nw==	2200	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_2846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTIxNzc5Nw==	Let's also check that sameName but different entityTypes works fine	Code	No	FALSE												
thingsboard/thingsboard	2347	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MDk0NA==	2201	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_2347.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MDk0NA==	Name this RestJsonConverter to make different from org.thingsboard.server.common.transport.adaptor.JsonConverter	Code	Yes	FALSE												
thingsboard/thingsboard	2347	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MTY4Nw==	2202	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_2347.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MTY4Nw==	Code duplication	Code	Yes	FALSE												
thingsboard/thingsboard	3032	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MzE0OA==	2197	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_3032.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI2MzE0OA==	please add default value here. This will make sure that everything will work for old clients, even if they use same thingsboard.yml	Code	No	FALSE												
thingsboard/thingsboard	3518	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkzMTE1Nw==	2196	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_3518.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkzMTE1Nw==	Do not need to create DeviceId, new UUID(...).toString() will be enough.	Code	No	FALSE												
thingsboard/thingsboard	3552	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwMjA0MA==	2195	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/thingsboard_thingsboard/pr_3552.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYwMjA0MA==	Add device creation time to the DeviceStateData (device.getCreatedTime()) in the getOrFetchDeviceStateData	Code	No	FALSE												
townyadvanced/towny	3946	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2MzIwNg==	2205	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/townyadvanced_towny/pr_3946.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2MzIwNg==	Use this is as probably the last else statement (if you use else-ifs above). Also do not use system.out, use TownyMessaging instead, and probably with Invalid sender instead of null sender if you chose to do the else-ifs.	Code	Yes	FALSE												
townyadvanced/towny	4136	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjQ4Mg==	2204	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/townyadvanced_towny/pr_4136.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjQ4Mg==	spacing is a bit off here.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Class	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	Source code should be indented consistently	Indentation
townyadvanced/towny	4153	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMzM5Mg==	2203	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/townyadvanced_towny/pr_4153.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMzM5Mg==	Undo wildcard import.	Code	Yes	TRUE	Complex, long, or inadequate logic	Import	Accepted	Expand the imports	Yes		Yes		NONE	NONE	Wildcard imports should not be used	AvoidStarImport
treasure-data/digdag	1409	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY5MTcwMA==	2209	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/treasure-data_digdag/pr_1409.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY5MTcwMA==	I'm wondering why this method call always passes ignoreAttemptFailure=true (sorry, a bit too difficult for me 😅.) Could I ask you the followings?  Add a comment for each case about why target attempt is expected to fail 2. If possible, make this method call pass attemptShouldFail or something deterministic instead of  ignoreAttemptFailure (probably related to https://github.com/treasure-data/digdag/pull/1409/files#r435692688)	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Call	Accepted	Add code comment to explain each part of a test	Yes		Yes		NONE	NONE	NONE	NONE
treasure-data/digdag	1316	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDMwMQ==	2210	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/treasure-data_digdag/pr_1316.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MDMwMQ==	After 1., if you feel you have energy (meaning it's optional to do), it's better to do a refactoring around execution status data:   toLogStreamName is formatting a string but it's unnecessary if previousStatus includes the pre-built string. As like toLogGroupName is doing. If toLogStreamName simply uses previousStatus.get("awslogs").get("awslogs-stream").asText() then, we can do as following: run calls createCurrentStatus to set awslogs to the status. It's calling getAwsLogsConfiguration(td), which copies all of the logConfig.getOptions().entrySet() to the executor status. This becomes unnecessary. Instead, it simply needs to copy awslogs.awslogs-group and format&set awslogs.awslogs-stream only. Because toLogStreamName gets pre-formatted text from the executor status, it doesn't need TaskDefinition td any more. It also means that fetchLogEvents doesn't need Task task. It means that createNextCommandStatus doesn't have to pass Task task to fetchLogEvents. Therefore, you can move this entire block (if (taskFinishedAt.isPresent()) { ... }) right before client.getTask call. It means that EcsCommandExecutor doesn't have to call ECS API when it's waiting for logs.  This is helpful to mitigate API call rate limit of ECS API.	Code	No	FALSE												
trinodb/trino	6210	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzA3OTUwNg==	2211	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_6210.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzA3OTUwNg==	Our code style is to name things in camel case where only the first letter is capitalized, including acronyms, so write this as getJsonPointer	Code	Yes	TRUE	Bad identifier	Method	Accepted	Change the style of an identifier to be camelCase, capitalized, or lowercase	Yes		Yes		NONE	MethodNamingConventions	NONE	AbbreviationAsWordInName MethodName
trinodb/trino	5792	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NDk5Mw==	2214	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_5792.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NDk5Mw==	extract into separate method	Code	No	FALSE												
trinodb/trino	5379	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUzMzMxNw==	2215	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_5379.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUzMzMxNw==	Same comment as above about isAssignableFrom	Code	No	FALSE												
trinodb/trino	6137	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM1MDM5MQ==	2212	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_6137.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM1MDM5MQ==	use simple concatenation. format makes it just obscure. Same goes to below places like that:         testRow(rowDecoder, generateRecord(initialSchema, Arrays.asList(3, format("string-%s", 3))), 1);         testRow(rowDecoder, generateRecord(evolvedSchema, Arrays.asList(4, format("string-%s", 4), 4L)), 2);         testRow(rowDecoder, generateRecord(evolvedSchema, Arrays.asList(5, format("string-%s", 5), null)), 2);	Code	Yes	FALSE												
wildfly/wildfly	13399	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNjg0NA==	2304	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly/pr_13399.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUwNjg0NA==	I suspect we don't need exception handling here. When @Remote @Local is used in a business interface, they do not take any arguments.  The no-arg annotation is to indicate that the annotated business interface is a local or remote business interface.  For ex, @Remote  public interface Calculator {...}	Code	No	FALSE												
trinodb/trino	4167	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzNjQ0MQ==	2216	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_4167.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzNjQ0MQ==	wicked :)	Code	No	FALSE												
triplea-game/triplea	6187	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1MjM5NA==	2224	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_6187.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1MjM5NA==	What do you think of directly returning here? ie: return distanceSearched < MIN_FACTORY_CHECK_DISTANCE || found.isEmpty()	Code	Yes	FALSE												
triplea-game/triplea	7241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjAyOA==	2220	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_7241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM5NjAyOA==	Not related to this PR, but ((i & 1) == 0) is way more complicated than using i % 2 == 0	Code	Yes	FALSE												
triplea-game/triplea	7249	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyNjU1MQ==	2219	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_7249.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyNjU1MQ==	Could you explain why this if statement is always true? If all is no subset of unitsSoFar this isn't always the case	Code	No	FALSE												
triplea-game/triplea	7891	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5OTI4MQ==	2218	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_7891.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA5OTI4MQ==	It's a bit difficult to understand the API of this method and what is being returned exactly. Is this a functional method, or are we modifying state. If modifying state, what does the return value represent? I think it would be easier for future maintainers to have this explicitly stated rather than being left to only reverse engineer the code.	Code	Yes	FALSE												
triplea-game/triplea	7068	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1OTgzMQ==	2221	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_7068.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1OTgzMQ==	This null check was needless?	Code	No	FALSE												
twilio/twilio-java	530	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzE0OA==	2233	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_530.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxNzE0OA==	Why are we removing the try/catch? Concerned we are breaking someone's implementation expecting this exception, though that seems unlikely and/or rare.	Code	No	FALSE												
twilio/twilio-java	559	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MDkxMw==	2232	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_559.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MDkxMw==	I'm not sure I understand the purpose/use case for this change. These types are autogenerated from our internal API definition, and the type expected here is a com.twilio.type.PhoneNumber.	Code	No	FALSE												
twilio/twilio-java	571	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTgyMQ==	2229	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_571.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTgyMQ==	This needs to use a proper encoder. There are many other characters that it would cover.	Code	No	FALSE												
twilio/twilio-java	571	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4Mzk1Nw==	2230	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_571.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA4Mzk1Nw==	Simplify these for readability: String query = parsedUrl.getQuery() != null ? "?" + parsedUrl.getQuery() : null;	Code	Yes	FALSE												
twilio/twilio-java	571	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5NDU1MQ==	2231	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_571.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ5NDU1MQ==	Default limit is already 0 so second arg not needed.	Code	Yes	FALSE												
twilio/twilio-java	581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyODQ5NA==	2228	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_581.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyODQ5NA==	New tests being added? Think you need to rebase and force push. Let me know need help with this.	Code	No	FALSE												
twilio/twilio-java	606	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ5OQ==	2226	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_606.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjQ5OQ==	Should "TwilioRestClient" be configurable?	Code	No	FALSE												
twilio/twilio-java	606	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjY1MQ==	2227	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/twilio_twilio-java/pr_606.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAwNjY1MQ==	respone/response	String value	Yes	FALSE												
typetools/checker-framework	3404	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1NzIyNQ==	2234	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/typetools_checker-framework/pr_3404.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc1NzIyNQ==	Please write Javadoc documentation for all methods. The next two methods need it, too.	Javadoc	Yes	FALSE												
typetools/checker-framework	3363	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1MTQwNw==	2236	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/typetools_checker-framework/pr_3363.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1MTQwNw==	Should this be in org.checkerframework.javacutil.SystemUtil?	Code	No	FALSE												
typetools/checker-framework	3370	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNDc5Ng==	2235	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/typetools_checker-framework/pr_3370.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNDc5Ng==	is node in this line referring to the input node or to nodes generally? The given text isn't clear.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve explanation about functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
unc-libraries/box-c	990	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTg3OA==	2237	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unc-libraries_box-c/pr_990.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM0MTg3OA==	Recording of the root of the tree will need to be moved out of this method, having it here is resulting in each container being recorded and counted twice since they are also recorded in the loop of members below. For example, i got this event:                 "Objects destroyed: b10608f7-3aad-44d0-83a5-07e4a3b41844\n3b66b013-b3c1-4bd7-a7eb-81ab30afc36b\n3b66b013-b3c1-4bd7-a7eb-81ab30afc36b\nc532a45c-647d-4425-a5e8-a8f11133e43e\nc532a45c-647d-4425-a5e8-a8f11133e43e\nbb8949d0-283b-47ee-82b5-a32346c97481\nbb8949d0-283b-47ee-82b5-a32346c97481" , "7 object(s) were destroyed" ;  You can see 3b66b013-b3c1-4bd7-a7eb-81ab30afc36b in the list multiple times, since its is both the root of a tree and a member	Code	No	FALSE												
unc-libraries/box-c	945	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2Njk3NQ==	2241	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unc-libraries_box-c/pr_945.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2Njk3NQ==	You shouldn't need this throw, the fact that the repoObjLoader returns a work should trigger the expected exception	Code	Yes	TRUE	Unnecessary Code	Call	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
unc-libraries/box-c	953	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5MTA1Mw==	2240	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unc-libraries_box-c/pr_953.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5MTA1Mw==	you can use StringUtils.isBlank in place of these two checks (the apache commons lang3 version)	Code	Yes	TRUE	Complex, long, or inadequate logic	Operation	Accepted	Replace boolean expression by an alternative direct method	Yes		Yes		NONE	NONE	NONE	NONE
unc-libraries/box-c	966	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTk3MQ==	2238	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unc-libraries_box-c/pr_966.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTk3MQ==	this method isn't used	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		NONE	UnusedPrivateMethod	Unused "private" methods should be removed	NONE
unicode-org/cldr	594	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3NzU1Ng==	2244	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unicode-org_cldr/pr_594.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3NzU1Ng==	This is a new class that uses the canonicalization of the LSRV part of a locale identifier to verify correctness of the algorithm and test data.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Add new JavaDoc block to describe the functionality of a code element	Yes		No	No	NONE	CommentRequired	Public types, methods and fields (API) should be documented with Javadoc	MissingJavadocType
unicode-org/cldr	607	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyMTE4Ng==	2243	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unicode-org_cldr/pr_607.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQyMTE4Ng==	Nitpick: the cast to IllegalArgumentException is not needed.	Code	Yes	FALSE												
uyuni-project/uyuni	2761	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjQ5MQ==	2246	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/uyuni-project_uyuni/pr_2761.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjQ5MQ==	Nitpic, is the warning enough? Shouldn't this be an error?	Other	Yes	FALSE												
uyuni-project/uyuni	2070	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg1NzE3Nw==	2249	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/uyuni-project_uyuni/pr_2070.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg1NzE3Nw==	Also here, maybe throw a RuntimeException so it propagates to the UI?	Code	No	FALSE												
uyuni-project/uyuni	2093	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMzgxNw==	2248	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/uyuni-project_uyuni/pr_2093.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMzgxNw==	Nit: I think camelCase would be more readable.	String value	Yes	FALSE												
uyuni-project/uyuni	1954	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDk1NA==	2250	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/uyuni-project_uyuni/pr_1954.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDkzNDk1NA==	Nice to have this constructor but do we need it?  If not, let's add it when we need it.	Code	Yes	FALSE												
vaadin/flow	8397	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NzgzNw==	2256	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vaadin_flow/pr_8397.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM1NzgzNw==	I would rename this API to setTarget and have it as overloaded method name. This is what we have done in other places too. The getter can then have the more specific name.	Code	Yes	FALSE												
vaadin/flow	8808	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4OTAzOA==	2253	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vaadin_flow/pr_8808.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE4OTAzOA==	Add a comment that this filtered pwaIcon is the custom one, and got from META-INF/resources/icons/icon.png	Comments	Yes	FALSE												
vaadin/flow	8613	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMzYwNw==	2254	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vaadin_flow/pr_8613.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMzYwNw==	Suggested change                                                                                                     */                                                     * @see #addSizeChangeListener(ComponentEventListener<SizeChangeEvent<?>>)                                                     */	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Not Accepted									
vaadin/flow	9067	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyMjU1NQ==	2251	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vaadin_flow/pr_9067.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyMjU1NQ==	unused method in class that is also a duplicate of the one in the server package.	Code	Yes	FALSE												
velocitypowered/velocity	321	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MjAwMA==	2263	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_321.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MjAwMA==	This should be deprecated	Code	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add or remove Deprecated annotation to update the method status	Yes		No	No	NONE	NONE	NONE	NONE
velocitypowered/velocity	299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQwMTgzNw==	2267	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQwMTgzNw==	This is the biggest problem I have with this. I am not a big fan of exposing a method like this. Could we do a bit better? On an additional note, I think we should probably deprecate execute and friends and just outright replace them with *async variants. We'll clean up the API mess later on.	Code	No	FALSE												
velocitypowered/velocity	382	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ0NzIwNQ==	2258	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_382.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODQ0NzIwNQ==	Maybe also keep the previous method for compat?	Code	No	FALSE												
velocitypowered/velocity	272	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5MDcyNg==	2268	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_272.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5MDcyNg==	If you try to inject a PluginContainer for some other plugin but that plugin doesn't exist, Guice will refuse to initialize the object for the plugin. Given that Velocity also supports optional dependencies, this isn't some strange thing that will never happen - it is a possibility.	Code	No	FALSE												
velocitypowered/velocity	340	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0OTIzMQ==	2259	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_340.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0OTIzMQ==	As an internal class we don't need to deprecate these	Code	Yes	FALSE												
velocitypowered/velocity	330	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NjM4MQ==	2261	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_330.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk5NjM4MQ==	Question: As this presently stands this would break the API. I assume you just want to put the API in front of users before you add any backwards compatibility?	Code	No	FALSE												
velocitypowered/velocity	330	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNzQ3Mw==	2262	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_330.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNzQ3Mw==	This is still API-breaking...	Javadoc	No	FALSE												
velocitypowered/velocity	310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3OTQwNA==	2264	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3OTQwNA==	if (	Code	Yes	TRUE	Inconsistent or disrupted formatting	Conditional	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	NONE	WhitespaceAfter
velocitypowered/velocity	310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MDEwNw==	2265	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ4MDEwNw==	See comments for readCompoundTag	Code	Discard	FALSE												
velocitypowered/velocity	310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTQzOQ==	2266	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTQzOQ==	@MonotonicNonNull may be a better choice here.	Code	No	FALSE												
velocitypowered/velocity	338	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MDMyMA==	2260	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_338.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MDMyMA==	Maybe you could do something like mcConnection.getChannel().pipeline().get(Connections.READ_TIMEOUT).setTimeout(server.getConfiguration().getReadTimeout()) so the re-instantiation of ReadTimeoutHandler isn't needed?	Code	No	FALSE												
velocitypowered/velocity	384	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyODM2Mg==	2257	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/velocitypowered_velocity/pr_384.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQyODM2Mg==	Why only as a lambda?	Javadoc	No	FALSE												
vespa-engine/vespa	12045	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA4MjY2MA==	2270	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vespa-engine_vespa/pr_12045.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA4MjY2MA==	if (isRanked(child)) return true; No need to iterate all children if one is unhappy.	Code	No	FALSE												
vespa-engine/vespa	12578	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTU5Nw==	2269	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vespa-engine_vespa/pr_12578.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTU5Nw==	Remove	Code	Discard	FALSE												
vespa-engine/vespa	11683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MTU1NQ==	2271	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vespa-engine_vespa/pr_11683.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE1MTU1NQ==	Instance name contains zone name in it, so this is not really needed.	Code	Yes	FALSE												
virtualsatellite/virtualsatellite4-core	768	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5Mjg2MQ==	2272	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_768.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ5Mjg2MQ==	Should we maybe load all the concepts we need in test in the base class? There is already FEA there.	Code	No	FALSE												
virtualsatellite/virtualsatellite4-core	605	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4MTg0NQ==	2274	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_605.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4MTg0NQ==	Either we should leave the class comment out or actually write something. Empty comment blocks to evade check style dont make sense to me.	Javadoc	Yes	FALSE												
virtualsatellite/virtualsatellite4-core	692	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5MDIzMA==	2273	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_692.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5MDIzMA==	Questionable comment	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Loop	Accepted	Remove a useless code comment	Yes		Yes		NONE	NONE	NONE	NONE
virtualsatellite/virtualsatellite4-core	507	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY5Mjk0NA==	2278	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_507.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY5Mjk0NA==	Not immediately clear what it matches. I suggest we either check it explicitly like return treeNode != seiChild1 && treenode != seiChild2 or check a special name like "MISMATCH", and set it to mismatching elements.	Code	Yes	FALSE												
virtualsatellite/virtualsatellite4-core	590	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MzA4Mw==	2276	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_590.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MzA4Mw==	Why not placing this code into the VirSatEcoreUtils?	Code	No	FALSE												
virtualsatellite/virtualsatellite4-core	508	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0MzQwOA==	2277	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_508.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc0MzQwOA==	could maybe class it serviceClassName	Code	Yes	FALSE												
vividus-framework/vividus	602	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc1MTg1Ng==	2283	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_602.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc1MTg1Ng==	this peace of code can be put on the previous line	Code	Yes	FALSE												
vividus-framework/vividus	958	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng==	2279	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_958.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTY3ODg0Ng==	why is it needed?	Code	No	FALSE												
vividus-framework/vividus	592	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1NDA5OA==	2284	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_592.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1NDA5OA==	why not Atomic Long instance.toString()?	Code	Yes	FALSE												
vividus-framework/vividus	928	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4MDM2MQ==	2281	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_928.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4MDM2MQ==	it can be inlined	Code	Yes	TRUE	Unnecessary Code	Method	Not Accepted									
vividus-framework/vividus	950	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4MTkxNA==	2280	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_950.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4MTkxNA==	jiraFacade.createIssueLink(inwardIssueKey, outwardIssueKey, "Tests") -> xrayFacade.createTestsLink(testCaseId, requirementId)?	Code	No	FALSE												
vividus-framework/vividus	286	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzk2MQ==	2285	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_286.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Nzk2MQ==	Function<T,T> ==> UnaryOperator	Code	No	FALSE												
vividus-framework/vividus	840	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1ODc0NQ==	2282	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vividus-framework_vividus/pr_840.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI1ODc0NQ==	noisy change	Code	No	FALSE												
vmware/differential-datalog	843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4MjkyMA==	2286	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4MjkyMA==	so you use two different parsers? Can't you standardize on one?	Code	No	FALSE												
vmware/differential-datalog	843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NzkwNA==	2287	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NzkwNA==	not supported sounds a bit better than "unsupported"	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Replace a string literal by a different meaning or a synonymous	Yes		Yes		NONE	NONE	NONE	NONE
vmware/differential-datalog	806	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNDU1OA==	2290	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_806.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNDU1OA==	it's handy to output the unexpected string for debugging. trim() is sometimes useful too.	Other	Yes	FALSE												
vmware/differential-datalog	806	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNTI1OQ==	2291	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_806.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIwNTI1OQ==	you can still make each test a separate function and call it here.	Code	Yes	FALSE												
vmware/differential-datalog	797	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk4NDkxNA==	2292	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_797.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk4NDkxNA==	This could be null.	Code	No	FALSE												
vmware/singleton	742	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUyNDU4MA==	2296	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_singleton/pr_742.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTUyNDU4MA==	See comment in lines 34-35	Code	Discard	FALSE												
vmware/singleton	742	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAxNDYzNw==	2297	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_singleton/pr_742.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDAxNDYzNw==	Suggested change                                                                                                   logger.debug("Doesn't find the supported languages from local bundle for product [{}], version [{}], locale [{}].\n", dto.getProductID(), dto.getVersion(), locale);                                                   logger.debug("Didn't find supported languages from local bundle for product [{}], version [{}], locale [{}].\n", dto.getProductID(), dto.getVersion(), locale);	String value	Yes	FALSE												
vmware/singleton	878	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgxNzg4NA==	2295	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_singleton/pr_878.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgxNzg4NA==	I think parameter 'withCacheRefresh' makes no sense because cache must be populated before judgement.	Code	No	FALSE												
vmware/singleton	926	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgyMDgwMQ==	2294	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_singleton/pr_926.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgyMDgwMQ==	I suggest that you can change to logger.error("unknown error", e);	String value	Yes	FALSE												
vmware/singleton	425	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYzMDg5OQ==	2299	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_singleton/pr_425.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYzMDg5OQ==	Please put this class in a file because cache is a common interface and may contain objects of other types.	Code	No	FALSE												
wildfly/wildfly	13428	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjI1MTgyOQ==	2302	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly/pr_13428.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjI1MTgyOQ==	This should be RESTART_ALL_SERVICES -- ReloadRequiredWriteAttributeHandler handles the writes.	Code	No	FALSE												
wildfly/wildfly	13425	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2MzY1OQ==	2303	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly/pr_13425.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2MzY1OQ==	Sorry, just realized that I don't see the Assert.fail(...) line added below deployer.deploy(...), as mentioned before.	Code	No	FALSE												
wildfly/wildfly-core	4356	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4ODQwMg==	2307	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly-core/pr_4356.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4ODQwMg==	This should also say 'or {@code null} if the operation has no such parameter'.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain the functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
wildfly/wildfly-core	4054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxOTIzMQ==	2310	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly-core/pr_4054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxOTIzMQ==	same remark as above	Code	Discard	FALSE												
wildfly/wildfly-core	4324	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTQwMQ==	2308	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly-core/pr_4324.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTQwMQ==	These should be added to from12 instead.	Code	No	FALSE												
wso2-extensions/identity-inbound-auth-oauth	1508	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNDQ2NQ==	2313	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1508.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMxNDQ2NQ==	shall we merge the nested if condition with this?	Code	Yes	FALSE												
wso2-extensions/identity-inbound-auth-oauth	1511	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUyMjI2MA==	2312	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1511.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUyMjI2MA==	Unnecessary new line	Code	Yes	FALSE												
wso2-extensions/identity-inbound-auth-oauth	1304	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyOTEwMg==	2317	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1304.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyOTEwMg==	Suggested change                                                                                                                    " will be used for the signing.");                                                                    " will be allowed for the signing.");	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect string literal	Yes		Yes		NONE	NONE	NONE	NONE
wso2-extensions/identity-inbound-auth-oauth	1407	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4Mjc3NA==	2316	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1407.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4Mjc3NA==	this is not needed. We don't need to disable the OSGi service component.	Code	No	FALSE												
wso2-extensions/identity-inbound-auth-oauth	1441	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2NDAxMw==	2314	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1441.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ2NDAxMw==	Shouldn't this be the other way in the master? ie. by default we should not allow additional params in the error URL as it violates the spec	Code	No	FALSE												
wso2-extensions/identity-inbound-auth-oauth	1413	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxNDgwOA==	2315	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1413.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAxNDgwOA==	Are we using all of these values which are set to the accessTokenDO?	Code	No	FALSE												
wso2/carbon-apimgt	8273	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzMyMA==	2326	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8273.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzMyMA==	use string utils	Code	Yes	FALSE												
wso2/carbon-apimgt	9511	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMDY0Ng==	2319	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_9511.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUzMDY0Ng==	Is this line formatted?	Code	Yes	FALSE												
wso2/carbon-apimgt	8978	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTY3NjU0OQ==	2321	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8978.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTY3NjU0OQ==	Do we need this extra line here	Code	Yes	FALSE												
wso2/carbon-apimgt	8904	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1NDkyNg==	2322	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8904.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1NDkyNg==	shall we make it a warn?	Code	Yes	FALSE												
wso2/carbon-apimgt	9009	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMzQyMQ==	2320	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_9009.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMzQyMQ==	Do we need extra lines?	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted in text but not change in code									
wso2/carbon-apimgt	8293	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNjkxMQ==	2323	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8293.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYxNjkxMQ==	Missing license header	Code	No	FALSE												
wso2/carbon-apimgt	8293	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYyNDYxNg==	2324	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8293.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYyNDYxNg==	You don't have to set all this information as metadata. ClientId, ClientSecret, Scope, TokenAPI, workflowExternalRef, callBackURL are not needed. plz remove them	Code	Yes	FALSE												
wso2/carbon-identity-framework	2827	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NDkwMQ==	2332	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2827.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NDkwMQ==	shall we add a class level comment?	Javadoc	Yes	FALSE												
wso2/carbon-identity-framework	2934	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExODU2Nw==	2329	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2934.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExODU2Nw==	Add proper formatting. The comment should end with a "."	Comments	Yes	FALSE												
wso2/carbon-identity-framework	2938	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwODc3NQ==	2328	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2938.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwODc3NQ==	Can we log tenant domain for which tenant flow ended	String value	Yes	FALSE												
wso2/carbon-identity-framework	2850	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwMjQ3MQ==	2331	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2850.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwMjQ3MQ==	This segment should not be in this PR	Code	No	FALSE												
wso2/carbon-identity-framework	2915	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExODEyNA==	2330	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2915.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTExODEyNA==	Complete the javadoc comments.	Javadoc	Yes	FALSE												
wso2/carbon-identity-framework	2782	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyMDc4Nw==	2333	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2782.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIyMDc4Nw==	stack trace is not get printed with debug log. it should be log.debug(e.getMessage(), e);	Other	Yes	FALSE												
wso2/carbon-kernel	2645	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1NTcxNA==	2339	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2645.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY1NTcxNA==	Shall we make this requiredClaims following the same convention	Code	Yes	FALSE												
wso2/carbon-kernel	2692	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1ODc1Ng==	2338	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2692.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1ODc1Ng==	What is the default behavior of executing this? Are we deleting users and roles with the tenant deletion by default or do we have to enable the config?	Code	No	FALSE												
wso2/carbon-kernel	2794	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4MzMzOA==	2335	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2794.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4MzMzOA==	This fix should be added to UniqueIDReadWriteLDAPUserStoreManager.java class as well.	Code	No	FALSE												
wso2/carbon-kernel	2705	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcwODQ4Mw==	2336	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2705.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcwODQ4Mw==	Can you create an issue to track this requirement?	Code	No	FALSE												
wso2/carbon-kernel	2705	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNjc1MQ==	2337	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2705.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNjc1MQ==	In my opinion, we do not need this log. WDYT?	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Accepted	Remove log	Yes		No	No	NONE	NONE	NONE	NONE
wso2/identity-api-server	120	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNTE3NA==	2344	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_identity-api-server/pr_120.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNTE3NA==	status should be 200 ok in update requests	Code	No	FALSE												
talend/tdi-studio-se	5132	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxODk4Mw==	2116	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_5132.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxODk4Mw==	IMO plain old Incorrect password would be better	String value	Yes	FALSE												
talend/tdi-studio-se	4713	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxOTk1Nw==	2119	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_4713.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxOTk1Nw==	add a comment that explain the skipped char on windows system	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Conditional	Not Accepted									
talend/tdi-studio-se	5003	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkyNTAwMQ==	2117	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_5003.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkyNTAwMQ==	only EE product can have runtime lineage	Code	No	FALSE												
taskana/taskana	910	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NjMwNw==	2130	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_910.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NjMwNw==	Pls use the assertThatThrownBy-pattern to be consistent with other tests	Code	Yes	FALSE												
taskana/taskana	1045	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNDA5Mw==	2125	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_1045.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIyNDA5Mw==	remove this please	Code	No	FALSE												
taskana/taskana	1150	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY1Mjc3OA==	2123	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_1150.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY1Mjc3OA==	Suggested change                                                                                                    assertThat(selectedAndClaimedTasks.stream().map(Task::getOwner))                                                    assertThat(selectedAndClaimedTasks)                                                        .extracting(Task::getOwner)	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace method calling chain by existing API	Yes		Yes		NONE	NONE	NONE	NONE
taskana/taskana	1210	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM0OTgyNg==	2122	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_1210.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM0OTgyNg==	please remove this	Code	Discard	FALSE												
taskana/taskana	988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDc3Nw==	2127	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDc3Nw==	Cancels a task. Cancellation means a task is obsolete from a business perspective an does not need to be completed anymore.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain the functionality of a method	Yes		No	No	NONE	NONE	NONE	NONE
teammates/teammates	10767	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNTA3Mg==	2134	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teammates_teammates/pr_10767.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjExNTA3Mg==	Take a look at how shouldChangesRequireResponseDeletion is called. Do you need cast operation here?	Code	No	FALSE												
teammates/teammates	10784	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MTE2NQ==	2133	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teammates_teammates/pr_10784.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MTE2NQ==	Should be studentRows here.	Code	Yes	FALSE												
teamnewpipe/newpipe	3579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU3MzIyMQ==	2140	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_3579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU3MzIyMQ==	remove this line. Typo + duplicate from the one below	Code	Yes	TRUE	Unnecessary Code	Literal	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
teamnewpipe/newpipe	5310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxNjM2Mg==	2135	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_5310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDAxNjM2Mg==	You could provide this as a method in KoreUtil so if the logic for when to show the kodi entry is centralized and not copied over 3 places.	Code	No	FALSE												
teamnewpipe/newpipe	3772	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyNzA1NQ==	2139	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_3772.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQyNzA1NQ==	Move this call up and thus remove this otherwise pointless function. You probably also shouldn't depend on stuff in GigaGet (also because we want to remove GigaGet in the future). Not sure if we have any util like this in NewPipe, or even have a copy to clipboard feature anywhere in NewPipe.	Code	No	FALSE												
teamnewpipe/newpipe	3371	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTUwNjUyMQ==	2141	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_3371.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTUwNjUyMQ==	Does this change require a Migration?	Code	No	FALSE												
teamnewpipe/newpipe	3053	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwOTg1Mw==	2143	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_3053.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgwOTg1Mw==	itemContentView.getText() can sometimes copy the ellipsized text. Use commentText instead.                         Suggested change                                                                                                                clipboardManager.setPrimaryClip(ClipData.newPlainText(null,itemContentView.getText()));                                                                clipboardManager.setPrimaryClip(ClipData.newPlainText(null,commentText));	Code	No	FALSE												
teamnewpipe/newpipe	5208	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1MDIyOA==	2136	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_5208.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1MDIyOA==	This looks like it would break urls like www.host.com/?pbj=1&otherparam=2 by turning it to www.host.com/otherparam=2	Code	No	FALSE												
teamnewpipe/newpipe	4350	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MDc3NQ==	2137	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_4350.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1MDc3NQ==	@TobiGr it is directly in mid of the changes	Code	No	FALSE												
teamnewpipe/newpipe	3282	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMjM4NQ==	2142	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_3282.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMjM4NQ==	Why was this moved?	Code	No	FALSE												
teamnewpipe/newpipeextractor	308	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4NjAzNA==	2147	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_308.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY4NjAzNA==	Add tests for video channels as well.	Code	No	FALSE												
teamnewpipe/newpipeextractor	256	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzNzY5Mw==	2151	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_256.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzNzY5Mw==	It looks like you want to check if the path starts with b/. if this is the case use                         Suggested change                                                                                                        if (path.contains("b/")) {                                                        if (path.startsWith("b/")) {                                 for better performance. In which case can an url path start with b/? Do we need to check the host here or do we have only urls like /b/myConferenceId?	Code	Yes	FALSE												
teamnewpipe/newpipeextractor	309	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY3MTgzMA==	2146	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_309.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY3MTgzMA==	Please also handle the API URLs in getId() here	Code	No	FALSE												
teamnewpipe/newpipeextractor	254	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNjA5Nw==	2152	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_254.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNjA5Nw==	Suggested change                                                                                                        if (null == title) {                                                        if (title == null) {	Code	Yes	TRUE	Inconsistent or disrupted formatting	Conditional	Accepted	Change order of boolean expression operands to make null the second one	Yes		No	No	NONE	NONE	NONE	NONE
teamnewpipe/newpipeextractor	409	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mjg1OA==	2144	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_409.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg0Mjg1OA==	Suggested change                                                                                                     * custom short channel urls like youtube.com/yourcustomname                                                     *                                                     * @param splitPath path segments array                                                     * @return true - if value conform to short channel url, false - not                                                     * custom short channel URLs like youtube.com/yourcustomname                                                     *                                                     * @param splitPath path segments array                                                     * @return true - if value conform to short channel URL, false - not	Javadoc	Yes	FALSE												
teamnewpipe/newpipeextractor	291	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMjc1OQ==	2148	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_291.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMjc1OQ==	This could use the InfoItemsPage#emptyPage method, and to improve readability, add brackets and place the return in the next line.                         Suggested change                                                                                                            if (ajaxJson.getObject("continuationContents") == null) return new InfoItemsPage<>(collector, null);                                                            if (ajaxJson.getObject("continuationContents") == null) {                                                                return InfoItemsPage.emptyPage();                                                            }	Code	Yes	TRUE	Inconsistent or disrupted formatting	Conditional	Accepted	Add braces in a single statement block	No	No			NONE	ControlStatementBraces	Multiline blocks should be enclosed in curly braces; Control structures should use curly braces	NeedBraces
teamnewpipe/newpipeextractor	291	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NzExMA==	2149	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_291.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2NzExMA==	Null pointer exceptions when the uploader url is not available, a null should be returned in those cases.	Code	No	FALSE												
teamnewpipe/newpipeextractor	394	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxMTgxMg==	2145	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipeextractor/pr_394.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxMTgxMg==	Suggested change                                                                                                            Matcher m = YOUTUBE_VIDEO_ID_REGEX_PATTERN.matcher(id);                                                            final Matcher m = YOUTUBE_VIDEO_ID_REGEX_PATTERN.matcher(id);	Code	No	FALSE												
vmware/differential-datalog	502	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUyNzE3MQ==	2293	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_502.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUyNzE3MQ==	Why is generateLibrary in SqlSemantics?	Code	No	FALSE												
vmware/differential-datalog	843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4ODk2OQ==	2288	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4ODk2OQ==	do you want to lift getTargetColumnList out of the loop?	Code	No	FALSE												
vmware/differential-datalog	817	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMjY0OA==	2289	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_differential-datalog/pr_817.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQzMjY0OA==	I think these should become methods in the compiler.	Code	No	FALSE												
vmware/singleton	629	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NTQyMg==	2298	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vmware_singleton/pr_629.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NTQyMg==	Now client supports multiple configurations, can't get product and version in this way.	Code	No	FALSE												
wildfly/wildfly	13510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxOTg5Ng==	2301	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly/pr_13510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxOTg5Ng==	Cool idea to detect the default as Jakarta EE 8 Persistence 2.2 versus EE 9 Persistence 3.0!	Code	No	FALSE												
wildfly/wildfly	13810	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NTI5Mg==	2300	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly/pr_13810.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3NTI5Mg==	What does 'newly created' mean? First request for the session id anywhere in the cluster? Locally?	Javadoc	No	FALSE												
wildfly/wildfly	13210	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODczOTY3Mg==	2305	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly/pr_13210.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODczOTY3Mg==	Are the management model changes complete?  I can see this being used in the add operation but I don't see it on the resource and the other related changes for a model update.	Code	No	FALSE												
wildfly/wildfly-core	4303	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA3NzE3OA==	2309	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly-core/pr_4303.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA3NzE3OA==	Could be simplified to assertNull.	Code	Yes	FALSE												
wildfly/wildfly-core	4054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcyMDEyOQ==	2311	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly-core/pr_4054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcyMDEyOQ==	same remark as above	Code	Discard	FALSE												
wildfly/wildfly-core	4427	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5NTQ5OQ==	2306	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wildfly_wildfly-core/pr_4427.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5NTQ5OQ==	Instead of casting to SSLDefinitions.ReloadableX509ExtendedTrustManager, you should be able to just cast to X509TrustManager instead. Then, ReloadableX509ExtendedTrustManager can be made private again.	Code	No	FALSE												
wso2-extensions/identity-inbound-auth-oauth	1283	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MzEzNA==	2318	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2-extensions_identity-inbound-auth-oauth/pr_1283.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MzEzNA==	Shall we add a colon before the parameters?	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Change literal to adhere to project standards	Yes		Yes		NONE	NONE	NONE	NONE
wso2/carbon-apimgt	8160	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2MzMwMw==	2327	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8160.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk2MzMwMw==	We can use isBlank() or isEmpty() frunction in https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html	Code	Yes	FALSE												
wso2/carbon-apimgt	8293	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MDE4Mw==	2325	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-apimgt/pr_8293.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MDE4Mw==	format -add method description	Javadoc	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add line break to a long statement line	Yes		Yes		NONE	NONE	Lines should not be too long	LineLength
wso2/carbon-identity-framework	2703	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxOTM0Mg==	2334	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-identity-framework/pr_2703.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxOTM0Mg==	formatting issue	Code	Yes	FALSE												
wso2/carbon-kernel	2580	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3NzA3MQ==	2340	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2580.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA3NzA3MQ==	Shall we refactor this existing comment for the UserStoreException?	Javadoc	Yes	FALSE												
wso2/carbon-kernel	2575	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc3Mzg4MQ==	2341	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_carbon-kernel/pr_2575.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTc3Mzg4MQ==	Since this is not a major release let's avoid removing the constant. Instead, we can deprecate this.	Code	No	FALSE												
wso2/identity-api-server	216	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NTIyOQ==	2342	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_identity-api-server/pr_216.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY1NTIyOQ==	grammer :  URIs does not exist	String value	No	FALSE												
wso2/identity-api-server	111	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0ODkyNA==	2346	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_identity-api-server/pr_111.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0ODkyNA==	let's use requiredAttributes for consistency. We are following that in IDP, APP etc.	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Modify an identifier to be consistent with a convention	Yes		Yes		NONE	NONE	NONE	NONE
wso2/identity-api-server	81	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5NTI3Ng==	2347	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_identity-api-server/pr_81.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM5NTI3Ng==	let's throw an error (Bad request ) if limit is negative. Return default value for null limit	Code	No	FALSE												
wso2/identity-api-server	162	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1ODQ0Mw==	2343	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_identity-api-server/pr_162.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU1ODQ0Mw==	Suggested change                                                                                                     * This method is used to build the internal server error when the URL build is failed.                                                     * Builds APIError to be thrown the URL building fails.	Javadoc	Yes	FALSE												
wso2/identity-api-server	114	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczNDAxNA==	2345	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_identity-api-server/pr_114.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczNDAxNA==	if its a certificate it will be an object. so we need to do something similar to https://github.com/wso2/identity-api-server/blob/master/components/org.wso2.carbon.identity.api.server.idp/org.wso2.carbon.identity.api.server.idp.v1/src/main/java/org/wso2/carbon/identity/api/server/idp/v1/core/ServerIdpManagementService.java#L1136-L1141	Code	No	FALSE												
wso2/product-is	10345	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjgzMTU0Nw==	2348	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-is/pr_10345.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjgzMTU0Nw==	Space after comman.. Fix similar places.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Call	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	NONE	WhitespaceAfter
wso2/product-is	8334	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MTc3NQ==	2350	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-is/pr_8334.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MTc3NQ==	I feel it would be better to include what we expected to happen here. "Authentication request was not initiated after logout from sample. Possible logout failure."	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Extend a string literal	Yes		Yes		NONE	NONE	NONE	NONE
wso2/product-is	8500	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1NjAzMA==	2349	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-is/pr_8500.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1NjAzMA==	remove unnecessary spaces.	Code	Yes	FALSE												
wso2/product-is	7434	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4Mjg5MQ==	2352	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-is/pr_7434.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4Mjg5MQ==	Shall we add license header	Code	No	FALSE												
wso2/product-is	7439	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzODcxMQ==	2351	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-is/pr_7439.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMzODcxMQ==	Missing full stop.	Javadoc	Yes	FALSE												
wso2/product-is	7331	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwODY4Mw==	2353	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-is/pr_7331.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwODY4Mw==	Shall we change the class name to AccountLockWhileCaseInsensitiveUserFalseTestCase	Code	Yes	FALSE												
wso2/product-microgateway	1130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5MjE4Nw==	2355	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-microgateway/pr_1130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM5MjE4Nw==	Since we are returning this value from this method do we need toolkitVersion to be a global variable? I think it should be a method local variable.	Code	No	FALSE												
wso2/product-microgateway	1511	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTEyNjgyMw==	2354	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-microgateway/pr_1511.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTEyNjgyMw==	Shall we remove the extra line here?	Code	Yes	FALSE												
wso2/product-microgateway	1004	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA1NzcyNg==	2356	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/wso2_product-microgateway/pr_1004.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA1NzcyNg==	Lets use a proper constants for "UTF-8"	Code	Yes	FALSE												
yahoo/elide	1523	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxMjM5OQ==	2357	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1523.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQxMjM5OQ==	I don't think we need the stitchList anymore - that was for populating relationships.	Code	No	FALSE												
yahoo/elide	1523	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDU1Ng==	2358	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1523.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQyNDU1Ng==	Instead of instantiation via string name, we could pass the class name here and use reflection to load the dialect like a plugin.	Code	No	FALSE												
yahoo/elide	1203	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIyODk1MA==	2362	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1203.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIyODk1MA==	GraphQL can return response codes of 200 and still have errors.  Let's discuss with UI and figure out what we want to do in this case.	Code	No	FALSE												
yahoo/elide	1203	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NzAzMQ==	2363	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1203.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0NzAzMQ==	What about DeletePermission	Code	No	FALSE												
yahoo/elide	1203	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTc4OA==	2364	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1203.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwOTc4OA==	You can move a lot of this setup code outside the closure (and hence outside the transaction).	Code	No	FALSE												
yahoo/elide	1354	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg4ODIyNA==	2360	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1354.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDg4ODIyNA==	This seems to be only verifying the names of the files but not the file contents.  Am I reading this correct?   If so - we'll need to verify the contents as well.	Code	No	FALSE												
yahoo/elide	1367	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTI5Ng==	2359	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1367.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTI5Ng==	Unify the variable names txCancel and jpaTransactionCancel.	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
yahoo/elide	1205	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTMxMQ==	2361	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yahoo_elide/pr_1205.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2NTMxMQ==	Instead of passing the package name for async here (which Elide already knows), you could just pass a flag about whether or not to include async models.	Code	No	FALSE												
yegor256/cactoos	1370	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MzgzOA==	2368	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1370.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MzgzOA==	@a-korzhov you mis-copied it, the charset parameter is missing	Code	No	FALSE												
yegor256/cactoos	1509	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MjAyOA==	2365	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1509.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MjAyOA==	@kokodyn iterable, not iterator :) same with the test name	Code	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect string literal	Yes		Yes		NONE	NONE	NONE	NONE
yegor256/cactoos	1309	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDg2Ng==	2371	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1309.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MDg2Ng==	@fanifieiev This one is a little bit trickier: first, I think that we should add a list with more than one element to get certain that we are effectively joining two lists; also, we should check for the elements, not just the size	Code	No	FALSE												
yegor256/cactoos	1344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEzMDQ0OA==	2369	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1344.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEzMDQ0OA==	@lxpdd the bug you are fixing is not 1350 but 1343 I believe, no?	Javadoc	No	FALSE												
yegor256/cactoos	1477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNjkyNw==	2366	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1477.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUyNjkyNw==	@andreoss not possibly, this should be done too :) also IMHO there is no reason for those two tasks to be done as once, just say in the todo what is to be done, and then the assignee will decide if everything can be done at once.	Javadoc	No	FALSE												
yegor256/cactoos	1338	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTA2MA==	2370	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1338.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTA2MA==	@marceloamadeu reading, I realise this test is incorrect: it does not test that the path actually has the content, just that TeeInput, as an Input has the content: can you add a todo for fixing this problem for all TeeInput tests (this file and others test files) where it makes sense?	Code	No	FALSE												
yegor256/cactoos	1463	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzOTYyOA==	2367	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yegor256_cactoos/pr_1463.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgzOTYyOA==	@andreoss what is the problem with this test?	Code	No	FALSE												
yugabyte/tpcc	45	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2MTU0Ng==	2373	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_45.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2MTU0Ng==	move this into the com.oltpbenchmark block. Also any reason for reordering these import blocks? I think putting the more fundamental imports (e.g. java.util) first, and then the local-package imports (e.g. com.oltpbenchmark) is fairly common.	Code	Yes	FALSE												
yugabyte/tpcc	45	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NjMyNw==	2374	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_45.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NjMyNw==	nit: extra empty line.	Code	Yes	FALSE												
yugabyte/tpcc	5	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjE5Nw==	2379	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_5.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM2NjE5Nw==	Indentation looks off here.	Code	Yes	FALSE												
yugabyte/tpcc	7	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMDkxNg==	2378	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_7.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyMDkxNg==	Ditto as above.	Code	Discard	FALSE												
yugabyte/tpcc	36	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDIzNw==	2376	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_36.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDIzNw==	Rename these to startWarehouseIdForShard and totalWarehousesAcrossShards	Code	Yes	FALSE												
yugabyte/tpcc	52	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE2ODQ4MA==	2372	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_52.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjE2ODQ4MA==	Do we need this log here or was it just for debugging?	Other	Yes	FALSE												
yugabyte/tpcc	36	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2NzI3OQ==	2377	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_36.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE2NzI3OQ==	Change to say "Num Warehouses" instead of "Scale Factor"	String value	Yes	FALSE												
yugabyte/tpcc	45	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MDkxNQ==	2375	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/yugabyte_tpcc/pr_45.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3MDkxNQ==	ditto	Code	Discard	FALSE												
zaproxy/zap-extensions	2568	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjQ3OA==	2380	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zap-extensions/pr_2568.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjk4NjQ3OA==	This seems to be used over and over again, It may as well be extracted to a local method, such as createNanoHandler. Then just used as this.nano.addHandler(createHandler());	Code	No	FALSE												
zaproxy/zap-extensions	2317	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5Mzg0NQ==	2381	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zap-extensions/pr_2317.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5Mzg0NQ==	The length check could be added to the first if statement.	Code	Yes	FALSE												
zaproxy/zaproxy	6371	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTk2OTgzMQ==	2382	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zaproxy/pr_6371.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTk2OTgzMQ==	AppParameter is misleading, not just about the target app. InputVector would be closer to what it is.	Code	Yes	TRUE	Bad identifier	Class	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
zaproxy/zaproxy	6044	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcwODg4MA==	2385	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zaproxy/pr_6044.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcwODg4MA==	Lets keep these methods internal for now (package accessible).	Code	No	FALSE												
zaproxy/zaproxy	6163	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyMDUyNA==	2383	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zaproxy/pr_6163.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQyMDUyNA==	Should not be needed.	Code	No	FALSE												
zaproxy/zaproxy	5828	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzYzMA==	2387	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zaproxy/pr_5828.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzYzMA==	This seems to be done	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Remove TODO code comment for tasks that have already been performed	Yes		Yes		NONE	NONE	Track uses of "TODO" tags	TodoComment
zaproxy/zaproxy	5864	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2NTE1Mg==	2386	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zaproxy/pr_5864.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc2NTE1Mg==	Not needed, the state of these buttons does not need to be reset.	Code	No	FALSE												
zaproxy/zaproxy	6088	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgzNzA0OQ==	2384	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zaproxy_zaproxy/pr_6088.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgzNzA0OQ==	isPartial...	Code	Yes	FALSE												
zkoss/zk	2218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE5ODIxNA==	2390	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zkoss_zk/pr_2218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE5ODIxNA==	positionLeft()	Code	No	FALSE												
zkoss/zk	2233	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA0NjI1MQ==	2389	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zkoss_zk/pr_2233.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA0NjI1MQ==	TableLayout	Code	No	FALSE												
zkoss/zk	2325	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3MDU0Ng==	2388	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zkoss_zk/pr_2325.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3MDU0Ng==	find(".z-listcell-content:eq(0)")	Code	No	FALSE												
zkoss/zk	2134	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxMTA0Ng==	2391	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zkoss_zk/pr_2134.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAxMTA0Ng==	Use other Lock other than synchorized	Code	No	FALSE												
zkoss/zk	1925	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NTE1MQ==	2392	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zkoss_zk/pr_1925.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA3NTE1MQ==	No connect, try getStatusCode	Code	No	FALSE												
zowe/api-layer	465	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM4NjgxMg==	2400	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_465.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM4NjgxMg==	path="" is redundant	Code	Yes	TRUE	Unnecessary Code	Annotation	Not Accepted									
zowe/api-layer	465	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5OTA3OA==	2401	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_465.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5OTA3OA==	Not fully covered.	Code	No	FALSE												
zowe/api-layer	741	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMjEyMg==	2395	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_741.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMjEyMg==	Isn't this defeating the purpose of this PR?	Code	No	FALSE												
zowe/api-layer	1025	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY1MjgwMg==	2393	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_1025.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY1MjgwMg==	Could you please add some comment or rename the load and set methods so we better know what they are doing. For future maintenance.	Code	Yes	FALSE												
zowe/api-layer	594	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0MTA1Ng==	2397	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_594.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0MTA1Ng==	*marker	Javadoc	Yes	FALSE												
zowe/api-layer	532	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIwMDk2Mg==	2399	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_532.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIwMDk2Mg==	Would it be possible to move at least the internal logic to the separate private method to make this method more easily understood?	Code	Yes	FALSE												
zowe/api-layer	823	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYyMw==	2394	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_823.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3NDYyMw==	Did you mention this in zaas-client-log-messages.yml ?	Code	No	FALSE												
zowe/api-layer	566	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NDkzNQ==	2398	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_566.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM0NDkzNQ==	I think it is not necessary to check last character, it can write one row with 65 characters	Code	No	FALSE												
zowe/api-layer	684	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5MzE2Mw==	2396	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/zowe_api-layer/pr_684.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE5MzE2Mw==	You should handle the public void applyToRequest(HttpRequest request) method as well, not just the InstanceInfo variant	Code	No	FALSE												
apache/netbeans	2556	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA==	236	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_2556.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA==	inferrable type informations                         Suggested change                                                                                                            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{"apply-templates", // NOI18N                                                            Set<String> charInstructions = new TreeSet<>(Arrays.asList(new String[]{"apply-templates", // NOI18N                                 strictly speaking the array creation is not needed as well	Code	Yes	TRUE	Unnecessary Code	Call	Accepted	Remove type parameter for inferrable type	Yes		Yes		NONE	NONE	NONE	NONE
apache/netbeans	1852	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkxMTA3Ng==	243	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_netbeans/pr_1852.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzkxMTA3Ng==	Looks unnecessary.	Code	Yes	FALSE												
apache/nifi	4348	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyMjYxOA==	246	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_nifi/pr_4348.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDIyMjYxOA==	Taking a closer look, I think we would be better off using the hadoop library for this. This module already depends on hadoop-commons and the API between NiFi and Atlas solidifies this dependency - although not explicitly through code, but through the constraints of how to create the keystore. I don't think it's worth having our own version but @bbende, I'd give you the final word on this one.	Code	No	FALSE												
apache/nifi	4450	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyODgwOA==	245	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_nifi/pr_4450.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcyODgwOA==	Can we add to the description of these to say that the value is in milliseconds?	String value	Yes	FALSE												
apache/ozone	1716	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjI3NQ==	247	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ozone/pr_1716.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjI3NQ==	New line indent is 2. Here second line of a long line is 4.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Not Accepted									
apache/ozone	1497	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1MDYyMQ==	248	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ozone/pr_1497.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1MDYyMQ==	This needs a WriteLock.	Code	No	FALSE												
apache/ozone	1147	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ1NzU2OA==	251	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ozone/pr_1147.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ1NzU2OA==	Suggested change                                                                                                    Assert.assertTrue(cache.size() == 0);                                                    Assert.assertEquals(0, cache.size());	Code	Yes	FALSE												
apache/ozone	1233	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY3NDQwNw==	250	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ozone/pr_1233.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY3NDQwNw==	Suggestion : Separate the annotations and add the comments.	Javadoc	Yes	FALSE												
apache/ozone	1274	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMTgyMg==	249	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_ozone/pr_1274.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMTgyMg==	Rename suggestion: getMetadataVolumeCount()	Code	Yes	FALSE												
apache/parquet-mr	808	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4NTczNQ==	254	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_808.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4NTczNQ==	nit: Please undo formatting changes in this file.	Code	Yes	FALSE												
apache/parquet-mr	774	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0ODI2Ng==	261	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_774.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0ODI2Ng==	Suggested change                                                                                                    // If user inputted columns, only print out size for those columns                                                    // If user defined columns, only print out size for those columns	Comments	Yes	FALSE												
apache/parquet-mr	774	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ3MjI5NA==	262	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_774.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ3MjI5NA==	See my comment at cli.	Code	Discard	FALSE												
apache/parquet-mr	776	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4NDUyNw==	259	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_776.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4NDUyNw==	Why do we need it as a short instead of keeping it as an int? As per the parquet.thrift spec we never say that we cannot have more pages than 32767 even if it is unlikely to have such many.	Code	No	FALSE												
apache/parquet-mr	776	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1NzYzMw==	260	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_776.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODY1NzYzMw==	I guess, this test and the one for column indexes were created by copy-pasting the original tests and adding the encryption. Since we already use parameterized testing in both I would suggest keeping the original tests and adding another dimension for plain/encrypted or similar. This way we would have 4 runs for each tests: (V1 with plain), (V1 with encryption), (V2 with plain) and (V2 with encryption).	Other	No	FALSE												
apache/parquet-mr	782	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3NjgyNQ==	255	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_782.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3NjgyNQ==	What I don't like here is that if the folder is empty we do not test anything and there is no sign of these skipped tests. For example if parquet-testing is restructured and files moved to other folders there will be no sign of an issue and these tests will keep reporting that everything is fine with the encryption. nit: You may iterate on the elements directly by using the java foreach construct.	Code	No	FALSE												
apache/parquet-mr	782	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5NjgxNg==	256	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_782.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg5NjgxNg==	I would check the exception type (class) as well, not only the message. Message is usually a nice to have but the exception type is part of the API spec.	Code	No	FALSE												
apache/parquet-mr	782	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNDA5NQ==	257	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_782.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNDA5NQ==	nit:                         Suggested change                                                                                                  private static FileEncryptionProperties getUniformEncryptionEncryptionProperties() {                                                  private static FileEncryptionProperties getUniformEncryptionProperties() {	Code	Yes	TRUE	Bad identifier	Method	Not Accepted									
apache/parquet-mr	819	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEyNDk1Ng==	253	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_819.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEyNDk1Ng==	I am not sure it is a good idea the different modes and throw exceptions that some of them are not supported/implemented. We are heading to the next major release and I think it is not a good user experience to have such features list as if they work properly but they are not implemented yet.	Code	No	FALSE												
apache/parquet-mr	773	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ==	263	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_parquet-mr/pr_773.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ4Nzc1OQ==	Why only these 3 checks while there are several other properties like minimumBytes?	Code	No	FALSE												
apache/phoenix	728	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2ODc3MA==	268	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_728.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2ODc3MA==	I understand the DeleteFamily marker at ts 3, but why the one at ts 2?	Code	No	FALSE												
apache/phoenix	725	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4MDA0MQ==	269	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_725.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc4MDA0MQ==	nit: CREATE_TABLE_DDL	Code	No	FALSE												
apache/phoenix	878	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ5NjkxOQ==	267	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_878.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ5NjkxOQ==	log instead	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Not Accepted									
apache/phoenix	960	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc2MjMwNA==	264	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_960.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc2MjMwNA==	I don't think this is a good idea. Instead why not just create a separate connectionOnServer and ensure that it contains just the mutations related to SYSTEM.TASK?	Comments	No	FALSE												
apache/phoenix	913	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0OTUxMg==	266	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_913.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0OTUxMg==	nit: static import assertFalse() like you've done for assertNotNull()	Code	Yes	FALSE												
apache/phoenix	679	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1MzUxMQ==	270	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_phoenix/pr_679.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1MzUxMQ==	Nit: the comment is not right (nothing here equals 10mins).. wait is only 1 ms now	Comments	Yes	FALSE												
apache/pinot	5177	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2NTUzOA==	274	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_5177.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2NTUzOA==	Merge this into the constructor, no need to track an extra boolean.	Code	No	FALSE												
apache/pinot	5115	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMzE4Nw==	276	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_5115.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUxMzE4Nw==	Can we re-use the NumValuesInfo object instance by adding a clear method? I know we have been really careful about minimizing gc impact in this path.	Code	No	FALSE												
apache/pinot	5119	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxNDA4MQ==	275	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pinot/pr_5119.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIxNDA4MQ==	lets put private static final String JAR_PREFIX = "jar:"	Code	Yes	FALSE												
apache/pulsar	6187	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1ODc0OQ==	283	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_6187.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE1ODc0OQ==	Don't we need to return here?	Code	No	FALSE												
apache/pulsar	8098	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkzNzgxMg==	282	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_8098.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjkzNzgxMg==	There is not really point to have this class. Just refactor ProcessRuntime to take in a SecretsProvider like ThreadRuntime	Code	No	FALSE												
apache/pulsar	6052	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDk5Nw==	284	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_6052.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1NDk5Nw==	Why do we need a concurrent bit set?	Code	No	FALSE												
apache/pulsar	8422	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxODAyNg==	280	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_pulsar/pr_8422.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxODAyNg==	Suggested change                                                                                                    protected static List<String> fooFieldNames =  new ArrayList<>();                                                    protected static List<String> fooFieldNames = new ArrayList<>();	Code	Yes	FALSE												
apache/rocketmq	2406	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxOTYxMg==	285	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_2406.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxOTYxMg==	When sending batch messages, worteOffset is the offset of the first message, but this is the offset of the last message, so the unit test fails.	Code	No	FALSE												
apache/rocketmq	1985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNTIyOA==	292	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_1985.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNTIyOA==	it still needs to polish when you change your blacklist method in validator class.	Code	No	FALSE												
apache/rocketmq	2167	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTgzNw==	287	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_2167.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMzNTgzNw==	How do we handle if the slave has happened to become a master?	Code	No	FALSE												
apache/rocketmq	2116	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzMDM0OQ==	288	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_rocketmq/pr_2116.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDYzMDM0OQ==	It would be better to use placeholder instead of string concatenation.	Code	Yes	FALSE												
apache/samza	1248	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA0OTUxNw==	297	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_samza/pr_1248.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA0OTUxNw==	I think the config rewriter sometimes overrides existing configs, so I don't think you want to re-override back to the original. Does the existing flow do this override flow with the original config?	Code	No	FALSE												
apache/samza	1366	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNzU0Ng==	296	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_samza/pr_1366.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEyNzU0Ng==	Nit: Should this be envelope11?	Code	Yes	FALSE												
apache/samza	1403	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNjY1NQ==	295	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_samza/pr_1403.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAzNjY1NQ==	should we add a metric to count the number of logging errors?	Code	No	FALSE												
apache/samza	1421	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwNTcyNw==	293	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_samza/pr_1421.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwNTcyNw==	Should this be ContainerLocation or something? HostLocality sounds wrong because the host doesn't have a location, it is the location.	Code	Yes	TRUE	Bad identifier	Class	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
apache/samza	1421	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwOTA3OA==	294	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_samza/pr_1421.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwOTA3OA==	{@link JobModel}	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add new tag and hyperlink to existing JavaDoc	Yes		Yes		NONE	NONE	NONE	NONE
apache/servicecomb-java-chassis	2103	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ4NzU5NQ==	298	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_2103.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ4NzU5NQ==	try (InputStream is = url.openStream()) {     if (is != null) {       beans.addAll(initFromData(is));     }   }	Code	Yes	FALSE												
apache/servicecomb-java-chassis	1705	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE1MzM2MQ==	303	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_1705.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE1MzM2MQ==	org.apache.servicecomb.huaweicloud.cas	Code	No	FALSE												
apache/servicecomb-java-chassis	2000	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgyMTM2NA==	299	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_2000.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgyMTM2NA==	This constructor never used, can be deleted	Code	Yes	FALSE												
apache/servicecomb-java-chassis	1766	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5ODkxNQ==	302	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_1766.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5ODkxNQ==	better to use JAX-RS annotation, because not all project depend on swagger-generator-springmvc	Code	No	FALSE												
apache/servicecomb-java-chassis	1876	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5MzI0OQ==	301	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_servicecomb-java-chassis/pr_1876.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk5MzI0OQ==	This modification is not good. Try find the root cause and fixed the condition why memory leak and do not modifify the logic of dynamicy config cache.	Code	No	FALSE												
apache/shardingsphere	4826	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzMTE0OQ==	308	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_shardingsphere/pr_4826.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzMTE0OQ==	violations is better than metaDataViolationList	Code	Yes	FALSE												
apache/shardingsphere	5671	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3OTU1NQ==	307	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_shardingsphere/pr_5671.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3OTU1NQ==	There should be a blank line here.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove vertical spacing	Yes		No	No	NONE	NONE	NONE	EmptyLineSeparator
apache/shardingsphere	7353	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwNTYyOA==	305	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_shardingsphere/pr_7353.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgwNTYyOA==	Remove	Code	Yes	FALSE												
apache/skywalking	4666	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc5OTU0Nw==	315	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_4666.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc5OTU0Nw==	#capture should propogate the ExtensionContext, rather than creating a new one.	Code	No	FALSE												
apache/skywalking	6066	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkzNzU1NA==	309	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_6066.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkzNzU1NA==	We have StorageData#id already.	Code	No	FALSE												
apache/skywalking	4646	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzQ4Mw==	316	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_4646.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1NzQ4Mw==	@mrproliu Do you mean this check?	Code	No	FALSE												
apache/skywalking	5531	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4MTE0NQ==	311	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_5531.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg4MTE0NQ==	Remember to add comments for these classes in the meter analyzer packages.	Javadoc	Yes	FALSE												
apache/skywalking	5550	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODQyMQ==	310	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_5550.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUwODQyMQ==	Connection pool is not a DB layer.	Code	No	FALSE												
apache/skywalking	4846	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTE2OA==	313	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_skywalking/pr_4846.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI0NTE2OA==	Remove if useless, or fix it if assertion is failed	Code	Yes	FALSE												
apache/storm	3226	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MzIxNQ==	322	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3226.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3MzIxNQ==	This is our corp internal commit and should be changed to community JIRA.	Comments	No	FALSE												
apache/storm	3213	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMjUzNg==	326	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3213.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMjUzNg==	better to add VisibleForTesting and comments to make it clear that this is only used by unit test	Code	Yes	FALSE												
apache/storm	3296	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzOTQ1NA==	319	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3296.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzOTQ1NA==	nit: receive -> received ; And add  the log to indicate the message is ignored will be helpful Also can you show the log after you added remote? Is it an Ip address? Thanks	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect string literal	Yes		Yes		NONE	NONE	NONE	NONE
apache/storm	3265	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2OTU1Mw==	320	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3265.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2OTU1Mw==	We can use ObjectReader.getBoolean()	Code	No	FALSE												
apache/storm	3215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ1MjQ3NQ==	324	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ1MjQ3NQ==	Consider this case: {"comp-1", {"incompatibleComponents", "comp-1"}, {"maxNodeCoLocationCnt" , 2}}  This means we can have at most 2 comp-1 on the same node, but no more than 1 comp-1 on the same worker. The code here mixes worker-level and node-level constraints and the worker-level constraint will be ignored	Code	No	FALSE												
apache/storm	3215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUzMjE0MQ==	325	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUzMjE0MQ==	What's the different between this and testConstraintSolverForceBacktrack	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
apache/storm	3244	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NTAzMA==	321	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/apache_storm/pr_3244.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NTAzMA==	What does the comment mean? Or can it be removed?	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Literal	Accepted	Change code comment to better explain the associated code element	Yes		No	No	NONE	NONE	NONE	NONE
blackducksoftware/blackduck-alert	864	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NzMzMQ==	480	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_864.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI1NzMzMQ==	We want to get rid of the getter/setter for properties and pass them in through the constructor.	Code	No	FALSE												
blackducksoftware/blackduck-alert	993	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA==	478	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_993.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA==	Why does findByEmailAddressAndProviderConfigId(...) return a List? Shouldn't it be an optional? I think what we want is a findByEmailAddressInAndProviderConfigId(Collection<String> emailAddresses, Long providerConfigId). (Note the "In" in the method name; this will allow us to get all of the relevant relations in a single query).	Code	Yes	FALSE												
blackducksoftware/blackduck-alert	1172	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc1Mjk1NQ==	476	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_1172.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc1Mjk1NQ==	Is there a reason we are keeping this around? It seems like we have been changing the endpoints to return their own custom versions of FieldOptions. EX: ProviderProjectOptions. It seems like the code is split between using this class as a general Option vs custom implementations of FieldOptions. Is the plan to use the class to replace those custom classes? or to replace this by creating more custom classes?	Code	No	FALSE												
blackducksoftware/blackduck-alert	1158	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3NDM4Mg==	477	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_1158.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU3NDM4Mg==	I'm working backwards here, but we might want to rethink content being a List. It adds one more step to the controller for enforcing the pattern of an API always returning a JSON Object.	Code	No	FALSE												
blackducksoftware/blackduck-alert	958	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzMjk2Ng==	479	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_958.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMzMjk2Ng==	I understand this is a Mock object for tests but I think it would be best to follow good conventions and make these fields private and create setters or some methods to add to these Map's.	Code	Yes	FALSE												
blackducksoftware/blackduck-alert	813	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQxOTkzOA==	481	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_blackduck-alert/pr_813.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQxOTkzOA==	I'm pretty sure we use the RecursiveToStringStyle in our libraries. What was this issue with it?	Code	No	FALSE												
blackducksoftware/synopsys-detect	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0Njg1MQ==	485	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_synopsys-detect/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0Njg1MQ==	Please make this multi-line for consistency.	Code	Yes	FALSE												
blackducksoftware/synopsys-detect	183	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTAwNA==	482	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/blackducksoftware_synopsys-detect/pr_183.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTAwNA==	I don't like that this is called "collectCodeLocationNames" when it really "creates" code location names.	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
bndtools/bnd	4397	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5Njc0MA==	489	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bndtools_bnd/pr_4397.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI5Njc0MA==	I think this change should be in a separate commit from the other changes to repo finding since they are totally unrelated. This enable proper cherry-picking if we want.	Code	No	FALSE												
bndtools/bnd	4442	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NjQ1OQ==	488	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bndtools_bnd/pr_4442.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODg2NjQ1OQ==	The change in this constructor does not do anything useful since there is no user-managed cnf folder in which they can set -versiondefaults to some meaningful value. This includes things using standalone workspace (bndruns, maven, gradle). They can only control a bndrun file which is read after the version defaults are already set in the standalone workspace. So this proposal only works for Bnd workspace projects but it does not work for their bndruns using -standalone.	Code	No	FALSE												
bndtools/bnd	4165	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MTM0MQ==	490	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bndtools_bnd/pr_4165.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MTM0MQ==	I hope to god the next Eclipse version fixes this idiotic code formatting bug...	Code	Yes	FALSE												
bndtools/bnd	3946	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY5MzQyNw==	491	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/bndtools_bnd/pr_3946.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY5MzQyNw==	I am unclear on the connection between EclipseWorkspaceRepository which is for Bnd Workspace projects and m2e which is for maven projects? EclipseWorkspaceRepository should assume that all projects in the map are Bnd workspace projects, no? Or are you trying to cross the streams here? (Ghostbusters reference).	Code	No	FALSE												
box/box-java-sdk	813	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTI2MQ==	493	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/box_box-java-sdk/pr_813.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTI2MQ==	Suggested change                                                                                                    }                                                    public void remove() {                                                    }                                                                                                        public void remove() {	Code	Yes	TRUE	Inconsistent or disrupted formatting	Class	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	NONE	EmptyLineSeparator
box/box-java-sdk	787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNzYxMA==	494	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/box_box-java-sdk/pr_787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjMzNzYxMA==	Suggested change                                                                                                        return this.wrappedConnection.getMaxRetryAttempts();                                                        return this.wrappedConnection.getMaxRetryAttempts() + 1;	Code	No	FALSE												
broadinstitute/gatk	6937	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyNDYyMQ==	496	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6937.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyNDYyMQ==	Let's capitalize these constants: PHASE_01.	Code	Yes	FALSE												
broadinstitute/gatk	6554	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyOTQxOA==	500	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6554.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyOTQxOA==	Should add some minimal documentation here	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Add new JavaDoc block to describe the functionality of a code element	Yes		Yes		NONE	CommentRequired	Public types, methods and fields (API) should be documented with Javadoc	MissingJavadocType
broadinstitute/gatk	6611	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2NTQxMQ==	498	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6611.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2NTQxMQ==	GATK for historical reasons uses 1-based inclusive intervals.  The tool should adapt the given intervals to match what htsget needs.	Code	No	FALSE												
broadinstitute/gatk	6611	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjkwNg==	499	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6611.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY2NjkwNg==	wrap this in a Collections.unmodifiableList for safety.	Code	No	FALSE												
broadinstitute/gatk	6375	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjQ2NQ==	501	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6375.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUxNjQ2NQ==	Huh, I've never seen this method which creates the temp file and writes to it before.   That seems useful.  Maybe it should be promote somewhere.	Code	No	FALSE												
broadinstitute/gatk	6973	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk1MTcwOA==	495	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_gatk/pr_6973.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk1MTcwOA==	I thought we were getting close, but this deferred initialization state seems complicating - whats the reason for needing it (both here, and in the evaluators, which still have an "initialize" method) ? Is there any alternative ? Depending on the answer, we'll need to rationalize these constructors - having one that controls initialization and one that doesn't seems problematic. There are 3 constructors now, each of which leaves the object in a slightly different non-obvious state. We really need to get rid of the boolean if at all possible.	Code	No	FALSE												
broadinstitute/picard	1555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ4NjcwNg==	505	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_picard/pr_1555.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ4NjcwNg==	whitespace                         Suggested change                                                                                                        final File outfile = File.createTempFile("testSmallIntervals", ".wgs_metrics",TEMP_OUTPUT_DIR);                                                        final File outfile = File.createTempFile("testSmallIntervals", ".wgs_metrics", TEMP_OUTPUT_DIR);	Code	Yes	FALSE												
broadinstitute/picard	1603	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM2ODk3OA==	502	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_picard/pr_1603.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM2ODk3OA==	since there already is a tile stratifier, it woudl seem more consistent to just add x & y stratifier (or one stratifiyer for x and one for y?) and then use it in conjunction with the Tile stratifier Is there a reason this cannot work?	Code	No	FALSE												
broadinstitute/picard	1496	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3MDE0MA==	506	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/broadinstitute_picard/pr_1496.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc3MDE0MA==	Would this be better as a try-with-resources block?	Code	Yes	FALSE												
camunda-cloud/zeebe	5893	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA==	508	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_5893.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA==	Maybe we can call these arguments replyDelay, I think it'd be clearer	Code	Yes	FALSE												
camunda-cloud/zeebe	4145	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY0MTI0Mw==	513	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_4145.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY0MTI0Mw==	I think we can delete this class for now.	Code	No	FALSE												
camunda-cloud/zeebe	5421	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkzMjYyNg==	510	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_5421.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkzMjYyNg==	I added the test case for the next release. I was also useful to verify that the issue is detected :)	Code	No	FALSE												
camunda-cloud/zeebe	4497	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2NzE0Ng==	512	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_4497.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2NzE0Ng==	I'm not sure what the changes here have to do with the PR - what am I missing?	Code	No	FALSE												
camunda-cloud/zeebe	5535	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzY1MA==	509	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda-cloud_zeebe/pr_5535.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzY1MA==	Suggested change                                                                                                          .name("broker_process_startup_metric")                                                          .name("broker_start_step_latency")	String value	Yes	FALSE												
camunda/camunda-bpm-platform	1048	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUwMzQyNg==	515	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda_camunda-bpm-platform/pr_1048.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUwMzQyNg==	I cannot follow why this is needed and I also struggle to look this up in Spring myself. Can you please provide a better explanation in code here? Else we will have trouble touching this code again in the future.	Comments	Yes	FALSE												
camunda/camunda-bpm-platform	743	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NTQ4Nw==	517	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda_camunda-bpm-platform/pr_743.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NTQ4Nw==	We can also skip the query if the resourceId is *	Code	No	FALSE												
camunda/camunda-bpm-platform	864	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NDc3Mw==	516	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/camunda_camunda-bpm-platform/pr_864.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NDc3Mw==	I would suggest to have a constant for "installationId.lock" as well.	Code	Yes	FALSE												
candlepin/candlepin	2663	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1NjE4Mw==	523	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/candlepin_candlepin/pr_2663.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM1NjE4Mw==	The changes below are good, but mean that these should not be injected (since we create them ourselves during init).	Code	No	FALSE												
candlepin/candlepin	2674	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDMyMw==	522	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/candlepin_candlepin/pr_2674.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDMyMw==	Wrong comment	Javadoc	Yes	FALSE												
candlepin/candlepin	2680	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyMjgxNg==	521	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/candlepin_candlepin/pr_2680.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcyMjgxNg==	Maybe the default should be "InVmLogin" or "GuestLogin" to be more precise since we're not actually using the PropertiesLogin module	Code	No	FALSE												
catrobat/catroid	3835	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjMyOA==	525	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/catrobat_catroid/pr_3835.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjMyOA==	Please make this variable name more concise, e.g. nameAndDescriptionScreen (I'm not sure if it is really this one because secondScreen confuses me a bit)	Code	Yes	FALSE												
catrobat/catroid	3655	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMTQzNw==	528	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/catrobat_catroid/pr_3655.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMTQzNw==	Nice! :)	Code	No	FALSE												
catrobat/catroid	3481	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwNTczMQ==	529	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/catrobat_catroid/pr_3481.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYwNTczMQ==	@wslany since we updated version to ....96 for the last three stitch bricks, is this correct to increase by one here again?	Code	No	FALSE												
cbioportal/cbioportal	7872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMzMjc2Ng==	531	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cbioportal_cbioportal/pr_7872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMzMjc2Ng==	Studies can have multiple CNA profiles (ex: gbm_tcga_pub study has 2 CNA profiles). profileType needs to be included. It looks much similar to GenomicDataFilter, may be reuse it	Code	Yes	FALSE												
cbioportal/cbioportal	8099	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDU3OA==	530	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cbioportal_cbioportal/pr_8099.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMDU3OA==	mysterious	Javadoc	No	FALSE												
cdapio/cdap	11903	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4NTExNQ==	538	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_cdap/pr_11903.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk4NTExNQ==	doesn't need to be final	Code	No	FALSE												
cdapio/cdap	12612	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4ODUyMQ==	536	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_cdap/pr_12612.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4ODUyMQ==	this shouldn't come back, it's being set lower now (line 127)	Code	Yes	TRUE	Unnecessary Code	Loop	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
cdapio/cdap	12817	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw==	535	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_cdap/pr_12817.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw==	This method actually returns the Requirements class, not the annotation, so better call it getArtifactRequirements()	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
cdapio/cdap	12890	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzNzAwNA==	533	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_cdap/pr_12890.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAzNzAwNA==	No need to copy again since in the set method you always replace with a new Map copy.	Code	No	FALSE												
cdapio/cdap	12209	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1MjM1Nw==	537	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_cdap/pr_12209.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1MjM1Nw==	timer should be started for this too, this is where most of the work is happening.	Code	No	FALSE												
cdapio/hydrator-plugins	1250	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3NTQwOA==	540	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1250.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3NTQwOA==	we can use extractedPassword here.	Code	No	FALSE												
cdapio/hydrator-plugins	1269	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU3MjMzMQ==	539	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1269.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU3MjMzMQ==	Is it possible for this writeToDB method to be called multiple times for the same DBRecord? If so the count would be incorrect right?	Code	No	FALSE												
cdapio/hydrator-plugins	1027	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2MDA1Mg==	545	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1027.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2MDA1Mg==	shouldnt this return null?	Code	No	FALSE												
cdapio/hydrator-plugins	1045	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTI4NQ==	543	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cdapio_hydrator-plugins/pr_1045.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTI4NQ==	nit: JoinerConfig.JOIN_KEYS	Code	Yes	TRUE	Complex, long, or inadequate logic	Attribute	Accepted	Replace call to static method by instance method call	Yes		No	No	NONE	NONE	NONE	HideUtilityClassConstructor*
cesnet/perun	2789	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk3MzAyMQ==	550	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cesnet_perun/pr_2789.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk3MzAyMQ==	Not sure why added if not used.	Code	Yes	FALSE												
cesnet/perun	2848	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NjIwNw==	548	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cesnet_perun/pr_2848.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4NjIwNw==	Please add check if a member exists.	Code	No	FALSE												
cesnet/perun	2848	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4MDExNA==	549	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cesnet_perun/pr_2848.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg4MDExNA==	I think, that also unsuspendMember below should be marked as deprecated, since we should be managing Bans instead of member suspension now.	Code	No	FALSE												
cgeo/cgeo	9633	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDMxMTEyMA==	551	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9633.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDMxMTEyMA==	Is MinDecFormulaParser the only subclass of AbstractLatLonFormulaParser? If yes, why do we need the subclass?	Code	No	FALSE												
cgeo/cgeo	9632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwNDQ2Mw==	552	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDMwNDQ2Mw==	Please use the ellipsis character (…) instead of three dots. But anyway, @eddiemuc you are doing a great job!	String value	No	FALSE												
cgeo/cgeo	9321	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxMzI4NQ==	553	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9321.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxMzI4NQ==	typo: LOG_MAX_LENGTH	Code	Yes	FALSE												
cgeo/cgeo	9065	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMjU1Mg==	556	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cgeo_cgeo/pr_9065.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAyMjU1Mg==	typo, same in other places	Comments	Yes	FALSE												
checkstyle/checkstyle	8108	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MjI3Mw==	560	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/checkstyle_checkstyle/pr_8108.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MjI3Mw==	Usually it says To configure the check:	Javadoc	Yes	FALSE												
checkstyle/checkstyle	8902	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0MjA5MQ==	558	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/checkstyle_checkstyle/pr_8902.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0MjA5MQ==	This is why property descriptions must start with a verb in the singular tense.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
checkstyle/checkstyle	8566	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0MTA3Nw==	559	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/checkstyle_checkstyle/pr_8566.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ0MTA3Nw==	Please remove extra blank line	Code	Yes	FALSE												
cloudfoundry-incubator/multiapps-controller	734	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0MTgwOA==	568	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_734.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0MTgwOA==	Again, the question is grammatically incorrect. If you stick with these words, an alternative is doesAppNameHaveColorWithoutSuffix. But this method also checks 2 things. Firstly it checks the 'appName' that it is passed if it doesn't end in either suffix and checks something unrelated to the app name, the deployedMtaColor. I think the second check should be in a different method	Code	Yes	FALSE												
cloudfoundry-incubator/multiapps-controller	734	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NDI3Mw==	569	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_734.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI2NDI3Mw==	The name of this method still does not match the name of the class.	Code	Yes	FALSE												
cloudfoundry-incubator/multiapps-controller	768	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEzNjQ3NA==	566	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_768.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEzNjQ3NA==	Same	Code	Discard	FALSE												
cloudfoundry-incubator/multiapps-controller	867	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NDgzNA==	563	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_867.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NDgzNA==	Add this to the abstract *WithHooks step	Code	No	FALSE												
cloudfoundry-incubator/multiapps-controller	867	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1Mjc2OQ==	564	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_867.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1Mjc2OQ==	extract this getHookPhasesForCurrentStepPhase(hookToBeExecuted, hookPhasesForCurrentStepPhase) to a variable	Code	Yes	TRUE	Complex, long, or inadequate logic	Variable	Accepted	Extract variable	Yes		Yes		NONE	NONE	NONE	NONE
cloudfoundry-incubator/multiapps-controller	1002	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTg4MzE2OQ==	561	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_1002.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTg4MzE2OQ==	When will this throw an exception? Also, isn't there anything here that would do the job: https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FilenameUtils.html	Code	No	FALSE												
cloudfoundry-incubator/multiapps-controller	754	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MzEwMg==	567	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cloudfoundry-incubator_multiapps-controller/pr_754.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MzEwMg==	Why not make this private final and set it through a package-private constructor?	Code	No	FALSE												
cmsgov/beneficiary-fhir-data	333	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2MDk4MQ==	572	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_beneficiary-fhir-data/pr_333.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2MDk4MQ==	This comment could use a header sentence introducing/explaining it, e.g. saying what CCW field the values you're listing are for.	Javadoc	Yes	FALSE												
cmsgov/beneficiary-fhir-data	218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MTg4Mw==	573	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_beneficiary-fhir-data/pr_218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MTg4Mw==	If I'm not mistaken the parameters have changed but the general logic behind this statement has not correct?  I ask because currently in the test environment this is logging every second and causing logs to fill up quite a bit. Could this be changed to a debug level?	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Accepted in text but not change in code									
cmsgov/beneficiary-fhir-data	218	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MjM2Mw==	574	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_beneficiary-fhir-data/pr_218.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MjM2Mw==	Same as above, this is currently logging every second in test.  Can this be changed to debug?	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Not Accepted									
cmsgov/beneficiary-fhir-data	181	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEzOTQyMg==	575	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_beneficiary-fhir-data/pr_181.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEzOTQyMg==	Can't request in request.header. be omitted from the computeMdcRequestKey function call?	Code	No	FALSE												
cmsgov/beneficiary-fhir-data	419	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgxNDkyNA==	570	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_beneficiary-fhir-data/pr_419.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgxNDkyNA==	Would you mind applying this suggestion?                         Suggested change                                                                                                   * @param columnLength specifies the column length {@link Optional<Integer>}                                                   * @param columnScale specifies the column scale {@link Optional<Integer>}                                                   * @param columnLength specifies the column length {@link Optional<Integer>}, for numeric types this represents the total number of digits that can be stored                                                   * @param columnScale specifies the column scale {@link Optional<Integer>}, for numeric types this represents how many of the total digits (see `columnLength`) are to the right of the decimal point	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to improve explanation about code element	Yes		No	No	NONE	NONE	NONE	NONE
cmsgov/dpc-app	640	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NDgyMQ==	583	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/cmsgov_dpc-app/pr_640.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NDgyMQ==	I believe I ran into an issue with the secret key factory not being thread safe, were you able to determine that as well? I believe there was a commit addressing that in my original branch.	Code	No	FALSE												
fabric8io/kubernetes-client	2372	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODU5OQ==	868	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2372.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4ODU5OQ==	Will a PUT in the server of the same resource update its resource version (propagate event to watchers, etc.)? if so, maybe this is something expected from users invoking this function. WDYT?	Code	No	FALSE												
fabric8io/kubernetes-client	2036	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzY1MQ==	871	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2036.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxNzY1MQ==	Same as previous comments	Code	Discard	FALSE												
fabric8io/kubernetes-client	2661	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0MDI5NA==	865	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2661.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0MDI5NA==	Would a log.warn make sense here?	Other	Yes	FALSE												
fabric8io/kubernetes-client	2137	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMjc5MA==	870	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2137.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxMjc5MA==	Either remove the class or add some tests to it	Code	No	FALSE												
fabric8io/kubernetes-client	2400	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3MDQzNA==	866	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2400.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3MDQzNA==	This is redundant, previous statement already takes care of this. I think you can also declare the fields final.	Code	Yes	FALSE												
fabric8io/kubernetes-client	2376	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzQxMQ==	867	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabric8io_kubernetes-client/pr_2376.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY5MzQxMQ==	nit: same as https://github.com/fabric8io/kubernetes-client/pull/2376/files#r467693276, probably initRoleBinding is more clear	Code	Yes	FALSE												
fabricmc/fabric	1043	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI1ODQ0NA==	874	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_1043.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI1ODQ0NA==	Choose TRUE or TriState.TRUE as a general style	Code	Yes	FALSE												
fabricmc/fabric	1043	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUwNDkyNg==	875	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_1043.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUwNDkyNg==	everything else checks this == DEFAULT instead, should probably be changed here, too, for consistency.	Code	Yes	FALSE												
fabricmc/fabric	980	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY1MjYxNw==	876	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_980.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY1MjYxNw==	Suggested change                                                                                                   * @param blockEntity  entity the block entity of the block that was going to be broken, can be {@code null}                                                   * @param blockEntity the block entity of the block that was going to be broken, can be {@code null}	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
fabricmc/fabric	1182	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc5MzkwOA==	872	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_1182.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc5MzkwOA==	Add @unique on added fields.	Code	No	FALSE												
fabricmc/fabric	658	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyNjIwMA==	878	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_658.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgyNjIwMA==	This could almost jsut be an inner class in FabricBiomeTest	Code	No	FALSE												
fabricmc/fabric	645	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3MTM1Mw==	879	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_645.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY3MTM1Mw==	should fail hard. see no point of generating an exception stub.	Code	No	FALSE												
fabricmc/fabric	525	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MzczNA==	885	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_525.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MzczNA==	Maybe also clarify this is synced from the RegistryTagManager	Comments	Yes	FALSE												
fabricmc/fabric	525	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMTQwOQ==	886	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_525.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjEzMTQwOQ==	Entry for BlockEntityType is missing	Code	No	FALSE												
fabricmc/fabric	1052	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDIzMQ==	873	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_1052.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE1MDIzMQ==	I'd probably throw assertion errors here and for the couple of exceptions below.	Code	No	FALSE												
fabricmc/fabric	917	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyNDMyMQ==	877	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_917.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyNDMyMQ==	Assertion error	Code	No	FALSE												
fabricmc/fabric	563	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjkyNQ==	884	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_563.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjkyNQ==	We don't have annotations yet for nullability we agree on, so a simple /* NULLABLE */ comment would be nice for when we go back to manage these	Comments	Yes	FALSE												
fabricmc/fabric	641	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NjY0Mw==	881	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_641.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NjY0Mw==	2020	Javadoc	No	FALSE												
fabricmc/fabric	641	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzU5OQ==	882	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_641.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzU5OQ==	2020	Javadoc	No	FALSE												
fabricmc/fabric	641	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0ODI5Mg==	883	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric/pr_641.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0ODI5Mg==	🚲 🏠 secretly add intellij annotations /s, replace it with a doc for now I guess	Javadoc	Yes	FALSE												
fabricmc/fabric-loader	277	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE4Njc5MQ==	891	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_277.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE4Njc5MQ==	This should return a Set in order to have a useful contract for equals, Collection's is too weak for the desired semantics. "VersionMatchers" is a somewhat odd term, it'd call it parse.	Code	No	FALSE												
fabricmc/fabric-loader	277	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNTEzOQ==	892	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_277.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIwNTEzOQ==	The logic here looks a bit weird, the 2nd trim makes no difference outside the 2nd if. Why is it > 1 instead of > 0?	Code	No	FALSE												
fabricmc/fabric-loader	207	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTI5Nw==	893	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_207.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEyMTI5Nw==	missing blank above	Code	Yes	FALSE												
fabricmc/fabric-loader	206	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI4NzY5MA==	894	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_206.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI4NzY5MA==	Classes can only be either public or package private.	Code	No	FALSE												
fabricmc/fabric-loader	206	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MDI2Nw==	895	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_206.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1MDI2Nw==	This seems a bit redundant to me to call a method on the loader's instance, and then require the loader again as a param. Couldn't we just make the loader one of the ctor params for the AccessWideners since we won't usually be passing multiple instances of loader into the same game.	Code	No	FALSE												
fabricmc/fabric-loader	306	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk1NTMzNA==	887	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_306.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk1NTMzNA==	this should store the raw version in a variable, then add the wrong one to the exc	Code	No	FALSE												
fabricmc/fabric-loader	299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NTAwNg==	888	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1NTAwNg==	I'd probably mention that this does not return any sensitive information.	Code	No	FALSE												
fabricmc/fabric-loader	299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTI2NA==	889	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fabricmc_fabric-loader/pr_299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MTI2NA==	empty line before return	Code	Yes	FALSE												
faforever/downlords-faf-client	1693	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDA2Ng==	900	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/faforever_downlords-faf-client/pr_1693.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI4NDA2Ng==	Try avoid UI style set in java code at all costs, use Pseudoclass	Code	No	FALSE												
faforever/downlords-faf-client	1803	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0NjI1Mg==	899	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/faforever_downlords-faf-client/pr_1803.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0NjI1Mg==	Suggested change                                                                                                      CompletableFuture<String> errorFuture = new CompletableFuture<>();                                                      errorFuture.completeExceptionally(new IllegalArgumentException("Map name is not a generated map"));                                                      return errorFuture;                                                      return CompletableFuture.failedFuture(new IllegalArgumentException("Map name is not a generated map"));	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace a set of statements by direct method in existing API	Yes		Yes		NONE	NONE	NONE	NONE
faforever/downlords-faf-client	2059	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxOTg4OQ==	897	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/faforever_downlords-faf-client/pr_2059.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIxOTg4OQ==	I know it was there before, but now it looks even more like a code smell 🤔	Code	No	FALSE												
faforever/downlords-faf-client	1542	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA4Mw==	901	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/faforever_downlords-faf-client/pr_1542.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA2MjA4Mw==	We certainly dont wanna throw here if we do then the whole loacl replay vault breaks, also there are legimit cases where a replay has no map. One is coop the maps are part of the game mod and hence are not found locally nor on the server	Code	No	FALSE												
fcrepo/fcrepo	1599	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MDY2NA==	909	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1599.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3MDY2NA==	This class has been replaced by the HttpIdentifierConverter perhaps adding a @deprecated to this is now necessary?	Other	Yes	FALSE												
fcrepo/fcrepo	1661	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Mjk4Nw==	905	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1661.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0Mjk4Nw==	I appreciate your thorough documentation here.	Javadoc	No	FALSE												
fcrepo/fcrepo	1625	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw==	908	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1625.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw==	Unit tests should only write test artifacts to the Maven module's target directory.	Code	No	FALSE												
fcrepo/fcrepo	1647	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI4NjkyOQ==	907	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1647.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI4NjkyOQ==	It may be helpful to include the txId in the log message.	String value	Yes	FALSE												
fcrepo/fcrepo	1703	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ2MjIxMg==	904	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/fcrepo_fcrepo/pr_1703.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ2MjIxMg==	Does this module have access to the ResourceHeaders interface? If so, it might be nice to have an api that just took FedoraId and ResourceHeaders rather than having to pass each value individually.	Code	No	FALSE												
firebase/firebase-admin-java	489	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg1ODA3Mw==	912	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-admin-java/pr_489.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg1ODA3Mw==	I don't think we follow this indentation pattern anywhere else. Let's be consistent with the rest of the codebase.	Code	Yes	FALSE												
firebase/firebase-admin-java	369	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MzU1OQ==	915	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-admin-java/pr_369.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3MzU1OQ==	We don't use defaults in DownloadAccountResponse. Why were they necessary here?	Code	No	FALSE												
firebase/firebase-admin-java	461	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMTQxNw==	914	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-admin-java/pr_461.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgyMTQxNw==	Suggested change                                                                                                        .setDisplayName("SAML provider name")                                                        .setDisplayName("OIDC provider name")	String value	No	FALSE												
firebase/firebase-android-sdk	1530	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ1ODMzOQ==	921	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_1530.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ1ODMzOQ==	docs on this class?	Javadoc	Yes	FALSE												
firebase/firebase-android-sdk	2087	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4MTM1OA==	916	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_2087.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg4MTM1OA==	Please also port the logging changes from JS.	Code	No	FALSE												
firebase/firebase-android-sdk	1402	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDc1OA==	922	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_1402.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDc1OA==	Lets add why we do this? (something like: this is required because we trust the server to tell us which campaigns can be re-impressed to honor frequency limits)?	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain internal implementation details of a method	Yes		Yes		NONE	NONE	NONE	NONE
firebase/firebase-android-sdk	1646	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MDIxNQ==	920	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_1646.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MDIxNQ==	We might need some clarity here. The javadoc gives the impression that INSTANCE_ID_TOKEN can be fetched from FIS SDK, which is incorrect. We can explicitly call out INSTANCE_ID_TOKEN is replaced by  installation auth token fetched from FIS SDK.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Annotation	Accepted	Change text in existing JavaDoc to better explain the purpose of an annotation	Yes		Yes		NONE	NONE	NONE	NONE
firebase/firebase-android-sdk	2023	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMzM1Ng==	918	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/firebase_firebase-android-sdk/pr_2023.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMzM1Ng==	out of curiosity, why is this part needed?	Code	No	FALSE												
flutter/flutter-intellij	5011	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzM4Mw==	926	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/flutter_flutter-intellij/pr_5011.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzM4Mw==	typo - and	Comments	Yes	FALSE												
flutter/flutter-intellij	5046	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0Mzk1Ng==	924	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/flutter_flutter-intellij/pr_5046.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0Mzk1Ng==	great to see this go away!	Comments	No	FALSE												
folio-org/okapi	951	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5NjIxNA==	930	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_951.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5NjIxNA==	Can you be more specific about the usage of this class? It should mention log4j, Vertx context, Vertx vertx local data.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Add text to existing JavaDoc to improve explanation about code element	Yes		Yes		NONE	NONE	NONE	NONE
folio-org/okapi	951	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyODIyMg==	931	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_951.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyODIyMg==	Taking a value out of a JWT token without validating the token can cause a security issue because anyone can spoof it. Such a value must be handled with caution and care. I suggest to rename the methods to draw developer attention to the missing validation:  rename getTenant() to getTenantWithoutValidation() rename getUsername() to getUsernameWithoutValidation() rename getUserId() to getUserIdWithoutValidation() rename getFieldFromToken(String) to getFieldFromTokenWithoutValidation(String)	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
folio-org/okapi	894	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5ODkzOA==	933	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_894.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5ODkzOA==	Remove empty @return	Javadoc	Yes	FALSE												
folio-org/okapi	985	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4NjI1MA==	928	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_985.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4NjI1MA==	Does this mean one tenant can see another tenant's modules?	Code	No	FALSE												
folio-org/okapi	1053	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwODU3OQ==	927	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_1053.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwODU3OQ==	indexOf("/_/") is always 0.                         Suggested change                                                                                                    String locationInstallJob = r.getHeader("Location");                                                                                                    String path = locationInstallJob.substring(locationInstallJob.indexOf("/_/"));                                                    String path = r.getHeader("Location");	Code	No	FALSE												
folio-org/okapi	948	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNDE1MA==	932	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_948.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzczNDE1MA==	If r can handle less data per second than clientRequest the data in r's queue will grow until out of memory.	Code	No	FALSE												
folio-org/okapi	889	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3MTMwOA==	934	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_889.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk3MTMwOA==	Suggested change                                                                                                        Json.encode(cli.getRespHeaders().entries()));                                                        () -> Json.encode(cli.getRespHeaders().entries()));                                 Avoid encoding when debug logging is diabled.	Code	No	FALSE												
folio-org/okapi	981	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4MjAwOQ==	929	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/folio-org_okapi/pr_981.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4MjAwOQ==	Can we be sure that there is no old userId and permission in mi? Or should we set them to null?	Code	No	FALSE												
foundationdb/fdb-record-layer	988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTg1Ng==	937	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3OTg1Ng==	Suggested change                                                                                                    protected final Quantifier.Physical inner;                                                    @Nonnull                                                    protected final Quantifier.Physical inner;	Code	No	FALSE												
foundationdb/fdb-record-layer	988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MzE1OA==	938	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MzE1OA==	Suggested change                                                                                                    public boolean resultEquals(final Object other, final BiMap<CorrelationIdentifier, CorrelationIdentifier> equivalenceMap) {                                                    public boolean resultEquals(@Nullable final Object other, @Nonnull final BiMap<CorrelationIdentifier, CorrelationIdentifier> equivalenceMap) {	Code	No	FALSE												
foundationdb/fdb-record-layer	988	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0NDcwMw==	939	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_988.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDY0NDcwMw==	Can we pull this into a named (inner) class? I think it'll ease debugging if this someday shows up in a stack trace or something like that.	Code	Yes	FALSE												
foundationdb/fdb-record-layer	975	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyNjgzNQ==	941	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_975.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyNjgzNQ==	It feels like this loop should assert something, even if it's just that it never gets "0" back (so that we know it never hits the else branch), though having it assert about the real contents would be better.	Code	No	FALSE												
foundationdb/fdb-record-layer	984	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2MjA1Mw==	940	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_984.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2MjA1Mw==	Suggested change                                                                                                    FDBRecordContextConfig.Builder getContextConfigBuilder();                                                    @Nonnull                                                    FDBRecordContextConfig.Builder getContextConfigBuilder();	Code	No	FALSE												
foundationdb/fdb-record-layer	1079	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE0MzgwMw==	935	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/foundationdb_fdb-record-layer/pr_1079.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE0MzgwMw==	It needs more detailed explanation but we can wait for next PR.	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Not Accepted									
futurewei-cloud/alcor	243	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5NDkzMQ==	945	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_243.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5NDkzMQ==	To make the controller method a bit explicit, I would recommend to create a controllerUtil class and move the private methods there.	Code	Yes	TRUE	Complex, long, or inadequate logic	Method	Accepted	Extract method	Yes		Yes		NONE	NONE	NONE	NONE
futurewei-cloud/alcor	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4OTk3MQ==	948	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4OTk3MQ==	Seems the first iteration focuses on IPv4, which is totally fine. IPv6 will also be supported, right?	Code	No	FALSE												
futurewei-cloud/alcor	292	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNTU2NA==	944	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_292.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwNTU2NA==	I know this is not your code @Gzure Looking back this line of code will impact the performance significantly. As we are do a major refactor, let us take this opportunity to get rid of the "default range" and use a range selector. In the MacRangeRepository or a new repository, create a table to track the utilization of each range. Option 1 Explicit update: Every allocation request always goes to that table to pick up the latest range with least utilization,  and increment the count after an allocation request or decrease the count after a release request. This option is easy to implement at a cost of write performance (more DB access!). Option 2 In-Memory Counter with Background Monitoring: Each Mac Manager Instance has an in-memory counter that tracks the utilization of each range. The counter gets updated by a running monitoring thread in a periodic manner. This thread should run not very frequently, say every 30 minutes or so, and keep the counter always up-to-date. The allocation/release request only needs to read the in-memory counter but no obligation to update it. NOTE that when every Mac Manager instance launches or restart, it also needs to initialize its in-memory counter.	Code	No	FALSE												
futurewei-cloud/alcor	240	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4NjQ5MA==	946	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/futurewei-cloud_alcor/pr_240.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU4NjQ5MA==	I think we can safely remove bindingHostIP as it is already included in PortEntity.	Code	Yes	FALSE												
gchq/gaffer	2269	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNzQ0Nw==	951	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2269.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkzNzQ0Nw==	Add a serialVersionUID	Code	No	FALSE												
gchq/gaffer	2238	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDIxNA==	955	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2238.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY3MDIxNA==	Can you restore the modifiers for these?	Code	No	FALSE												
gchq/gaffer	2239	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTk3NDM2Mw==	953	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2239.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyMTk3NDM2Mw==	new Class with copyright starting from 2017? This occurs many times.	Javadoc	No	FALSE												
gchq/gaffer	2239	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTg1MTQwMA==	954	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2239.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0OTg1MTQwMA==	Suggested change                                                                                                public class TypeValueToTupleTest extends FunctionTest {                                                public class TypeValueToTupleTest extends FunctionTest<TypeValueToTuple> {	Code	No	FALSE												
gchq/gaffer	2260	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3NDM5MA==	952	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2260.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3NDM5MA==	Consider not using constant case for mutable lists.	Code	Yes	FALSE												
gchq/gaffer	2232	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQ0MA==	956	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gchq_gaffer/pr_2232.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQ0MA==	Suggested change                                                                                                 * Copyright 2017-2019 Crown Copyright                                                 * Copyright 2020 Crown Copyright	Javadoc	Yes	FALSE												
geonetwork/core-geonetwork	5260	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwMTg1OA==	958	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_5260.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwMTg1OA==	This seem not used later.	Code	Yes	TRUE	Unnecessary Code	Variable	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		NONE	UnusedLocalVariable	Unused local variables should be removed	UnusedLocalVariable
geonetwork/core-geonetwork	5260	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwNzM5NA==	959	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_5260.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwNzM5NA==	To confirm no need to call _context.clear() as this code runs in a custom thread?	Code	No	FALSE												
geonetwork/core-geonetwork	5260	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwODYxNg==	960	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_5260.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwODYxNg==	I see some code in the API package creating a ServiceContext, but not calling the clear method at the end (for example:                core-geonetwork/services/src/main/java/org/fao/geonet/api/groups/GroupsApi.java                   Lines 189 to 258       in       23910ce                                                     public void getGroupLogo(                                               @ApiParam(value = "Group identifier", required = true) @PathVariable(value = "groupId") final Integer groupId,                                               @ApiIgnore final WebRequest webRequest,                                               HttpServletRequest request,                                               HttpServletResponse response) throws ResourceNotFoundException {                                                                                          Locale locale = languageUtils.parseAcceptLanguage(request.getLocales());                                                                                          ApplicationContext context = ApplicationContextHolder.get();                                               ServiceContext serviceContext = ApiUtils.createServiceContext(request, locale.getISO3Country());                                               if (context == null) {                                                   throw new RuntimeException("ServiceContext not available");                                               }                                                                                          Group group = groupRepository.findOne(groupId);                                               if (group == null) {                                                   throw new ResourceNotFoundException(messages.getMessage("api.groups.group_not_found", new                                                       Object[]{groupId}, locale));                                               }                                               try {                                                   final Resources resources = context.getBean(Resources.class);                                                   final String logoUUID = group.getLogo();                                                   if (StringUtils.isNotBlank(logoUUID) && !logoUUID.startsWith("http://") && !logoUUID.startsWith("https//")) {                                                       try (Resources.ResourceHolder image = getImage(resources, serviceContext, group)){                                                           if (image != null) {                                                               FileTime lastModifiedTime = image.getLastModifiedTime();                                                               response.setDateHeader("Expires", System.currentTimeMillis() + SIX_HOURS * 1000L);                                                               if (webRequest.checkNotModified(lastModifiedTime.toMillis())) {                                                                   // webRequest.checkNotModified sets the right HTTP headers                                                                   return;                                                               }                                                               response.setContentType(AttachmentsApi.getFileContentType(image.getPath()));                                                               response.setContentLength((int) Files.size(image.getPath()));                                                               response.addHeader("Cache-Control", "max-age=" + SIX_HOURS + ", public");                                                               FileUtils.copyFile(image.getPath().toFile(), response.getOutputStream());                                                               return;                                                           }                                                       }                                                   }                                                                                              // no logo image found. Return a transparent 1x1 png                                                   FileTime lastModifiedTime = FileTime.fromMillis(0);                                                   if (webRequest.checkNotModified(lastModifiedTime.toMillis())) {                                                       return;                                                   }                                                   response.setContentType("image/png");                                                   response.setContentLength(TRANSPARENT_1_X_1_PNG.length);                                                   response.addHeader("Cache-Control", "max-age=" + SIX_HOURS + ", public");                                                   response.getOutputStream().write(TRANSPARENT_1_X_1_PNG);                                                                                          } catch (IOException e) {                                                   Log.error(LOGGER, String.format("There was an error accessing the logo of the group with id '%d'",                                                       groupId));                                                   throw new RuntimeException(e);                                               }                                           }                                                                                      private static Resources.ResourceHolder getImage(Resources resources, ServiceContext serviceContext, Group group) throws IOException {                                               final Path logosDir = resources.locateLogosDir(serviceContext);                                               final Path harvesterLogosDir = resources.locateHarvesterLogosDir(serviceContext);                                               final String logoUUID = group.getLogo();                                               Resources.ResourceHolder image = null;                                               if (StringUtils.isNotBlank(logoUUID) && !logoUUID.startsWith("http://") && !logoUUID.startsWith("https//")) {                                                   image = resources.getImage(serviceContext, logoUUID, logosDir);                                                   if (image == null) {                                                       image = resources.getImage(serviceContext, logoUUID, harvesterLogosDir);                                                   }                                               }                                               return image;                                           }                    ) Is this due to the way of creating the ServiceContext (serviceManager.createServiceContext vs ApiUtils.createServiceContext)?	Code	No	FALSE												
geonetwork/core-geonetwork	4633	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDcyNg==	964	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_4633.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDcyNg==	Indentation	Code	Yes	FALSE												
geonetwork/core-geonetwork	4878	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMjMyMQ==	963	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_4878.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMjMyMQ==	Use a more expressive test name	Code	Yes	FALSE												
geonetwork/core-geonetwork	5118	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1NDcyOQ==	961	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geonetwork_core-geonetwork/pr_5118.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzU1NDcyOQ==	Add file header	Javadoc	Yes	FALSE												
geoserver/geoserver	4031	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxOTcwMA==	969	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geoserver_geoserver/pr_4031.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgxOTcwMA==	Same advise on try / catch around to catch and report errors when calling any extension	Code	No	FALSE												
geoserver/geoserver	4244	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxMzc0Mw==	967	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geoserver_geoserver/pr_4244.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcxMzc0Mw==	I think that this path should be executed only if resolutionDifferenceTolerance is not zero since it's an optional parameter/for optional behavior. Does it make sense?	Code	No	FALSE												
geoserver/geoserver	4451	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NTE3NA==	966	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geoserver_geoserver/pr_4451.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NTE3NA==	It's a getter for a boolean, should use "is" instead of "get" as the prefix.	Code	Yes	FALSE												
geoserver/geoserver	4058	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5Mjg2MA==	968	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geoserver_geoserver/pr_4058.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5Mjg2MA==	Returns	Javadoc	Yes	FALSE												
geotools/geotools	3255	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTM5NQ==	970	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_3255.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTM5NQ==	Is this the only line different from fireFileEvent? If so, can you please factor out the difference and share code?	Code	No	FALSE												
geotools/geotools	2954	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0MjM5MA==	975	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_2954.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg0MjM5MA==	Suggested change                                                                                                        headers.put("User-Agent", "Geotools Http client");                                                        headers.put("User-Agent", "Geotools HTTP client");                                 :-p	String value	Yes	FALSE												
geotools/geotools	2930	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2NzYwNw==	976	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_2930.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2NzYwNw==	This change isn't much of an improvement, as either could be true. Given that GT doesn't necessarily support the full set of expressions, this distinction is relevant, because the invalid and not supported have different fixes - and invalid expression is user error (most likely a misspelling), and should be simple to fix, whereas an expression that is not supported means they need to upgrade (or wait for) a version of geotools that supports the expression. Unfortunately I don't think there's much we can do about this - even if we maintained a list of expressions that GT didn't yet support, it would inevitably become outdated. Perhaps a more descriptive error message? Something like: Expression \"" + name + "\" invalid. It may be misspelled or not supported by this implementation"	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect string literal	Yes		Yes		NONE	NONE	NONE	NONE
geotools/geotools	3105	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NjAxNQ==	972	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_3105.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NjAxNQ==	the the ROIs in output I think they are in input, actually? "the ROIs in input"	Comments	Yes	FALSE												
geotools/geotools	3236	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MDI4Mw==	971	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_3236.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE2MDI4Mw==	What happened here, Java 8 is showing the same behavior?	Code	No	FALSE												
geotools/geotools	2956	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzcwNw==	974	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_2956.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzcwNw==	Why not leave scale as an int - rather than casting it when it's used?	Code	No	FALSE												
geotools/geotools	3087	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMzODkzMw==	973	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/geotools_geotools/pr_3087.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMzODkzMw==	Inefficient and incoherent with the implemented interface, ptDst should be used when present. When reprojecting lots of points, the machinery passes a single target point to avoid excessive object allocation.	Code	No	FALSE												
getodk/collect	3937	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyNTYzOA==	982	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_3937.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIyNTYzOA==	You already have `android:stepSize in the layout file so why do you need this here too?	Code	No	FALSE												
getodk/collect	4006	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5ODY3MQ==	981	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_4006.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5ODY3MQ==	We want a test for this change.	Code	No	FALSE												
getodk/collect	4188	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5MTg0MQ==	978	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_4188.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5MTg0MQ==	This could maybe use the QuestionMediaManager in some way. I've ended up playing with that in #4190 so might be better to come back fro that later!	Code	No	FALSE												
getodk/collect	3886	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyOTQzOQ==	983	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_3886.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyOTQzOQ==	Did you try assertThat(messageDigest, is(cachedMessageDigest))? I'm pretty sure that just works.	Code	No	FALSE												
getodk/collect	3623	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ==	986	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_3623.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ==	I think you'd be fine to combine this with the previous test as one flow. I think we can also move rotation/reopen testing out of Espresso for these cases but I'll have a quick think about that and get back to you on that.	Code	No	FALSE												
getodk/collect	3839	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyNjczNA==	984	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/getodk_collect/pr_3839.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyNjczNA==	I don't think this works because the ViewModel will have a reference to the Activity, causing a leak. I thought the callbacks you had before were fine. I was imagining the ViewModel only as a way for the dialog to get access to the FormController. Even better might be to give access only to the data that the dialog needs which I think is the last deleted repeat name and the last deleted repeat index.	Code	No	FALSE												
gluonhq/substrate	338	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MjczNw==	988	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gluonhq_substrate/pr_338.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4MjczNw==	Add javadoc	Javadoc	Yes	FALSE												
gluonhq/substrate	338	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4NDY5Ng==	989	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gluonhq_substrate/pr_338.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM4NDY5Ng==	and here	Code	Discard	FALSE												
gocd/gocd	8503	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxODYxMg==	992	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_8503.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjkxODYxMg==	Does it make sense to move hasSecretParams() check inside the resolve method?	Code	No	FALSE												
gocd/gocd	7745	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU4NTEyMw==	995	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_7745.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU4NTEyMw==	@kritika-singh3 - can we use the publicly documented Package Repositories and Packages API to fetch this information. IMO, we should always prefer public APIs for rendering entity information on the SPAs, unless its absolutely required to build a newer internal API.	Code	No	FALSE												
gocd/gocd	8210	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5NTQ4Nw==	994	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_8210.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5NTQ4Nw==	This is the heart of this change (adding convenience methods); the rest is IntelliJ IDEA regrouping private and protected methods together at the bottom.	Code	No	FALSE												
gocd/gocd	7555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU3MDAwMQ==	997	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_7555.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU3MDAwMQ==	Feeds APIs do not need Accept header. Should FeedsApiControllerV1 implement implements SparkController, ControllerMethods, SparkSpringController instead of extends ApiController implements SparkSpringController? Refer: ApiSupportController	Code	No	FALSE												
gocd/gocd	7555	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU3MDk5NQ==	998	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_7555.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU3MDk5NQ==	NormalUserSecurity? Should this be based on some permissions (pipeline, pipeline group level view permissions)? Not sure if keeping it public for all has any security implications. \cc: @arvindsv @bdpiparva	Code	No	FALSE												
gocd/gocd	8348	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3OTI2MQ==	993	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gocd_gocd/pr_8348.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3OTI2MQ==	We should run this query on larger database and check the performance, also run EXPLAIN ANALYZE on PostgreSQL	Code	No	FALSE												
google/ground-android	580	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MTk1OA==	1000	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_580.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzk3MTk1OA==	#ERROR!	Javadoc	No	FALSE												
google/ground-android	580	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA==	1001	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_580.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY0MTkyOA==	It's generally safer to use artificial ids (id) as PK, and to declare other unique columns as unique if necessary. If there's no specific reason for making this PK, can we move it back to id?	Code	No	FALSE												
google/ground-android	565	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjU2OQ==	1002	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_565.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjU2OQ==	How about getElementsSorted() --> getSortedElements()?	Code	Yes	TRUE	Bad identifier	Method	Not Accepted									
google/ground-android	304	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNDU4Mw==	1005	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_304.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyNDU4Mw==	Please remove this	Other	Yes	FALSE												
google/ground-android	617	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcyNDQ4Nw==	999	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_617.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcyNDQ4Nw==	Can we static import Preconditions throughout to make these more inline friendly and reduce line-wrapping?	Code	Yes	FALSE												
google/ground-android	505	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTg2OA==	1004	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/google_ground-android/pr_505.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk5NTg2OA==	We should update this comment as it is out-of-date now	Comments	Yes	FALSE												
googleapis/gapic-generator	3237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4MjQ1Nw==	1009	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_gapic-generator/pr_3237.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4MjQ1Nw==	Is this possible (length != 2)? If yes, what would be an example?	Code	No	FALSE												
googleapis/gapic-generator	3237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODE3OA==	1010	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_gapic-generator/pr_3237.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4ODE3OA==	argNameVal.length will still be !=2, so line 22 will give true and then continue on line 24	Code	No	FALSE												
googleapis/gapic-generator	3139	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTg0OQ==	1011	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_gapic-generator/pr_3139.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc4MTg0OQ==	I guess this constructor is getting really big. If possible, please consider moving this in a private method (it is go-specific stuff, so putting it in separate method should be ok).	Code	Yes	FALSE												
googleapis/gapic-generator	3275	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0NjU5Mw==	1008	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_gapic-generator/pr_3275.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA0NjU5Mw==	Let's change the description to "List of transports the GAPIC can use ('rest' or 'grpc') separated by '+'. NOTE: For now we only support the first transport in the list" and the default to "grpc+rest"	String value	No	FALSE												
googleapis/java-bigquery	509	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5MzU0Mw==	1016	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_509.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5MzU0Mw==	Nit: Can be written without the branches... return ... && ... && ... :	Code	Yes	FALSE												
googleapis/java-bigquery	941	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw==	1012	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_941.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw==	This block reads quite confusing now. consider flipping it.. if (results.getJobComplete() && results.getSchema() != null) { schema = Schema.fromPb(results.getSchema()); // Your logic below for numRows, numDml... } else { JobId jobId = .... .... }	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Accepted	Invert the boolean expression to simplify it	Yes		Yes		NONE	NONE	NONE	NONE
googleapis/java-bigquery	115	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4OTg4Nw==	1018	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_115.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4OTg4Nw==	Would you want to use a StringBuilder here?	Code	No	FALSE												
googleapis/java-bigquery	835	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjYxNw==	1013	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_835.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg5MjYxNw==	Might not be your best final choice for a bucket name.	String value	No	FALSE												
googleapis/java-bigquery	458	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMjcyNA==	1017	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/googleapis_java-bigquery/pr_458.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMjcyNA==	can we add a simple one-liner on what this sample does? something like "//Sample to create a range partitioned table". An example in this sample https://github.com/googleapis/java-bigquery/blob/master/samples/snippets/src/main/java/com/example/bigquery/LoadCsvFromGcs.java	Comments	Yes	FALSE												
graylog2/graylog2-server	7130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgxMzQyOA==	1068	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/graylog2_graylog2-server/pr_7130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDgxMzQyOA==	We should add an entry to misc/graylog.conf including a comment that describes the available options.	Comments	Yes	FALSE												
greenplum-db/pxf	456	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU1MDk0NA==	1072	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/greenplum-db_pxf/pr_456.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU1MDk0NA==	Suggested change                                                                                                                        String.format("the '%1$s' configuration is required to access locally mounted file systems. Configure a valid '%1$s' property to access this server",                                                                        String.format("Configure a valid value for '%s' property for this server to access the filesystem",	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Replace a string literal by a different meaning or a synonymous	Yes		Yes		NONE	NONE	NONE	NONE
greenplum-db/pxf	486	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NTQ0OQ==	1069	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/greenplum-db_pxf/pr_486.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2NTQ0OQ==	Should we use named constants here? I am assuming this is 4kb and 10MB but I could be wrong.	Code	Yes	FALSE												
greenplum-db/pxf	470	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5ODQzOQ==	1071	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/greenplum-db_pxf/pr_470.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5ODQzOQ==	not sure how valuable timekeeping is here, as the reader might not actually read the whole batch in memory in nextBatch() or will it ?	Code	No	FALSE												
gridgain/gridgain	1660	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NDIyOQ==	1074	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gridgain_gridgain/pr_1660.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NDIyOQ==	commented code	Code	Yes	TRUE	Unnecessary Code	Try-Catch	Accepted	Remove commented out code statements	Yes		Yes		NONE	NONE	Sections of code should not be commented out	NONE
gridgain/gridgain	1246	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MzAzMQ==	1075	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gridgain_gridgain/pr_1246.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MzAzMQ==	Bad formatting.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	Source code should be indented consistently	Indentation
gridgain/gridgain	1154	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4MDYxNw==	1076	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/gridgain_gridgain/pr_1154.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4MDYxNw==	* imports are against our guidelines	Code	Yes	FALSE												
grpc/grpc-java	6831	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA1MTQ3NQ==	1082	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/grpc_grpc-java/pr_6831.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA1MTQ3NQ==	Why need check subchannelPool == null?	Code	No	FALSE												
grpc/grpc-java	7275	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1NTQ1Mg==	1080	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/grpc_grpc-java/pr_7275.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1NTQ1Mg==	Why generate a JSON string? Why not the data structure directly?	Code	No	FALSE												
grpc/grpc-java	6883	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODAzOA==	1081	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/grpc_grpc-java/pr_6883.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMxODAzOA==	Can helper be final? Is there a case it could change?	Code	No	FALSE												
grpc/grpc-java	7391	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MjkzNA==	1079	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/grpc_grpc-java/pr_7391.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY5MjkzNA==	The comment is not necessary as with edsServiceName	Comments	Yes	FALSE												
h2database/h2database	2637	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwMjA5MQ==	1084	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2637.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwMjA5MQ==	Please, don't use final modifiers for fields and local variables.	Code	No	FALSE												
h2database/h2database	2637	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwOTUwOA==	1085	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2637.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwOTUwOA==	Use SQL command here. https://h2database.com/html/commands.html#set_schema_search_path	Code	No	FALSE												
h2database/h2database	2449	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODI4Mg==	1090	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2449.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODI4Mg==	is it possible this can throw IOOBE ? Looks like i+1 is safe, but not sure about i+2	Code	No	FALSE												
h2database/h2database	2406	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NTgyMg==	1091	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2406.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NTgyMg==	to a -> to the	Javadoc	Yes	FALSE												
h2database/h2database	2635	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyMjI3Nw==	1086	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2635.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyMjI3Nw==	substring is a slow operation, it looks like m.find(position) (for the first occurrence) can be used instead.	Code	No	FALSE												
h2database/h2database	2613	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMwNzc3OQ==	1087	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2613.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMwNzc3OQ==	BTW, what is the point of this condition? Unconditional StringUtils.appendTwoDigits(output, hours) should produce the same result, or I'm missing something?	Code	Yes	TRUE	Unnecessary Code	Conditional	Accepted	Remove duplicated code or processing	Yes		Yes		NONE	NONE	NONE	NONE
h2database/h2database	2644	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0OTg0OA==	1083	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2644.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0OTg0OA==	This import should be removed.	Code	Yes	FALSE												
h2database/h2database	2545	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1OTM1Ng==	1089	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/h2database_h2database/pr_2545.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1OTM1Ng==	Why a LinkedList is used here and another constructor stores a passed ArrayList? If different implementations really behave better, it should be documented somehow in comments.	Comments	Yes	TRUE	Complex, long, or inadequate logic	Operation	Accepted	Use a different type to be consistent with other parts of the code	Yes		Yes		NONE	NONE	NONE	NONE
hapifhir/hapi-fhir	1844	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NjMxMQ==	1097	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_1844.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE4NjMxMQ==	Nice.  Im curious, do we know that this is an optimization? I assume we've ruled out the size==0 case somewhere above?	Code	No	FALSE												
hapifhir/hapi-fhir	1951	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwNDQzMg==	1096	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_1951.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwNDQzMg==	nitipck: theFlags.length > 0 is redundant	Code	Yes	FALSE												
hapifhir/hapi-fhir	2104	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0ODg4Nw==	1095	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_2104.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0ODg4Nw==	Either change this line to Person Resources to match above line, or change above line to match Persons	Javadoc	Yes	FALSE												
hapifhir/hapi-fhir	2177	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM2NjY3MA==	1092	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_2177.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM2NjY3MA==	rename to goldenResources	Code	Yes	FALSE												
hapifhir/hapi-fhir	2177	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5MDUyMw==	1093	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hapifhir_hapi-fhir/pr_2177.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5MDUyMw==	clean up comments	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Variable	Not Accepted									
hartwigmedical/pipeline5	235	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NDU4OA==	1099	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_235.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE2NDU4OA==	Can we add a new toggle here so we can turn it off without disabling the GATK germline calling?	Code	No	FALSE												
hartwigmedical/pipeline5	142	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1OTEwNQ==	1104	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_142.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1OTEwNQ==	Thinking a better place for this would be in the shouldRun method of the somatic caller. Just that we don't have any other logic in this class and its also hard to unit test it.	Code	No	FALSE												
hartwigmedical/pipeline5	130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzNjM2OA==	1105	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzNjM2OA==	I see we add the CRAM here to the final output I guess we want to remove the BAM from the aligner report components as well?	Code	No	FALSE												
hartwigmedical/pipeline5	130	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzNjg4OA==	1106	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_130.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzNjg4OA==	I think we should have an option to enable/disable this feature	Code	No	FALSE												
hartwigmedical/pipeline5	230	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY5MjA3MQ==	1100	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_230.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDY5MjA3MQ==	Nit: String.format might make this easier to read.	Code	Yes	FALSE												
hartwigmedical/pipeline5	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkyMzE2OA==	1103	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkyMzE2OA==	Rarely seen in the wild.	Code	Discard	FALSE												
hartwigmedical/pipeline5	182	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczMDg4MA==	1102	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hartwigmedical_pipeline5/pr_182.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczMDg4MA==	I'd be inclined to just store resourceFiles as an instance variable, the method names on it are descriptive enough.	Code	No	FALSE												
hashgraph/hedera-mirror-node	936	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NDI5MA==	1108	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hashgraph_hedera-mirror-node/pr_936.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NDI5MA==	This sort can be removed since it's already sorted above.	Code	Yes	TRUE	Unnecessary Code	Call	Accepted	Remove duplicated code or processing	Yes		No	No	NONE	NONE	NONE	NONE
hashgraph/hedera-mirror-node	1235	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzNjQ1OA==	1107	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hashgraph_hedera-mirror-node/pr_1235.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzNjQ1OA==	Nit:                         Suggested change                                                                                                    void verifyEntityTypeMigrationInValidEntities() throws Exception {                                                    void verifyEntityTypeMigrationInvalidEntities() throws Exception {	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
hashgraph/hedera-mirror-node	639	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1Mjk1OA==	1110	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hashgraph_hedera-mirror-node/pr_639.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1Mjk1OA==	nit: Recommend always using assert4j assertThat() for cleaner approach, consistency with other code and ability to chain	Code	Yes	FALSE												
hashgraph/hedera-mirror-node	832	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1ODQyMA==	1109	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hashgraph_hedera-mirror-node/pr_832.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk1ODQyMA==	Should be 5000 to match readme and properties	Code	No	FALSE												
hazelcast/hazelcast	17282	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjg1OA==	1113	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast/pr_17282.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjg1OA==	Should we should also add @Deprecated here?	Other	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add or remove Deprecated annotation to update the method status	Yes		Yes		NONE	NONE	NONE	NONE
hazelcast/hazelcast	16698	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4MDM4Nw==	1117	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast/pr_16698.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4MDM4Nw==	This is unnecessary	Code	Yes	FALSE												
hazelcast/hazelcast	16806	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTAxNw==	1115	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast/pr_16806.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTAxNw==	Minor: which is available...	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		No	No	NONE	NONE	NONE	NONE
hazelcast/hazelcast	16787	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1OTc1NQ==	1116	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast/pr_16787.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1OTc1NQ==	This version doesn't support batching. -> it's an implementation detail, not relevant to the contract. Don't mutate the given map until the future completes. -> why? It's a pretty bad requirement, most multi-threaded applications won't be able to adhere to this rule.	Javadoc	No	FALSE												
hazelcast/hazelcast	17910	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NTQ5MA==	1112	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast/pr_17910.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM1NTQ5MA==	Does this need to be synchronized with concurrent calls to getLogger? I can see all calls to getLogger are thread-safe as they use striped locks but removeLogger here does not coordinate with methods adding loggers.	Code	No	FALSE												
hazelcast/hazelcast	17201	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MzQ5NA==	1114	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast/pr_17201.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc4MzQ5NA==	This doesn't seem very intuitive. Because a comparator is set, it becomes a priority queue.	Code	Yes	FALSE												
hazelcast/hazelcast-jet	2098	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg2ODM3NQ==	1120	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast-jet/pr_2098.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg2ODM3NQ==	a more descriptive name would mapToRequestFn	Code	Yes	FALSE												
hazelcast/hazelcast-jet	2098	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg2ODYxMA==	1121	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast-jet/pr_2098.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg2ODYxMA==	javadoc is lacking, what does it do?	Javadoc	Yes	FALSE												
hazelcast/hazelcast-jet	2098	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDMyMQ==	1122	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast-jet/pr_2098.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNDMyMQ==	Suggested change                                                                                                        return batchFromProcessor("filesSource(" + new File(directory) + ')',                                                                SourceProcessors.readFilesP(directory, "*", false,                                                                        path -> Stream.of(new String(Files.readAllBytes(path), UTF_8))));                                                        return Sources.filesBuilder(directory)                                                               .build(path -> Stream.of(new String(Files.readAllBytes(path), UTF_8)));	Code	Discard	FALSE												
hazelcast/hazelcast-jet	2419	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc1MDgwMg==	1118	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast-jet/pr_2419.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc1MDgwMg==	we should say it is maximum number of reconnection be more clear here - for example if it is set to 2 then it tries to connect 3 times (i.e. reconnect 2 times).	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add text to existing JavaDoc to explain internal implementation details of a method	Yes		No	No	NONE	NONE	NONE	NONE
hazelcast/hazelcast-jet	2043	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyNTQ1NA==	1123	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast-jet/pr_2043.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyNTQ1NA==	should we not offer a more convenient interface here? like Serializer or similar?	Code	No	FALSE												
hazelcast/hazelcast-jet	2390	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0NzIyMg==	1119	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hazelcast_hazelcast-jet/pr_2390.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0NzIyMg==	why not "insert, delete or update" (alternatively, "insertion, deletion or updating")	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Interface	Accepted	Change text in existing JavaDoc to improve grammar or fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
hibernate/hibernate-orm	3644	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk0NTM4Mw==	1124	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hibernate_hibernate-orm/pr_3644.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk0NTM4Mw==	Could we stick with the standard code style for multi-line statements?  Or at least one of the 2 prevalent ones?	Code	Yes	FALSE												
hibernate/hibernate-orm	3644	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk0ODEyOQ==	1125	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hibernate_hibernate-orm/pr_3644.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk0ODEyOQ==	I'd rather leave table expression off here...  While today embeddable values need to map to a single table, so far I have been working in 6 under the assumption that we want to start allowing compositions across tables.  We cannot fully make that transition until we can pull "writing" under this new mapping model, but as much as possible let's design the mapping model with this in mind. And of course the is no notion of a JdbcMapping for multiple columns, unless we start considering complex SQL types (arrays, etc)	Comments	No	FALSE												
hibernate/hibernate-orm	3519	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2MTUzNQ==	1126	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hibernate_hibernate-orm/pr_3519.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk2MTUzNQ==	Shouldn't this be <= instead? Current version of h2 is 1.4.200.	Code	No	FALSE												
hibernate/hibernate-orm	3256	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwNTQ4Ng==	1127	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hibernate_hibernate-orm/pr_3256.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwNTQ4Ng==	Interesting, I thought entityType.isNullable() would imply !isPropertyEmbeddedInJoinProperties( parentAsDotNode.propertyName ). Obviously the API of the PropertyMapping gets a little bit vague here. Most code assumes that properties in the PropertyMapping are actually deducible from just the association owners subclass column span, which nullable properties are inherently not. In that sense, it doesn't make sense for the property to be considered here. As far as I remember, this was at least how these were handled at the time I wrote this originally. It might have changed since, or I might just as well have simply overlooked this case. Anyways, I expected joinIsNeeded for generateJoin && entityType.isNullable - so nothing worries me here. The tests that the two of us introduced with HHH-12775 and others are also still passing. The tests for this PR are very extensive.  So I am sure this change is fine!	Code	No	FALSE												
hmcts/ccd-data-store-api	1151	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAzOTIyNw==	1131	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hmcts_ccd-data-store-api/pr_1151.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAzOTIyNw==	if these new classes are meant to be generic, i.e. for working with enabling conditions on state, or in the future on events (we have a ticket for this feature proposal already) then better moving them outside the casestate package?	Code	No	FALSE												
hmcts/ccd-data-store-api	1292	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMjUyNg==	1128	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hmcts_ccd-data-store-api/pr_1292.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcyMjUyNg==	Suggested change                                                                                                    public Boolean evaluate(String enablingCondition,                                                    public Boolean isEventEnabled(String enablingCondition,	Code	Yes	FALSE												
hmcts/ccd-data-store-api	1085	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwMjM4Mg==	1132	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hmcts_ccd-data-store-api/pr_1085.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwMjM4Mg==	Same like above. Should be ApprovalStatus.	Code	Yes	FALSE												
hmcts/ccd-data-store-api	1154	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMTk4MQ==	1129	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hmcts_ccd-data-store-api/pr_1154.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAyMTk4MQ==	better putting this on top of the method.	Code	No	FALSE												
hortonworks/cloudbreak	7966	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0NjczNw==	1135	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hortonworks_cloudbreak/pr_7966.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0NjczNw==	should we log this? just to make investigation easier	Other	Yes	TRUE	Inadequate logging and monitoring	Method	Accepted	Add logging code	Yes		Yes		NONE	NONE	NONE	NONE
hortonworks/cloudbreak	8188	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NTcwOQ==	1134	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hortonworks_cloudbreak/pr_8188.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NTcwOQ==	can you break up smaller functions?	Code	Yes	FALSE												
hub4j/github-api	753	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NTc5OA==	1138	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hub4j_github-api/pr_753.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU5NTc5OA==	Does this need to be public?  It is never needed by users.	Code	No	FALSE												
hub4j/github-api	897	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMzU2MA==	1137	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hub4j_github-api/pr_897.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMzU2MA==	Ah, I see.  The create from template repository has almost none of the parameters of general repository creation. Still I think that limitation is something that could be explained in the javadoc for fromTemplateRepository(String templateOwner, String templateRepo) and include a link to the GitHub docs. What you've done is good: guiding users to the a non-failure path.  However, in this case, I'd rather reduce the surface area and added code in this library. Also add @Preview and @Deprecated annotations to the methods that call GitHub Preview APIs.	Javadoc	Yes	FALSE												
hub4j/github-api	683	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA4NjE4NA==	1139	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hub4j_github-api/pr_683.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA4NjE4NA==	Suggested change                                                                                                        return new GHCreateTeamBuilder(root, "/orgs/" + login + "/teams", name);                                                        return new GHCreateTeamBuilder(root, login, name);                                 Or maybe even this (and add name to builder):                         Suggested change                                                                                                        return new GHCreateTeamBuilder(root, "/orgs/" + login + "/teams", name);                                                        return new GHCreateTeamBuilder(root);                                 Is a team always created attached to a login?  As me, could I create a team that your login owns?	Code	No	FALSE												
hubspot/jinjava	531	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5MTgwNQ==	1142	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_531.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5MTgwNQ==	wow, this removes a lot of code! Can you ensure that this is still covered in the unit tests?	Code	No	FALSE												
hubspot/jinjava	390	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTc3NA==	1147	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_390.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3OTc3NA==	any reason for running this through the escape filter (e) here?	Code	No	FALSE												
hubspot/jinjava	525	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwMTA1OA==	1144	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_525.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwMTA1OA==	even though this is a boolean, it would probably be more readable with a get instead of is	Code	Yes	FALSE												
hubspot/jinjava	472	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ2NDE5OQ==	1145	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_472.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ2NDE5OQ==	Might be good to add at least one positive test case as well to confirm we didn't break anything.	Code	No	FALSE												
hubspot/jinjava	570	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMwMDc5NQ==	1141	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_570.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTMwMDc5NQ==	There's an extra } after {% if my_val %}	Javadoc	Yes	FALSE												
hubspot/jinjava	410	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MzAxMw==	1146	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hubspot_jinjava/pr_410.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MzAxMw==	why are all these methods that just call abstract methods needed?	Code	No	FALSE												
hugegraph/hugegraph	820	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNTM3OA==	1151	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hugegraph_hugegraph/pr_820.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwNTM3OA==	don't append VALUE_SPLITOR for the first property	Code	No	FALSE												
hugegraph/hugegraph	1247	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MTE1Ng==	1148	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hugegraph_hugegraph/pr_1247.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc0MTE1Ng==	successfully	String value	Yes	FALSE												
hugegraph/hugegraph	1174	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxODY0NA==	1149	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hugegraph_hugegraph/pr_1174.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxODY0NA==	Can't	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect string literal	Yes		Yes		NONE	NONE	NONE	NONE
hyperledger/besu	1228	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyMjk3Mg==	1153	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_1228.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyMjk3Mg==	Connected to my point above about forcing regeneration, why can't we use cacheLogsBloomForBlockHeader?	Code	No	FALSE												
hyperledger/besu	1228	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyNzYwNg==	1154	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_1228.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyNzYwNg==	I think we want some sort of thread-safe object that can track this. We might be able to get away with an AtomicBoolean	Code	No	FALSE												
hyperledger/besu	1021	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1ODg0NQ==	1156	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_1021.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1ODg0NQ==	Is MarkSweepPruner a singleton for the life of the java process?  Counters can handle multiple counters, gauges will throw an exception when the second gauge is created.	Code	No	FALSE												
hyperledger/besu	594	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NjE1Mg==	1157	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_594.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4NjE1Mg==	Can privateTransaction.getPrivateFrom() be null? Do we need to be careful here?	Code	No	FALSE												
hyperledger/besu	1708	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTcwMDU1NA==	1152	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_1708.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTcwMDU1NA==	rename to BftConfigOptions	Code	Yes	FALSE												
hyperledger/besu	1077	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5OTMyOA==	1155	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/hyperledger_besu/pr_1077.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ5OTMyOA==	should we deprecate the --host-whitelist option? It may be confusing not to state that the new allowlist is the prefered one.	Code	No	FALSE												
ibm/fhir	803	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5OTcxMw==	1165	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_803.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5OTcxMw==	Suggested change                                                                                                            if (chunkData.getUploadId4FailureOperationOutcomes()  == null) {                                                            if (chunkData.getUploadIdForFailureOperationOutcomes()  == null) {	Code	Yes	FALSE												
ibm/fhir	984	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mzk3MQ==	1163	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_984.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg1Mzk3MQ==	when this error can happen? just curious	Code	No	FALSE												
ibm/fhir	1030	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyNzY0Mw==	1162	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ibm_fhir/pr_1030.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyNzY0Mw==	removal candidate?	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove commented out code statements	Yes		Yes		NONE	NONE	Sections of code should not be commented out	NONE
inria/spoon	3396	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNDM0OQ==	1180	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3396.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNDM0OQ==	shouldn't this be abstract and all Enum constants implement this? Otherwise every new enum item would need a change in this method.	Code	No	FALSE												
inria/spoon	3258	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4ODExNg==	1181	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3258.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4ODExNg==	Is there a need for buildModel and buildCtModel?	Code	No	FALSE												
inria/spoon	3258	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4OTA2Ng==	1182	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/inria_spoon/pr_3258.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM4OTA2Ng==	Does this need to follow the fluent interface idiom?	Code	No	FALSE												
ionic-team/capacitor	3778	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwMjk4MQ==	1185	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ionic-team_capacitor/pr_3778.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwMjk4MQ==	Can this be narrowed to only JSON exceptions?	Code	No	FALSE												
ionic-team/capacitor	3967	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExODQwMg==	1183	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ionic-team_capacitor/pr_3967.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExODQwMg==	We should probably rephrase this to talk about the "alias"	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Change text in existing JavaDoc to improve explanation about functionality of a method	Yes		Yes		NONE	NONE	NONE	NONE
ionic-team/capacitor	2510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1ODQwNg==	1188	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ionic-team_capacitor/pr_2510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1ODQwNg==	Did you mean to use the new isJavaScriptError bool here?	Code	Yes	FALSE												
ionic-team/capacitor	2548	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMDQ0MQ==	1187	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ionic-team_capacitor/pr_2548.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMDQ0MQ==	For consistency, better use the same error message as Status Bar plugin                         Suggested change                                                                                                        call.error("The iconColor string was not able to be parsed.  Please provide a valid string hexidecimal color code.", ex);                                                        call.error("Invalid color provided. Must be a hex string (ex: #ff0000");	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Change literal to adhere to project standards	Yes		No	No	NONE	NONE	NONE	NONE
ionic-team/capacitor	3676	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2MTEzMg==	1186	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/ionic-team_capacitor/pr_3676.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2MTEzMg==	Would this be more descriptive?                         Suggested change                                                                                                    public void fireChange(boolean isActive) {                                                    public void fireStatusChange(boolean isActive) {	Code	Yes	FALSE												
iqss/dataverse	7350	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MTY0Ng==	1190	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7350.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE1MTY0Ng==	storageIO.open called above creates the inputStream for the main file. If it's not going to be used, it needs to be closed (storageIO.getInpputStream().close() - StorageIO doesn't implement Closeable yet/have a close() method - which could be useful someday).	Code	No	FALSE												
iqss/dataverse	7101	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYxMjY4MQ==	1193	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7101.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYxMjY4MQ==	What happens if this deleteDraftIdentifier method is called on a non-DataCite installation (Handle or EZID)?	Code	No	FALSE												
iqss/dataverse	7047	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2NzIzOA==	1195	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7047.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY2NzIzOA==	I assume this selectAllFiles() is what's responsible for the odd UI behavior... when you select "Download" from the Access Dataset dropdown, you get the ZIP download, but now all the files are selected in the files table... that shouldn't be necessary... there has to be a way to get the ZIP without the unexpected UI behavior.	Code	No	FALSE												
iqss/dataverse	6968	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MzEyNg==	1196	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_6968.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MzEyNg==	if directoryLabel is not passed in, do we want path to be ""? or keep the old value (as you do with label)?	Code	No	FALSE												
iqss/dataverse	7105	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNDY5OQ==	1192	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7105.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNDY5OQ==	reindexing datasets may not actually be needed here. (based on the instances where it is called ManageTemplates, Guestbook, etc.)	Code	Yes	TRUE	Unnecessary Code	Call	Accepted in text but not change in code									
iqss/dataverse	7116	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3ODk4OQ==	1191	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7116.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3ODk4OQ==	Again, surprised that this command only supports DataCite, but it was like this previously.	Code	No	FALSE												
iqss/dataverse	6921	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMzE0OA==	1197	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_6921.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgwMzE0OA==	This test is failing because the test has "cell" in the error message while the api uses "column". Suggest putting the error message into the Bundle. None of the rest of the endpoints use the bundle because this is a very old api, but we're trying to add new work to the bundle when possible	Code	No	FALSE												
iqss/dataverse	7414	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDMyNw==	1189	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7414.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDMyNw==	Same. Delete or set to fine.	Other	Yes	TRUE	Inadequate logging and monitoring	Call	Accepted	Remove log	Yes		Yes		NONE	NONE	NONE	NONE
iqss/dataverse	7062	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNjkwOA==	1194	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iqss_dataverse/pr_7062.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODIyNjkwOA==	In http://oval.base-search.net this DOI is giving an error: ERROR: Identify response well-formed but invalid: Element '{http://www.openarchives.org/OAI/2.0/oai-identifier}sampleIdentifier': [facet 'pattern'] The value 'doi:10.7910/DVN/1HE30F' is not accepted by the pattern 'oai:[a-zA-Z][a-zA-Z0-9-](.[a-zA-Z][a-zA-Z0-9-])+:[a-zA-Z0-9-_.!~*'();/?:@&=+$,%]+'., line 5 In context:	Code	No	FALSE												
iterable/iterable-android-sdk	247	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ2OA==	1205	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_247.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ2OA==	authToken instead of token	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
iterable/iterable-android-sdk	298	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2ODA5OA==	1198	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_298.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2ODA5OA==	Suggested change                                                                                                            this.requestProcessor = new OfflineRequestProcessor(IterableApi.getInstance().getMainActivityContext());                                                            this.requestProcessor = new OfflineRequestProcessor(authProvider.getContext());	Code	Yes	FALSE												
iterable/iterable-android-sdk	298	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU3NDQ0OQ==	1199	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_298.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU3NDQ0OQ==	The test now checks for two things at the same time: that setOfflineProcessingEnabled was called and that no API requests are being made. I think ideally it shouldn't be explicitly checking for setOfflineProcessingEnabled.	Code	No	FALSE												
iterable/iterable-android-sdk	295	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3NTMxNw==	1200	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_295.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3NTMxNw==	On the first glance, I felt nextTask should have been relative to some task. Or we can document that it returns a task from the top of the taskStorage table. I felt, nextTask implies that the task it returns is next to something. But it actually is the first task. It assumes that the previous ones should be deleted. May be it could be nextTaskTo(Task task1) which could delete the existing task and then pass the next one as Next Task. Either the next task should delete the current one in context and then pass the top one. Or the name should be something different. Like GetOldestTask, GetFirstTask, GetTask. Or we can just change the description of method on top.	Code	Yes	FALSE												
iterable/iterable-android-sdk	258	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTAzOA==	1203	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_258.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTAzOA==	Suggested change                                                                                                    private boolean inAppDisplayhold = false;                                                    private boolean displayPaused = false;	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to express the meaning or type of an element	No	No			NONE	NONE	NONE	NONE
iterable/iterable-android-sdk	258	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTg0Mw==	1204	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_258.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTg0Mw==	Suggested change                                                                                                    public void setInAppDisplayhold(boolean hold) {                                                        this.inAppDisplayhold = hold;                                                        if (!hold) {                                                    public void setDisplayPaused(boolean paused) {                                                        this.displayPaused = paused;                                                        if (!paused) {	Code	Yes	TRUE	Bad identifier	Parameter	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
iterable/iterable-android-sdk	268	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2NDE5MQ==	1202	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_268.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2NDE5MQ==	InAppBgColor isn't actually used yet for background color, right?	Code	No	FALSE												
iterable/iterable-android-sdk	184	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNjQ1MA==	1206	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/iterable_iterable-android-sdk/pr_184.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNjQ1MA==	Not sure, but will there be scenario where adaptor values need to be changed without destroying it?	Code	No	FALSE												
jabref/jabref	6232	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MDc0Ng==	1211	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_6232.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE4MDc0Ng==	is requires annotations really necessary. I remember that I had a few problems with annotations vs jakarta.annotation in the past.	Code	No	FALSE												
jabref/jabref	6872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU4MDMxMA==	1209	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_6872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU4MDMxMA==	Is there a reason why these tests are commented out?	Code	Yes	FALSE												
jabref/jabref	5938	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MzU1Nw==	1214	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_5938.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MzU1Nw==	Better is to use an enum here, eg.. EscapMode, with java and javascript as values: https://www.teamten.com/lawrence/programming/prefer-enums-over-booleans.html	Code	No	FALSE												
jabref/jabref	6054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjM3OA==	1213	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jabref_jabref/pr_6054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODA4MjM3OA==	This line can be removed - I would assume that coders know that Ctrl + click on "DELIMITERS" leads to the definition of the variable.	Comments	Yes	FALSE												
janusgraph/janusgraph	2099	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5MDE4Mg==	1218	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_2099.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5MDE4Mg==	Unused import	Code	Yes	TRUE	Unnecessary Code	Import	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		Yes		NONE	UnnecessaryImport	Unnecessary imports should be removed	UnusedImports
janusgraph/janusgraph	2099	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5MDkyMA==	1219	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_2099.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5MDkyMA==	Several unused imports	Code	Yes	FALSE												
janusgraph/janusgraph	2237	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA==	1215	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_2237.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA==	Shouldn't we convert gName to tsName? I.e. removeBinding(gName + "_traversal");	Code	Yes	TRUE	Bad identifier	Parameter	Not Accepted									
janusgraph/janusgraph	2105	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg2NzY4NQ==	1217	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_2105.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg2NzY4NQ==	Wouldn't it be more readable if we do: return mutations.getDeletions()     .stream()     .map(KCVEntryMutation.ENTRY2COLUMN_FCT::apply)     .collect(Collectors.toList());	Code	Yes	FALSE												
janusgraph/janusgraph	1986	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwOTY5NQ==	1220	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_1986.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwOTY5NQ==	Why did you change this to non blocking queue? What about thread safety?	Code	No	FALSE												
janusgraph/janusgraph	1978	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMTYyMQ==	1221	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/janusgraph_janusgraph/pr_1978.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwMTYyMQ==	Why did you remove it?	Comments	No	FALSE												
jbosstm/narayana	1644	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NjY3OQ==	1227	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1644.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NjY3OQ==	Thsis is not a request for a change but just a note "thinking loudly" Do you know why the LRA Transaction instance permits the status to be null? I think it could be better to assert that's not null? I can see the code may assign the status to null during recovery. Maybe some future change could adjust it.	Code	No	FALSE												
jbosstm/narayana	1747	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NzMyMw==	1222	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1747.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NzMyMw==	It could be better to use zero size array for toArray (toArray(new T[0])), see https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion	Code	No	FALSE												
jbosstm/narayana	1747	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MjYzNQ==	1223	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1747.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MjYzNQ==	A code style thing (not necessary to be addressed) - maybe the debug call message could be whole at single line.	Code	Yes	FALSE												
jbosstm/narayana	1738	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2MzU2NA==	1224	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1738.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ2MzU2NA==	a minor thing, the ClientLRAFilter uses the call as updateProgress(progres, ...) while this class uses the format progress = updateProgress(progress, .... Would not be better to use the same format of the call (probably just updateProgress(...)?	Code	Yes	FALSE												
jbosstm/narayana	1738	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MzI5NQ==	1225	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1738.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MzI5NQ==	Why the ProgressStep#status is reported for success and not for the failure?	Code	No	FALSE												
jbosstm/narayana	1559	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyOTQzMg==	1231	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1559.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyOTQzMg==	this only usable in afterLRA calls because we are passing LRA id as LRA_HTTP_ENDED_CONTEXT_HEADER	Code	No	FALSE												
jbosstm/narayana	1550	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwNTcwNA==	1232	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1550.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODkwNTcwNA==	This does not seem to be referenced elsewhere in the PR?	Code	Yes	FALSE												
jbosstm/narayana	1603	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzYyNQ==	1229	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1603.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzYyNQ==	It's common to return the removed value on successful removal in usual CRUD models. Maybe we could return the removed LRA.	Code	No	FALSE												
jbosstm/narayana	1603	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5OTIxNw==	1230	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1603.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5OTIxNw==	Don't Narayana retry on 500 status code? In the spec we use 200 and only the response body (here correct FailedToComplete) to distinguish failed states.	Code	No	FALSE												
jbosstm/narayana	1637	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgxMjc3Ng==	1228	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jbosstm_narayana/pr_1637.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgxMjc3Ng==	wouldn't be better to use getName() here?	Code	No	FALSE												
jellyfin/jellyfin-androidtv	546	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2MDkwOQ==	1235	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jellyfin_jellyfin-androidtv/pr_546.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI2MDkwOQ==	Needs a string template	String value	Yes	FALSE												
jellyfin/jellyfin-androidtv	251	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5Mzc1NQ==	1237	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jellyfin_jellyfin-androidtv/pr_251.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM5Mzc1NQ==	I'm not really sure what this class does. Is it providing the possible "seek positions" to the player? And if so, does this mean that whatever I watch it can only seek to 30 positions? Which would mean that if I watched a movie of 30 hours I would skip one hour every time?	Code	No	FALSE												
jellyfin/jellyfin-androidtv	478	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1NTY1OQ==	1236	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jellyfin_jellyfin-androidtv/pr_478.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1NTY1OQ==	I expect everything inside this statement to probably trigger twice on non-firetv devices	Code	No	FALSE												
jellyfin/jellyfin-androidtv	569	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc2MDg2MQ==	1234	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jellyfin_jellyfin-androidtv/pr_569.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc2MDg2MQ==	Why did you change this from using System.currentTimeMillis()?	Code	No	FALSE												
jenkinsci/jenkins	4731	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3Njc0Mw==	1238	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_jenkins/pr_4731.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM3Njc0Mw==	Define the ID. @link etc.	Javadoc	Yes	FALSE												
jenkinsci/jenkins	4501	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTA2Nw==	1240	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_jenkins/pr_4501.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU4OTA2Nw==	Hide administrative monitors so they won't show up on /manage.	Code	No	FALSE												
jenkinsci/jenkins	4442	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyNzg5OA==	1242	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_jenkins/pr_4442.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIyNzg5OA==	I was unable to find any usages, but it would be great to have some binary compatibility analysis when such changes are submitted. Also not sure why it needs to be renamed	Code	No	FALSE												
jenkinsci/kubernetes-plugin	801	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE5MDcxOQ==	1246	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_801.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE5MDcxOQ==	Suggested change                                                                                                    @Symbol("kubectl")                                                    @Symbol("kubeconfig")                                 seems more intuitive to me	Other	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect value	Yes		Yes		NONE	NONE	NONE	NONE
jenkinsci/kubernetes-plugin	823	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4MjU4Mg==	1244	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_823.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODM4MjU4Mg==	This does not trigger in JenkinsRule, right?	Code	No	FALSE												
jenkinsci/kubernetes-plugin	789	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMTI1NA==	1247	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_789.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgzMTI1NA==	(insert link to meme)	Code	No	FALSE												
jenkinsci/kubernetes-plugin	677	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NzEyNw==	1251	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_677.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NzEyNw==	Do we also expect that the Computer has the original labels label1 & label2? I guess                kubernetes-plugin/src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/podTemplateWithMultipleLabels.groovy                    Line 1       in       be4b55f                                                     node('label1') {                     tests this implicitly but for the benefit of readers it might be good to assert this explicitly.	Code	Yes	FALSE												
jenkinsci/kubernetes-plugin	703	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTMyMQ==	1250	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_703.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTMyMQ==	revert	Code	No	FALSE												
jenkinsci/kubernetes-plugin	824	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIzMzk4Mw==	1243	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_kubernetes-plugin/pr_824.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIzMzk4Mw==	Also could be reverted to minimize review surface.	Code	No	FALSE												
jenkinsci/warnings-ng-plugin	379	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgwMQ==	1258	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_379.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgwMQ==	Suggested change                                                                                                                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);                                                                .hasLargeIconUrl("/plugin/warnings-ng/icons/icon-id-48x48.png");	Code	Yes	FALSE												
jenkinsci/warnings-ng-plugin	550	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NTkxNA==	1255	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_550.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NTkxNA==	Suggested change                                                                                                    private ChecksDetails createChecksDetailsBasedOnReportFile() {                                                    private ChecksDetails createExpectedDetails() {	Code	Yes	FALSE												
jenkinsci/warnings-ng-plugin	476	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNzY5MA==	1256	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_476.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNzY5MA==	Suggested change                                                                                                        assertThat(headers.get(0)).contains("Job");                                                        assertThat(headers.get(1)).contains("");                                                        assertThat(headers).containsExactly("Job", "");	Code	Yes	FALSE												
jenkinsci/warnings-ng-plugin	721	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjU3OQ==	1252	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jenkinsci_warnings-ng-plugin/pr_721.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjU3OQ==	This is not actually part of your PR: but since you added a simple way to verify the checks can you also add another test that does not wrap the code with withChecks and see that the original title is used?	Code	No	FALSE												
jmri/jmri	9159	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MjQ4OQ==	1261	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_9159.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM0MjQ4OQ==	This comment looks like a copy and paste, as it mentions integers instead of floats	Javadoc	Yes	FALSE												
jmri/jmri	9033	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM4ODIxNQ==	1263	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_9033.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM4ODIxNQ==	I assume that a concrete, system-specific MeterManager implementation may register its  VoltageMeter and CurrentMeter objects, and that registered objects of those types will be available for display in the MeterFrame GUI.  I assume that this loop construct makes all registered Meter objects available for selection for display by the MeterFrame. Question: can a given concrete MeterManager implementation register more than one VoltageMeter and/or more than one CurrentMeter object?  For example, "track current from booster 1" and "track current from booster 2" and "track current from booster N"?  If so, how are these multiple current meters differentiatable so that he/she can select the appropriate Meter object to display in the MeterFrame?	Code	No	FALSE												
jmri/jmri	9033	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM5ODU3Mw==	1264	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_9033.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTM5ODU3Mw==	This construct assumes that the connection configuration is established in a way that accurately represents the actual command station.  JMRI has never required such an accurate configuration. As I commented previously, it may be useful to perform a one-time 'Query Mode' request and filter for "active command station" bit set, and then extract command station type and serial number, as part of the initialization.  This is an idea for a future pull-request and not something I deem important to resolve before the current pull request is merged.	Code	No	FALSE												
jmri/jmri	8746	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwMzE3OQ==	1265	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_8746.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwMzE3OQ==	the else should not be on a line by itself, but should be on the same line as the closing brace of prior block.	Code	Yes	FALSE												
jmri/jmri	8473	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MzQyMw==	1266	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_8473.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MzQyMw==	Removing this may be problematic. The feedback has to be able to trigger an off message. I will need to verify this works with real hardware.	Code	No	FALSE												
jmri/jmri	8395	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ==	1267	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/jmri_jmri/pr_8395.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ==	@pabender @rhwood Do we have a convention for braces in try-catch structures?  I'm used to to t.he previous } catch ().. { form, but if we're going to switch over consistently. @geowar1 Is this an IDE setting that's changing these?	Code	Yes	TRUE	Inconsistent or disrupted formatting	Try-Catch	Accepted	Move catch declaration to the same line of its associated try's closing block brace	Yes		Yes		NONE	NONE	Close curly brace and the next "else", "catch" and "finally" keywords should be located on the same line	RightCurly
junit-pioneer/junit-pioneer	275	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIxOTEwNQ==	1272	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-pioneer_junit-pioneer/pr_275.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIxOTEwNQ==	Just a note: This nested class should be thread safe due the use of @TestMethodOrder regarding to JUnit 5 User Guide  The default execution mode is applied to all nodes of the test tree with a few notable exceptions, namely test classes that use the Lifecycle.PER_CLASS mode or a MethodOrderer (except for Random).	Code	No	FALSE												
junit-pioneer/junit-pioneer	285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcxMDY0OQ==	1271	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-pioneer_junit-pioneer/pr_285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcxMDY0OQ==	But why only for that one parameter?	Javadoc	No	FALSE												
junit-pioneer/junit-pioneer	321	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA5MzU0MA==	1269	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-pioneer_junit-pioneer/pr_321.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTA5MzU0MA==	Can a message be provided (and asserted) in such case?	Code	No	FALSE												
junit-team/junit5	2271	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2Mzk4OQ==	1274	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-team_junit5/pr_2271.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc2Mzk4OQ==	❓ Does JFR support explicit nesting of events?	Code	No	FALSE												
junit-team/junit5	2271	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA0MDIwNg==	1275	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-team_junit5/pr_2271.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA0MDIwNg==	I don't think stack traces are useful for these events as they would only point back into the test framework. Adding the annotation @stacktrace(false) will turn them off.	Code	No	FALSE												
junit-team/junit5	2365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ5MDEzNQ==	1273	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/junit-team_junit5/pr_2365.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ5MDEzNQ==	I don't think we need these two ifs as we shut down the executor afterwards.	Code	No	FALSE												
keycloak/keycloak	7554	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1MDEwMQ==	1277	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7554.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI1MDEwMQ==	This is an old Account Console test. It shouldn't be modified at all.	Code	No	FALSE												
keycloak/keycloak	7246	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY0Mg==	1282	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/keycloak_keycloak/pr_7246.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNjY0Mg==	Currently it is expected that attributeValue starts with AttributeValue element. Yet for the sake of consistency with the rest of the values and enforcing schema compliance, the attribute value should only be the value without AttributeValue. In other words, introduce a writeElementAttributeValue(Element attributeValue) method similar to e.g. writeNameIDTypeAttributeValue	Code	No	FALSE												
linkedin/brooklin	773	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4MTk2MA==	1391	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/linkedin_brooklin/pr_773.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY4MTk2MA==	nit:  when the tasks per instance exceeds the configured threshold	Javadoc	Yes	FALSE												
mapstruct/mapstruct	2089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDQ0Mw==	1427	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2089.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDQ0Mw==	What are the reasons to have a new annotation and not reusing ValueMapping? Isn't ValueMapping also meant for enumerations?	Code	No	FALSE												
mapstruct/mapstruct	2089	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDc3MQ==	1428	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2089.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5NDc3MQ==	Null check required or could it never be null when build is called? The initializeEnumTransformationStrategy that will be called after this if-clause includes a null check	Code	No	FALSE												
mapstruct/mapstruct	2007	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NDQ1Mg==	1429	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/mapstruct_mapstruct/pr_2007.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4NDQ1Mg==	Ok.. At the time of writing it felt more or less ok to do this (we had a discussion on whether or not to pass optional as parameter). Now I found some more post and I agree. Optional should not be a member. Our 'chain of responsibility' ensures the result of most methods is actually not-null, so there's also no need to return it. Remains, its fluent use.	Code	No	FALSE												
marklogic/marklogic-data-hub	3490	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3MjI5MQ==	1439	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/marklogic_marklogic-data-hub/pr_3490.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3MjI5MQ==	What's the point of using JSONObject? Why not just accept a JsonNode instead? The Spring controller can convert the RequestBody automatically into a JsonNode as well. That will cut out a lot of code and make for a richer method interface, as createFlow(JsonNode) is better than createFlow(String).	Code	No	FALSE												
megamek/megamek	2198	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1Nzk5NQ==	1445	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_megamek/pr_2198.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg1Nzk5NQ==	Suggested change                                                                                                        if (category == null                                                                 || name == null                                                        if ((category == null)                                                                || (name == null)	Code	Yes	FALSE												
megamek/megamek	2202	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTE0NQ==	1444	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_megamek/pr_2202.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIzNTE0NQ==	Can this be done through try with properties?	Code	No	FALSE												
megamek/mekhq	2167	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA0ODY4NQ==	1450	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2167.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA0ODY4NQ==	Suggested change                                                                                                        BaArmor a = (BaArmor)campaign.getWarehouse().findSparePart(part -> {                                                        BaArmor a = (BaArmor) campaign.getWarehouse().findSparePart(part -> {	Code	Yes	FALSE												
megamek/mekhq	2224	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5MzEzNA==	1449	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2224.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5MzEzNA==	Suggested change                                                                                                 * along with MekHQ.  If not, see <http://www.gnu.org/licenses/>.                                                 * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.	Javadoc	Yes	FALSE												
megamek/mekhq	2144	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzM3NTcyMA==	1452	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/megamek_mekhq/pr_2144.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzM3NTcyMA==	Merge the two calls, all you need to do is add , ex to the end of the top one	Other	Yes	FALSE												
metasfresh/metasfresh	6564	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MTg3Mg==	1458	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/metasfresh_metasfresh/pr_6564.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MTg3Mg==	do you have an index on S_IssueLabel.S_Issue_ID ?	Code	No	FALSE												
metasfresh/metasfresh	7053	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwODY2Mg==	1456	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/metasfresh_metasfresh/pr_7053.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcwODY2Mg==	consider using Optional instead of returning null.	Code	No	FALSE												
metasfresh/metasfresh	6512	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTI4MQ==	1459	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/metasfresh_metasfresh/pr_6512.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU4MTI4MQ==	pls introduce a POJO to be returned instead of I_CM_Chat	Code	No	FALSE												
micronaut-projects/micronaut-core	2956	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4MDY2NA==	1469	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_2956.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4MDY2NA==	Argument should have @Nullable	Other	No	FALSE												
micronaut-projects/micronaut-core	3339	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNjg2NA==	1467	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/micronaut-projects_micronaut-core/pr_3339.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQxNjg2NA==	since this class is internal maybe make it final	Code	No	FALSE												
microsoft/mssql-jdbc	1328	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2MDkzNw==	1473	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1328.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM2MDkzNw==	Is this really necessary, the Oracle Java docs say rewind() is inherited from Buffer since Java SE7.	Code	No	FALSE												
microsoft/mssql-jdbc	1312	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1NzU2NA==	1474	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1312.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1NzU2NA==	Can we add a comment here that explains this regex briefly?	Comments	Yes	FALSE												
microsoft/mssql-jdbc	1413	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3OTMyOA==	1471	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1413.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3OTMyOA==	No need to deprecate this constructor anymore, because authenticationCallback works with MSAL now.	Other	Yes	TRUE	Incomplete or inadequate code documentation	Annotation	Accepted	Add or remove Deprecated annotation to update the method status	Yes		No	Yes	NONE	NONE	NONE	NONE
microsoft/mssql-jdbc	1306	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNDUyMw==	1475	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/microsoft_mssql-jdbc/pr_1306.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNDUyMw==	is this a valid test when it's not AzureDB? If so, add xAzureSQLDB tag instead?	Code	No	FALSE												
minecraftforge/minecraftforge	7483	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NTc4NQ==	1481	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minecraftforge_minecraftforge/pr_7483.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NTc4NQ==	I would suggest keeping this an EnumMap, so we keep the enum-optimized behaviour. The map is not visible outside of this class anyway, so we don't have to worry about people misusing it.	Code	No	FALSE												
minio/minio-java	918	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MzQyOA==	1493	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/minio_minio-java/pr_918.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA1MzQyOA==	Does this mean invalid bucket names will raise different exceptions for bucketName and srcBucketName ?	Code	No	FALSE												
movingblocks/terasology	4253	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ5ODY5NQ==	1495	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/movingblocks_terasology/pr_4253.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ5ODY5NQ==	Could you please add an analogous SUNSET_OFFSET, please?	Code	No	FALSE												
nationalsecurityagency/datawave	1014	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjY0OA==	1507	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nationalsecurityagency_datawave/pr_1014.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MjY0OA==	Try-with-resources instead?	Code	Yes	FALSE												
neo4j-contrib/neo4j-apoc-procedures	1389	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2MDMzNg==	1520	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/neo4j-contrib_neo4j-apoc-procedures/pr_1389.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2MDMzNg==	Prior to final approval, Shash please go through the types and ensure that we haven't missed anything there, or ideally make sure unit test coverage covers every possible type. Some type documentation (or the entry point to it) is here: https://neo4j.com/docs/cypher-manual/current/functions/temporal/ The original code was written under 3.5.   I'm about 80% sure that in Neo4j 4.0 we didn't introduce any new types, but we need to make sure we have total coverage.   For each type we also need to cover the corresponding array type. If we miss one, then the code will report the type as string.  The driver will similarly coerce it to string, and we'll end up with a bug report so we need to be sure we're 100% complete.  If you've done the review or are satisfied the unit tests cover this, then just flag a follow-up comment saying you looked into it and this point is good to go.	Code	No	FALSE												
netflix/conductor	1823	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxOTM2MQ==	1523	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1823.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxOTM2MQ==	@alex-fu Since we are diverging the DECISION block by so many lines of code. We can define a separate switch case for DO_WHILE task. And move common code to one function.	Code	Yes	TRUE	Complex, long, or inadequate logic	Conditional	Accepted in text but not change in code									
netflix/conductor	1579	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1ODA3Ng==	1528	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1579.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1ODA3Ng==	It'd be nice to have a metric for this too, which helps in tracing poll failures due to db operations and find out before the clients notice poll delays.	Code	No	FALSE												
netflix/conductor	1830	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNTc0NQ==	1521	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1830.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNTc0NQ==	Does this also account for partial failures?	Comments	No	FALSE												
netflix/conductor	1632	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzMDg0NQ==	1526	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1632.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzMDg0NQ==	semaphoreUtil.completeProcessing(); this can be part of finally block.	Code	No	FALSE												
netflix/conductor	1676	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4ODU2MQ==	1524	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1676.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM4ODU2MQ==	Please move this binding to the ServerModule instead.	Code	No	FALSE												
netflix/conductor	1608	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5NDEzOA==	1527	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1608.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5NDEzOA==	In the case of sub workflows, would it be better to terminate the sub workflow instead? The reason could be that the parent workflow was terminated using TERMINATE task.	Javadoc	No	FALSE												
netflix/conductor	1830	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNTc5Nw==	1522	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1830.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMyNTc5Nw==	Please add license header	Other	No	FALSE												
netflix/conductor	1648	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3NTA4OA==	1525	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_conductor/pr_1648.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3NTA4OA==	Please remove session = embeddedCassandra.getSession(); from the setUp block.	Code	No	FALSE												
netflix/titus-control-plane	889	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2MDYwOQ==	1530	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_titus-control-plane/pr_889.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2MDYwOQ==	This check is made a few times. Might be easier to check it in the very beginning (line 111), and do not repeat it later.	Code	Yes	FALSE												
netflix/titus-control-plane	953	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNzI0MQ==	1529	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_titus-control-plane/pr_953.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUxNzI0MQ==	Should we track how frequently this may be happening using a Counter?	Code	No	FALSE												
netflix/titus-control-plane	800	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NjIzMA==	1531	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_titus-control-plane/pr_800.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NjIzMA==	this looks incorrectly indented	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Not Accepted									
netflix/titus-control-plane	783	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MDQzMw==	1532	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_titus-control-plane/pr_783.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg0MDQzMw==	where are these taints defined?	Code	No	FALSE												
netflix/titus-control-plane	740	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4ODEzNg==	1533	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netflix_titus-control-plane/pr_740.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjY4ODEzNg==	Do we validate somewhere that the user hasn't set pageSize to 0?	Code	No	FALSE												
netty/netty	10778	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ0NjY5Mg==	1534	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_10778.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ0NjY5Mg==	This a breaking change as someone may have override this method with throws in the signature	Code	No	FALSE												
netty/netty	10331	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE5Nzc2Nw==	1536	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_10331.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE5Nzc2Nw==	Consider clarifying the current and expected values in the exception message.	Code	No	FALSE												
netty/netty	10174	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3OTkyOQ==	1539	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_10174.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3OTkyOQ==	@franz1981 guess these methods will be inlined?	Code	Discard	FALSE												
netty/netty	10267	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzOTkyMA==	1537	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_10267.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEzOTkyMA==	<3 ascii art :)	Code	No	FALSE												
netty/netty	10714	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1NjM1OQ==	1535	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_10714.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc1NjM1OQ==	Dropped packets need to be released	Code	No	FALSE												
netty/netty	9924	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNDk2MQ==	1540	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_9924.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTgyNDk2MQ==	nit: protected (as this is an abstract class)	Code	No	FALSE												
netty/netty	10232	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTA3MQ==	1538	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/netty_netty/pr_10232.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTA3MQ==	Remove trailing whitespaces.	Code	Yes	TRUE	Inconsistent or disrupted formatting	Method	Accepted	Add or remove horizontal spacing	Yes		Yes		NONE	NONE	NONE	SingleSpaceSeparator
nextcloud/android	5122	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MzM5Ng==	1544	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nextcloud_android/pr_5122.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MzM5Ng==	This part was moved in this commit: d7d1c47 If you loot at it, you'll see that this code was previously in a wrong onCreate(@Nullable Bundle savedInstanceState, @Nullable PersistableBundle persistentState) method. It was a bug that I introduced while refactoring Account-related code in BaseActivity, caused by IDE autocompletion - I simply typed wrong method signature while overriding onCreate. We didn't notice this as it works by accident simply becuase numerious calls to setAccount in derived activities.	Code	No	FALSE												
nextcloud/android	6121	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ==	1543	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nextcloud_android/pr_6121.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5ODA3NQ==	The PR description says that tests are not needed. We can extract this part and put it under test.	Code	No	FALSE												
nextcloud/android	6344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQzNjY2MQ==	1542	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nextcloud_android/pr_6344.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQzNjY2MQ==	Than we should also rename the activity 😃	Code	Yes	FALSE												
nextcloud/android	7639	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc1NjQ2OA==	1541	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nextcloud_android/pr_7639.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTc1NjQ2OA==	Same here. I would have thought that AS is doing this correct automatically?	Code	Yes	FALSE												
nordic-institute/x-road	468	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNTk3Nw==	1546	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nordic-institute_x-road/pr_468.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNTk3Nw==	Hmm, is this a misleading log entry, will it look like an error for system admins, with the stacktrace? Could it maybe be reworded?	String value	Yes	FALSE												
nordic-institute/x-road	527	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5Njk3MA==	1545	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nordic-institute_x-road/pr_527.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE5Njk3MA==	Does the lazy inject actually work since AuditEventLoggingFacade is not a lazy bean?	Other	No	FALSE												
nordic-institute/x-road	415	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzNzk5Nw==	1547	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nordic-institute_x-road/pr_415.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzNzk5Nw==	old UI creates temp file in SystemProperties::getTempFilesPath. Should this do the same? (io_utils.rb#temp_file)	Code	No	FALSE												
nordic-institute/x-road	404	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NTUzMQ==	1548	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nordic-institute_x-road/pr_404.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI2NTUzMQ==	I'm not sure if this sort of validation should actually exist in the repository layer which should be all about transactions and CRUD operations (also documented here). The isFilenameValid method would probably be a better fit in an already existing utility class such as FormatUtils or in the BackupService class.	Code	No	FALSE												
nuxeo/nuxeo	4293	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczMzI5Mg==	1553	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4293.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczMzI5Mg==	To remove?	Code	Yes	FALSE												
nuxeo/nuxeo	3667	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNTg3OA==	1560	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3667.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYwNTg3OA==	Remove extra <p>	Javadoc	Yes	FALSE												
nuxeo/nuxeo	3667	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2NDEyNQ==	1561	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3667.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2NDEyNQ==	Could be better to have the full clientSession.newRequest()...execute() to avoid having loadCsv variable.	Code	Yes	TRUE	Unnecessary Code	Variable	Accepted	Inline temporary	Yes		Yes		NONE	NONE	NONE	NONE
nuxeo/nuxeo	4500	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMDkyNA==	1552	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4500.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMyMDkyNA==	You're using tabs in this file, can you convert them to spaces?	Code	Yes	FALSE												
nuxeo/nuxeo	4545	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NDQ4Nw==	1549	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4545.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NDQ4Nw==	400 -> HttpServletResponse .SC_BAD_REQUEST	Code	Yes	FALSE												
nuxeo/nuxeo	3695	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NTUyNA==	1559	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3695.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ4NTUyNA==	Not sure it's needed... the method signature/arguments are rather straightforward.	Javadoc	Yes	FALSE												
nuxeo/nuxeo	4539	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0OTU4MA==	1550	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4539.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0OTU4MA==	ConcurrentMap -> Map	Code	No	FALSE												
nuxeo/nuxeo	4539	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNDI2OQ==	1551	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4539.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIxNDI2OQ==	Ah good point, the concurrent maps disallow null keys...	Code	No	FALSE												
nuxeo/nuxeo	3884	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyOTI5OQ==	1558	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3884.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjEyOTI5OQ==	Suggested change                                                                                                    protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> foundedDocs)                                                    protected void checkMoveContent(List<DocumentModel> expectedDocs, List<DocumentModel> actualDocs)                                 ?	Code	Yes	FALSE												
nuxeo/nuxeo	4241	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMTE2MA==	1555	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4241.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMTE2MA==	What do you think about merging the two try/catch? Something like below:             try {                 Class<?> type = Class.forName(opc.type);                 service.putOperation(type, opc.replace, contributor.getName().toString(), widgetDefinitionList);             } catch (ClassNotFoundException e) {                 throw new IllegalArgumentException("Invalid operation class '" + opc.type + "': class not found.");             } catch (OperationException e) {                 throw new RuntimeException(e);             }	Code	Yes	FALSE												
nuxeo/nuxeo	3666	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MTU5Mg==	1562	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3666.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MTU5Mg==	assertEquals(Boolean.TRUE, ...)	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace method calling chain by existing API	Yes		Yes		NONE	SimplifiableTestAssertion	JUnit assertTrue/assertFalse should be simplified to the corresponding dedicated assertion	NONE
nuxeo/nuxeo	3666	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyODI3MQ==	1563	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3666.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyODI3MQ==	not strictly needed	Code	No	FALSE												
nuxeo/nuxeo	3918	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzOTQ3MQ==	1556	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3918.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzOTQ3MQ==	What's the goal of this new alias? Could it be described in the upgrade notes of the ticket?	Code	No	FALSE												
nuxeo/nuxeo	3908	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk1MDU1Nw==	1557	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_3908.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk1MDU1Nw==	You should use try-with-resources: try (OutputStream out = new FileOutputStream(tmp)) {     ds.exportDocumentation(getContext().getCoreSession(), out);     out.flush(); }	Code	No	FALSE												
nuxeo/nuxeo	4249	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxNjA3NQ==	1554	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/nuxeo_nuxeo/pr_4249.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxNjA3NQ==	Should be in the cleanup/format commit.	Code	No	FALSE												
odpi/egeria	3707	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MDI5NQ==	1564	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_3707.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3MDI5NQ==	Ditto	Code	Discard	FALSE												
odpi/egeria	2592	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDg3OQ==	1570	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_2592.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDg3OQ==	Please revert change - original text is correct	String value	No	FALSE												
odpi/egeria	3366	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1OTI2Nw==	1567	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_3366.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1OTI2Nw==	Could we get cat3 and validate that it has a parent of cat4 as well please.	Code	No	FALSE												
odpi/egeria	3690	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk3OTE2Mg==	1566	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_3690.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk3OTE2Mg==	Could you make it like this. I would you it like this.     public SubjectAreaOMASAPIResponse<Term> createMultipleTermsInAGlossary(String serverName, String userId, String guid, Term[] terms) {         final String methodName = "createMultipleTermsInAGlossary";         RESTCallToken token = restCallLogger.logRESTCall(serverName, userId, methodName);         SubjectAreaOMASAPIResponse<Term> response = new SubjectAreaOMASAPIResponse<>();         AuditLog auditLog = null;                  try {             SubjectAreaNodeClients clients = instanceHandler.getSubjectAreaNodeClients(serverName, userId, methodName);             auditLog = instanceHandler.getAuditLog(userId, serverName, methodName);             for (Term term : terms) {                 GlossarySummary glossarySummary = new GlossarySummary();                 glossarySummary.setGuid(guid);                 term.setGlossary(glossarySummary);                 Term createdTerm = clients.terms().create(userId, term);                 response.addResult(createdTerm);             }         } catch (Throwable error) {             response = getResponseForError(error, auditLog, className, methodName);         }         restCallLogger.logRESTCallReturn(token, response.toString());         return response;     }	Code	No	FALSE												
odpi/egeria	3143	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5Mzc2NQ==	1569	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_3143.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5Mzc2NQ==	Where is this relevant to a Digital service?	Javadoc	No	FALSE												
odpi/egeria	2592	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDE4OQ==	1571	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_2592.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEzNDE4OQ==	These changes are invalid - the description should be reverted to original values.	String value	No	FALSE												
odpi/egeria	3707	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDA5MQ==	1565	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_3707.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDA5MQ==	SecurityTagsProperties	Javadoc	Yes	TRUE	Incomplete or inadequate code documentation	Class	Accepted	Change text in existing JavaDoc to fix the name of a code element to which it refers	Yes		No	No	NONE	NONE	NONE	NONE
odpi/egeria	3366	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2MDI4Nw==	1568	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/odpi_egeria/pr_3366.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2MDI4Nw==	should be CategoryHierarchyLink. formatting does not look right.	Javadoc	Yes	FALSE												
onesignal/onesignal-android-sdk	1156	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMjIwOQ==	1573	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1156.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzkwMjIwOQ==	This is passing isBackgroundLogic but the param name for processJobForDisplay is callForegroundLogic. Seems like we are flipping the logic here when we should not? Or just one of the names wrong?	Code	Yes	FALSE												
onesignal/onesignal-android-sdk	1009	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5MDk4OA==	1576	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1009.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI5MDk4OA==	Maybe we should move this if check into a separate method to clean up this long if-statement, something like below? if (shouldShowLocationPermissionSettings)     showLocationPermissionSettings();  OR private void attemptToShowLocationPermissionSettings() {     if (fallbackToSettings              && neverAskAgainClicked              && !ActivityCompat.shouldShowRequestPermissionRationale(PermissionsActivity.this, LocationGMS.requestPermission))         showLocationPermissionSettings(); }	Code	Yes	FALSE												
onesignal/onesignal-android-sdk	1091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE2MDgwMw==	1574	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1091.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODE2MDgwMw==	remove extra enters	Code	Yes	FALSE												
onesignal/onesignal-android-sdk	1007	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTM0Mg==	1577	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1007.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTM0Mg==	ONE_WEEK_IN_SECONDS should be something more descriptive to what is it used. One week should be a comment instead.	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to express the meaning or type of an element	Yes		No	No	NONE	NONE	NONE	NONE
onesignal/onesignal-android-sdk	1063	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5ODU0OA==	1575	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1063.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5ODU0OA==	Remove empty line	Code	Yes	FALSE												
onesignal/onesignal-android-sdk	1239	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwODI2Nw==	1572	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1239.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwODI2Nw==	Looks like this is a TODO yet?	Code	No	FALSE												
onesignal/onesignal-android-sdk	967	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMDg2NQ==	1579	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_967.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMDg2NQ==	Can you comment the cases being handled here, lots of if and else that might not be intuitive to someone who hasn't seen the codebase	Comments	Yes	FALSE												
onesignal/onesignal-android-sdk	1005	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNDMxNg==	1578	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/onesignal_onesignal-android-sdk/pr_1005.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgwNDMxNg==	Below you are doing a lot of Request asserts We should continuously update RestClientAsserts.java whenever we find new endpoints for testing Ask me for help or check the current implementation and try to mimic it for the measure_sources endpoint	Code	No	FALSE												
open-telemetry/opentelemetry-java	1863	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwMjg1NA==	1581	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java/pr_1863.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDAwMjg1NA==	Let's document what this fake span does, it's job seems to be to record events and only that.	Javadoc	Yes	FALSE												
open-telemetry/opentelemetry-java	1913	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2ODgxMQ==	1580	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java/pr_1913.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg2ODgxMQ==	Let's remove the scope - just to make sure to test what happens when makeCurrent hasn't ever been called	Code	No	FALSE												
open-telemetry/opentelemetry-java	1300	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNjgxMA==	1582	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java/pr_1300.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNjgxMA==	Please add an issue for this.	Comments	No	FALSE												
open-telemetry/opentelemetry-java	1038	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NTEzNw==	1584	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java/pr_1038.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NTEzNw==	Suggested change                                                                                                  private static final String JAEGER_IP = "http://localhost";                                                  private static final String JAEGER_URL = "http://localhost";	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
open-telemetry/opentelemetry-java	1255	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg1OTQ5Ng==	1583	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java/pr_1255.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg1OTQ5Ng==	Please, keep the AutoValue so we don't need to write and maintain trivial code	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	902	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MjgyNQ==	1592	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_902.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1MjgyNQ==	WithSpan now supports kind attribute as well for setting span kind. Do you want to support this as well?	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1418	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0NzM1Mg==	1587	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1418.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0NzM1Mg==	Why are you doing it in startScope and not in startSpan? Or even by overriding some getSpanName method?	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	651	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MjQ3OA==	1594	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_651.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2MjQ3OA==	Can you modify incoming parameter interceptors and add a new one there? I don't know this API, so don't have any hard preferences :)	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	681	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgxNDE5Mg==	1593	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_681.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgxNDE5Mg==	conditional not needed(?)                         Suggested change                                                                                                    if (scope != null) {                                                      scope.close();                                                    }                                                    scope.close();	Code	Yes	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1843	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0MTQ1Nw==	1585	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1843.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg0MTQ1Nw==	took me a few min to understand this, worth a comment                         Suggested change                                                                                                      jobFactory.setJobExecutionListeners(new Object[] {});                                                      // this will trigger the advice below, which will make sure that the tracing listener is registered                                                      // even if the application never calls setJobExecutionListeners() directly                                                      jobFactory.setJobExecutionListeners(new Object[] {});	Comments	Yes	FALSE												
open-telemetry/opentelemetry-java-instrumentation	640	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyMTkzMg==	1595	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_640.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyMTkzMg==	So for now let's make only this class public and the rest package private	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1040	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1NjYzOA==	1591	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1040.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjc1NjYzOA==	Suggested change                                                                                                }                                                                                                  private HttpUrlUtils() {}                                                }	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1309	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MDI2NA==	1590	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1309.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MDI2NA==	can this be part of the other (future) module that only depends on JVM-provided metrics?	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1405	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0MzUxOQ==	1588	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1405.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc0MzUxOQ==	Suggested change                                                                                                      int end = 0;                                                      int lastEnd = 0;	Code	Yes	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1397	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDIzMw==	1589	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1397.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDE4MDIzMw==	db.name is same as db.statement?	Code	No	FALSE												
open-telemetry/opentelemetry-java-instrumentation	1509	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0OTQxNA==	1586	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/open-telemetry_opentelemetry-java-instrumentation/pr_1509.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0OTQxNA==	In all other cases you have commandNormalizer. Please make the same here as well	Code	Yes	FALSE												
openapitools/openapi-generator	5184	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==	1596	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openapitools_openapi-generator/pr_5184.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==	Suggested change                                                                                                                entry.getKey() + "')");                                 Wrapped line isn't need if prev suggestion is accepted.	Other	Yes	TRUE	Inconsistent or disrupted formatting	Literal	Not Accepted									
opencast/opencast	1607	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjQzOQ==	1599	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opencast_opencast/pr_1607.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NjQzOQ==	Is the input guaranteed to be ISO_8859_1?	Code	No	FALSE												
opencast/opencast	1607	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5Njk0OQ==	1600	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opencast_opencast/pr_1607.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5Njk0OQ==	What's the rule for assigning the global admin role here?	Code	No	FALSE												
opencast/opencast	1363	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5MzM5MQ==	1601	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opencast_opencast/pr_1363.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5MzM5MQ==	You are using GSON anyway and could use it for serialization here which should be much simpler – basically just: String jsonString = gson.toJson(form);	Code	Yes	TRUE	Unnecessary Code	Method	Accepted in text but not change in code									
opencast/opencast	1877	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NzY4Ng==	1597	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opencast_opencast/pr_1877.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NzY4Ng==	Better use MediaPackageElementFlavor.parseFlavor(flavorStr); You can then access the flavor and subflavor via the flavor object's methods. And it assures that it's a valid flavor or directly use it since you want a flavor object down below anyway.	Code	No	FALSE												
opencast/opencast	1800	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5NDgwMA==	1598	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opencast_opencast/pr_1800.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI5NDgwMA==	tx can be null at this point.	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	72	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1NjUyNg==	1609	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_72.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1NjUyNg==	Instead of creating a new AnomalyDetector, why don't we have a setter method for update time and reset anomalyDetector's last update time?	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NTkxNw==	1606	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ1NTkxNw==	in other cases, such as when feature is present but actions fail due to other reasons than no model, will model training process begin?	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	164	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2MDIzMA==	1607	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_164.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ2MDIzMA==	if rcf has 256 updates, updates on this field are no longer necessary so unnecessary document updates can be skipped. it'd be an unnecessary workload for most data points.	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	182	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2MjM4MA==	1604	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_182.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2MjM4MA==	external might be confusing as in the CI we are actually using localhost. Maybe we can just say "cluster url should be provided for security enabled testing"	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect string literal	Yes		Yes		NONE	NONE	NONE	NONE
opendistro-for-elasticsearch/anomaly-detection	169	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjc3Nw==	1605	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_169.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjc3Nw==	this is ok for now. but i think the number of allowed retries should be settable per exception object, i.e. the endrun exception contains a field for the number of retries, which can be specific to detector (interval), exception type (limit exceeded, other endrun), or root cause. Stop now being true would just be a special case that number of retries being 0.	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	313	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg==	1602	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_313.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg==	To ensure we have a clean state before each integ test, can you install certificate for the super user as https://github.com/opendistro-for-elasticsearch/alerting/blob/master/alerting/src/test/kotlin/com/amazon/opendistroforelasticsearch/alerting/ODFERestTestCase.kt#L103-L124 ?	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	274	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3NDQxNQ==	1603	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_274.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA3NDQxNQ==	how about the false result? do we need handle it?	Code	No	FALSE												
opendistro-for-elasticsearch/anomaly-detection	84	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyNjAxMA==	1608	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_anomaly-detection/pr_84.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyNjAxMA==	How about we change to "Must set at least one profile type" to avoid confusion between empty profile types and wrong profile types which we don't support?	String value	Yes	FALSE												
opendistro-for-elasticsearch/k-nn	199	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0NjMyNg==	1611	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_k-nn/pr_199.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0NjMyNg==	Why was KNNVectorField removed?	Code	No	FALSE												
opendistro-for-elasticsearch/k-nn	285	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQ4MTMwOQ==	1610	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_k-nn/pr_285.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQ4MTMwOQ==	How about we move if else check inside the AccessController.doPrivileged. Something like below example                 AccessController.doPrivileged(                         new PrivilegedAction<Void>() {                             public Void run() {                                 if(knnindex)                                       KNNIndex.saveIndex(pair.docs, pair.vectors, tempIndexPath, algoParams, spaceType);                                 if(faissindex)                                      KNNFIndex.saveIndex(pair.docs, pair.vectors, tempIndexPath, algoParams, spaceType);                                      return null;                             }       ```	Code	Yes	FALSE												
opendistro-for-elasticsearch/performance-analyzer-rca	325	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NjMxNg==	1612	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_performance-analyzer-rca/pr_325.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE4NjMxNg==	The RCAController thread updates this but it is read by the SchedulerTask threads. We should make this volatile	Code	No	FALSE												
opendistro-for-elasticsearch/performance-analyzer-rca	108	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NDgzMQ==	1613	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_performance-analyzer-rca/pr_108.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1NDgzMQ==	We should just block if the queue is full. We should emit metrics on errors and these metrics need to be accurate. The component will be dead if it hits an exception. Should we restart the process if we run into exceptions?	Code	No	FALSE												
opendistro-for-elasticsearch/sql	429	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MDMyMg==	1620	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_429.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM0MDMyMg==	Why not just remove it from grammar?	Code	No	FALSE												
opendistro-for-elasticsearch/sql	750	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyODk2MA==	1615	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_750.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyODk2MA==	considering merge whith exprSubstrStart	Code	No	FALSE												
opendistro-for-elasticsearch/sql	390	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMjM0OQ==	1622	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_390.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMjM0OQ==	Add type in error message?	String value	Yes	FALSE												
opendistro-for-elasticsearch/sql	362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MDU1NQ==	1624	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1MDU1NQ==	remove this?	Code	No	FALSE												
opendistro-for-elasticsearch/sql	694	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2NDg4NA==	1616	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_694.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2NDg4NA==	suggest to use exprValue.string() in future to get rid of the static getStringValue method.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace call to static method by instance method call	Yes		Yes		NONE	NONE	NONE	NONE
opendistro-for-elasticsearch/sql	400	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNDM3MA==	1621	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_400.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMwNDM3MA==	why call transientSettings two times? ref: line 86.	Code	No	FALSE												
opendistro-for-elasticsearch/sql	367	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY0NTEyNw==	1623	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_367.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY0NTEyNw==	remove unused code?	Code	Yes	TRUE	Unnecessary Code	Method	Accepted	Remove commented out code statements	Yes		Yes		NONE	NONE	Sections of code should not be commented out	NONE
opendistro-for-elasticsearch/sql	440	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MTg4Mg==	1618	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_440.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MTg4Mg==	return fieldArgs?	Code	No	FALSE												
opendistro-for-elasticsearch/sql	440	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MzQxNQ==	1619	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_440.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3MzQxNQ==	Please make them final if not optional and prefer emptyList over null.	Code	No	FALSE												
opendistro-for-elasticsearch/sql	851	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODA5Mg==	1614	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_851.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQwODA5Mg==	This rule may be effect by limit push down. e.g. agg -> limit -> relation. with current rules,  agg -> IndexScan IndexAggScan, which is unexpected.	Code	No	FALSE												
opendistro-for-elasticsearch/sql	472	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMDEzNw==	1617	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opendistro-for-elasticsearch_sql/pr_472.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMDEzNw==	The indent is changed to 2 spaces in this file and some other files?	Code	Yes	TRUE	Inconsistent or disrupted formatting	Class	Not Accepted									
openequella/openequella	2561	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE2MTEwNA==	1627	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_2561.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE2MTEwNA==	Hi Sam, I have two questions here.   Do we need to drop column 'errored_when_indexing'  in any situation?  If yes, I think we should use 'getDropModifySql'. If no we can just return null.   I am not quite sure why use getAddNotNullSQL. If this column needs a not null constraint, you can try @Column(name = "errored_when_indexing", nullable = false) in  attachment.java.	Code	No	FALSE												
openequella/openequella	1631	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4NzQzMw==	1631	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_1631.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4NzQzMw==	I wonder if it'd be better to rely on the enumerate methods provided by GenericInstitutionalDao?	Code	No	FALSE												
openequella/openequella	1631	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4OTQ1Mg==	1632	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_1631.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY4OTQ1Mg==	I'm surprised this also is provided by one of the base classes, but looks not. However might want to go with the simple getById or findById.	Code	Yes	FALSE												
openequella/openequella	2566	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMyOTQzMg==	1626	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_2566.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMyOTQzMg==	So if it returns non-zero, it won't throw an exception (I gather). So the catch block wont be triggered and nothing will be logged (or noted).	Code	No	FALSE												
openequella/openequella	2344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQwMjU5NQ==	1629	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_2344.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQwMjU5NQ==	is this still pending review?	Code	No	FALSE												
openequella/openequella	2524	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyNzI2Mw==	1628	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_2524.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYyNzI2Mw==	I am a bit surprised that this annotation works. I used to do this for the search2 test which also extends AbstractRestApiTest but it always runs against rest.	Code	No	FALSE												
openequella/openequella	2582	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1NTQ4Mg==	1625	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_2582.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1NTQ4Mg==	Be good to do as JavaDoc.	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Transform a code comment into JavaDoc documentation	Yes		Yes		NONE	CommentRequired	NONE	MissingJavadocMethod
openequella/openequella	2344	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2OTk2MA==	1630	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openequella_openequella/pr_2344.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2OTk2MA==	Not sure I'm following this new comment. I guess I'm confused that these aren't going through JPA / Hibernate (how are they used), but also that no other changes are below so is this comment still needed? Feels like the comment might be a bit of a fragment of a bigger situation. 🤔 There's several instances of this comment, so I'm rather interested to understand.	Comments	Yes	FALSE												
openhab/openhab-addons	9075	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDU5NjEzOA==	1634	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_9075.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDU5NjEzOA==	Suggested change                                                                                                                errorMsg = "Reading meter did not succeeed: " + response.getReason();                                                                errorMsg = "Reading meter did not succeed: " + response.getReason();	String value	Yes	FALSE												
openhab/openhab-addons	9259	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk4ODE3Mw==	1633	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_9259.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk4ODE3Mw==	Unchecked exceptions are handled by the framework. So, this could be removed.	Code	No	FALSE												
openhab/openhab-addons	6785	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE3NTkwNg==	1640	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_6785.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE3NTkwNg==	Can you make these final?	Code	No	FALSE												
openhab/openhab-addons	8576	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzg3ODg5MQ==	1635	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_8576.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Nzg3ODg5MQ==	What is the reason for requesting all vehicles from the API? Can't you access the bridge's Things?	Comments	Yes	FALSE												
openhab/openhab-addons	7006	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTI5OQ==	1639	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_7006.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzOTI5OQ==	Did you remove the stacktrace by intention?	Other	Yes	FALSE												
openhab/openhab-addons	7224	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMDQ5MQ==	1638	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_7224.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwMDQ5MQ==	so the last three bytes of the message are 0?	Code	No	FALSE												
openhab/openhab-addons	6742	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MTYwMg==	1641	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_6742.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1MTYwMg==	Shouldn't this change the thing status to OFFLINE?	Other	Yes	FALSE												
openhab/openhab-addons	7767	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5NDg3OA==	1637	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_7767.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5NDg3OA==	Suggested change                                                                                                    @Nullable                                                    @SerializedName("CORF")                                                    private String degreesCorF;                                                    @SerializedName("CORF")                                                    private @Nullable String degreesCorF;	Code	Yes	FALSE												
openhab/openhab-addons	8231	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTc1Nw==	1636	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-addons/pr_8231.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTc1Nw==	What type of exception do you expect here? Can you specify the concrete type and handle it appropriately?	Code	No	FALSE												
openhab/openhab-core	1412	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNDI4MA==	1646	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-core/pr_1412.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTczNDI4MA==	Wow ... this looks crazy ...	Code	No	FALSE												
openhab/openhab-core	1861	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ1NjQzMA==	1642	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-core/pr_1861.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ1NjQzMA==	Suggested change                                                                                                    @Operation(operationId = "aproveInboxItemById", summary = "Approves the discovery result by adding the thing to the registry.", responses = {                                                    @Operation(operationId = "approveInboxItemById", summary = "Approves the discovery result by adding the thing to the registry.", responses = {	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Fix an incorrect value	Yes		Yes		NONE	NONE	NONE	NONE
openhab/openhab-core	1680	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYxNjgxMw==	1644	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-core/pr_1680.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYxNjgxMw==	Suggested change                                                                                                                .map(l -> mapFunction.apply(l)) //                                                                .map(mapFunction) //	Code	Yes	FALSE												
openhab/openhab-core	1407	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0ODAyMg==	1647	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-core/pr_1407.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg0ODAyMg==	Something beyond scope of this PR but passing a @Nullable UIComponent component here seems to be wrong. Could be captured by calling methods.	Code	No	FALSE												
openhab/openhab-core	1487	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0NTQ4NQ==	1645	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-core/pr_1487.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0NTQ4NQ==	Suggested change                                                                                                    private @Mock UsbSerialScanner usbSerialScanner;                                                    private @Mock UsbSerialScanner usbSerialScannerMock;	Code	Yes	FALSE												
openhab/openhab-core	1837	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA1MDc2MA==	1643	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openhab_openhab-core/pr_1837.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA1MDc2MA==	Is it safe to set that here? Couldn't the script engine have already set up some initial context? I'm especially concerned about the DSLScriptEngine, where I recently had a lot of trouble getting the handling of the context stable... Would be good if you could test that there's no issue by this on DSL rules.	Code	No	FALSE												
openliberty/open-liberty	15196	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMjkwMQ==	1648	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_15196.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMjkwMQ==	Should be fixed in com.ibm.ws.jaxws.clientcontainer, com.ibm.ws.jaxrs.2.0.common and com.ibm.ws.org.apache.cxf.cxf.rt.frontend.jaxrs.3.2 components as well?	Code	No	FALSE												
openliberty/open-liberty	12711	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5OTQwMw==	1650	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_12711.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU5OTQwMw==	I don't think these fields are used... are they?  it scared me for a min to see fields in the NAMES_JSON without the IBM_ prefix (other than type / host).  For the fields that aren't used, I wonder if we should put in a dummy value to avoid them easily slipping into the code without being noticed.	Code	No	FALSE												
openliberty/open-liberty	12119	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1Mzc0Ng==	1651	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_12119.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ1Mzc0Ng==	Should check the historical file.	Code	No	FALSE												
openliberty/open-liberty	11328	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzA5NQ==	1655	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_11328.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzA5NQ==	Please add a comment	Comments	Yes	FALSE												
openliberty/open-liberty	12004	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyOTc0Mw==	1653	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_12004.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyOTc0Mw==	Suggested change                                                                                                            if (this.toString("UTF-8").contains(eol)) {                                                            if (this.toString("UTF-8").contains(System.lineSeparator())) {	Code	Yes	TRUE	Unnecessary Code	Attribute	Accepted	Inline temporary	Yes		Yes		NONE	NONE	NONE	NONE
openliberty/open-liberty	10969	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM4ODA1Ng==	1656	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_10969.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM4ODA1Ng==	We're just checking that the bundle is not uninstalled, can be correct this comment to say that? The bundle must not be uninstalled in order to write the file or something like that. If this isn't actually the case let me know and we can discuss.	Comments	Yes	FALSE												
openliberty/open-liberty	11560	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0NTExOA==	1654	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_11560.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0NTExOA==	no need for the comment here or on line 272, since there is already a comment on line 271.	Comments	Yes	FALSE												
openliberty/open-liberty	10299	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwNTY2MA==	1657	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_10299.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwNTY2MA==	Should pre-populating the row just be part of initTable?	Code	No	FALSE												
openliberty/open-liberty	14445	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5ODI0Nw==	1649	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_14445.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY5ODI0Nw==	Are all of these not ready to be run yet?	Code	No	FALSE												
openliberty/open-liberty	12119	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU0NzgwNA==	1652	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openliberty_open-liberty/pr_12119.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU0NzgwNA==	I am not really following this test... I would have expected:  remove read / write permission start server check file does NOT exist, new cert written stop server add write permission start server check file exists, new cert (seems we should replace on startup if we can't verify old URL) stop server add read permission, swap CAs start server check that file exists, was updated, new cert (since new CA stop server	Code	No	FALSE												
openmrs/openmrs-core	3606	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3NTIxOA==	1658	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3606.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM3NTIxOA==	Did you need to touch that test?	Code	No	FALSE												
openmrs/openmrs-core	3184	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxODkzNQ==	1667	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3184.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxODkzNQ==	I would not silently ignore one passing a null parameter. In other words, i would remove the if check and assume that the condition is not null. If it turns out to be null, better for the caller to automatically get a NullPointerException than chewing it quietly.  @dkayiwa this was by design that the method addCondition(Condition) is null safe. I was simply following the behaviours  portrayed by existing addXxxx(Xxxx) methods in the codebase. An example is addObs(Observation)	Code	No	FALSE												
openmrs/openmrs-core	3279	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY1OTQ1OQ==	1661	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3279.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY1OTQ1OQ==	please @teleivo  this classs is failling because of this two expression: messageSourceService.getMessage(messageKey)) does not return messageKey when it is call .  @Mock private MessageSourceService messageSourceService;   when(messageSourceService.getMessage(messageKey)).thenReturn(messageKey);	Code	No	FALSE												
openmrs/openmrs-core	3400	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3Mjk5MA==	1659	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3400.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3Mjk5MA==	please remove the indentation since you have removed an if block we do not need the extra tab	Code	Yes	FALSE												
openmrs/openmrs-core	3202	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMjkwNw==	1663	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3202.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMjkwNw==	should be "is the accession number to set"	Javadoc	Yes	FALSE												
openmrs/openmrs-core	3187	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNzY2OA==	1665	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3187.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNzY2OA==	Logger message should be the same . It should display the both concept id and locale . With your change it will log only the locale information	String value	Yes	FALSE												
openmrs/openmrs-core	3195	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3NzQxOQ==	1664	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3195.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE3NzQxOQ==	@ibacher   hi ian made a fix for this method,thanks	Code	No	FALSE												
openmrs/openmrs-core	3215	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODk0Mw==	1662	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3215.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODk0Mw==	Two questions:  Is this second constructor even needed, if it isn't even the recommended way to use this? If it is, it should not be copying all of this setting logic, but instead first calling the other constructor, and then setting the additional properties.	Code	Yes	FALSE												
openmrs/openmrs-core	3187	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2Mzg5Mw==	1666	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3187.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ2Mzg5Mw==	I don't see the variable forconceptId declared and initialized.	Code	No	FALSE												
openmrs/openmrs-core	3360	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI1NTI1NQ==	1660	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-core/pr_3360.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI1NTI1NQ==	Suggested change	Code	Yes	TRUE	Inconsistent or disrupted formatting	Loop	Accepted	Add or remove vertical spacing	Yes		Yes		NONE	NONE	NONE	NONE
openmrs/openmrs-module-fhir2	86	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5OTU3OQ==	1674	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_86.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5OTU3OQ==	Should we be using Patient.SP_IDENTIFIER here?	Code	No	FALSE												
openmrs/openmrs-module-fhir2	103	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY5NTUwMA==	1673	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_103.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY5NTUwMA==	In addition to DateTimeType we should also support InstantType here, which is very similar to DateTimeType, but represents a slightly more precise type.	Code	No	FALSE												
openmrs/openmrs-module-fhir2	111	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5NzcwNg==	1672	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_111.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5NzcwNg==	Is this part of the optimization? If not, You should remove it	Code	No	FALSE												
openmrs/openmrs-module-fhir2	115	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MjI2OA==	1670	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_115.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MjI2OA==	Ditto	Code	Discard	FALSE												
openmrs/openmrs-module-fhir2	115	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MjM0NA==	1671	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_115.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5MjM0NA==	Ditto	Code	Discard	FALSE												
openmrs/openmrs-module-fhir2	245	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NjA3MA==	1668	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_245.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NjA3MA==	Typo in MissMatch	Code	Yes	TRUE	Bad identifier	Method	Accepted	Modify an identifier to fix a typo	Yes		No	No	NONE	NONE	NONE	NONE
openmrs/openmrs-module-fhir2	197	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4ODg0OA==	1669	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openmrs_openmrs-module-fhir2/pr_197.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4ODg0OA==	@reagan-meant  Can we have a get() method which just gets the resources once instead of querying the database repeatedly? Please use this comment throughout the PR.	Code	No	FALSE												
opennms/opennms	3135	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxODE5OQ==	1675	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_3135.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTkxODE5OQ==	Typo	Code	No	FALSE												
opennms/opennms	2903	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE5NjM5Nw==	1680	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_2903.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE5NjM5Nw==	Same as for IpfixAdapter.	Code	No	FALSE												
opennms/opennms	2903	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNjMwNQ==	1681	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_2903.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNjMwNQ==	Why not load this as resource?	Code	No	FALSE												
opennms/opennms	3019	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NDAwMA==	1679	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_3019.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NDAwMA==	Not used, or did I miss something?	Code	Yes	FALSE												
opennms/opennms	2862	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NTMwOA==	1683	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_2862.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NTMwOA==	Minor nitpick. The null check here isn't necessary since the copyFrom() methods already handle the null case. Can update this in the other usages as well.	Code	Yes	FALSE												
opennms/opennms	3133	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3NjY5OA==	1676	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_3133.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3NjY5OA==	I'd move the "org.opennms.netmgt.remotepollerng.trackerRefreshRateLimit" part to a constant and refer to that instead.	Code	Yes	FALSE												
opennms/opennms	3100	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MDQyOA==	1677	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_3100.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MDQyOA==	Same must be done in the performEditLocations() method, since the application is also saved there.	Code	No	FALSE												
opennms/opennms	3054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NjQ4OA==	1678	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_3054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NjQ4OA==	I'd opt to re-throw here instead. If someone is calling encrypt I wouldn't expect it to silently fail and return a un-encrypted payload back.	Other	Yes	TRUE	Inadequate logging and monitoring	Try-Catch	Accepted	Remove log	Yes		Yes		NONE	NONE	NONE	NONE
opennms/opennms	2903	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxODAyNQ==	1682	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opennms_opennms/pr_2903.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxODAyNQ==	Same here, we should adopt this test.	Code	Discard	FALSE												
openrefine/openrefine	2692	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzIxMQ==	1688	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openrefine_openrefine/pr_2692.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgwMzIxMQ==	Shouldn't checks like header.name != "" use equals instead?	Code	No	FALSE												
openrefine/openrefine	2807	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExMjI5Ng==	1686	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openrefine_openrefine/pr_2807.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTExMjI5Ng==	I think the end goal is to remove any methods that are specific to a given constraint from the ConstraintFetcher interface. So I would rather mock a generic method (like getSingleConstraint) and make sure the scrunizer calls that.	Code	No	FALSE												
openrefine/openrefine	2810	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1MTY5Mw==	1684	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openrefine_openrefine/pr_2810.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk1MTY5Mw==	Consider using the same algorithmic name transformation here to avoid having to use strings and let the compiler help us with error checking.                         Suggested change                                                                                                        return (AllowedEntityTypesConstraint) nameToConstraint.get("allowed_entity_types_constraint");                                                        return (AllowedEntityTypesConstraint) nameToConstraint.get(strategy.translate(AllowedEntityTypesConstraint.class.getName());	Code	No	FALSE												
openrefine/openrefine	2810	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNzI3MA==	1685	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openrefine_openrefine/pr_2810.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgxNzI3MA==	Probably don't need the extra level of package depth here (ie remove ".v1")	Code	No	FALSE												
openrefine/openrefine	2804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg2NjYwMQ==	1687	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openrefine_openrefine/pr_2804.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg2NjYwMQ==	Perhaps it would be worth using more informative variable names here, to emphasize the role they play in the constraint definition. You should also be able to reuse the constants declared at the beginning of ConflictsWithScrutinizer.	Code	Yes	TRUE	Missing constant usage	Literal	Accepted	Use a constant from a library	Yes		Yes		NONE	NONE	NONE	NONE
opensearch-project/security	712	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYwNDQyNA==	1689	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_712.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYwNDQyNA==	final	Code	No	FALSE												
opensearch-project/security	477	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxOTk2OA==	1693	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_477.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxOTk2OA==	Suggested change                                                                                                        if (idpMetadataUrl != null) {                                                        final String idpMetadataBody = settings.get("idp.metadata_body");                                                        if (idpMetadataUrl != null) {                                                            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);	Code	No	FALSE												
opensearch-project/security	198	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5Mzk3Mw==	1696	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensearch-project_security/pr_198.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTk5Mzk3Mw==	can we rename it to resolvedRequestedIndices? (as these are indices requested from user.) It will help code more readable down into method where we added lot more complexity.	Code	Yes	FALSE												
opensrp/opensrp-client-core	614	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAwMTIzOQ==	1699	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_614.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAwMTIzOQ==	Avoid static imports whenever possible. https://docs.oracle.com/javase/7/docs/technotes/guides/language/static-import.html	Code	Yes	FALSE												
opensrp/opensrp-client-core	602	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY4NjQyNQ==	1700	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-core/pr_602.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY4NjQyNQ==	You could use  verifyZeroInteractions instead.	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Accepted	Replace method calling chain by existing API	Yes		Yes		NONE	NONE	NONE	NONE
opensrp/opensrp-client-native-form	378	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMjIyMw==	1712	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opensrp_opensrp-client-native-form/pr_378.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMjIyMw==	move encounter_type to a constants file	Code	Yes	FALSE												
opentracksapp/opentracks	174	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNTk3MQ==	1715	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentracksapp_opentracks/pr_174.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNTk3MQ==	Why is lastTrackPoint added? And shouldn't it be null and thus not do anything? (happens in endrecording(), right)? Except giving a "Ignore insertLocation. trackPoint is null." in the logs?	Code	No	FALSE												
opentripplanner/opentripplanner	3054	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNDc1OQ==	1721	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3054.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzIzNDc1OQ==	I would make the routingErrors a member of the request scoped Worker class - then each of the two try/catch blocks can be moved into their own methods and don´t interrupt the reading of the main flow. This have the side-effect of changing the state of the worker, so that should be documented for each of the methods.	Javadoc	Yes	FALSE												
opentripplanner/opentripplanner	3187	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc2MQ==	1717	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opentripplanner_opentripplanner/pr_3187.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc2MQ==	create/generate not get, maybe?	Code	Yes	TRUE	Bad identifier	Method	Not Accepted									
openzipkin/zipkin	3326	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE5MzcwNw==	1728	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/openzipkin_zipkin/pr_3326.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE5MzcwNw==	Suggested change                                                                                                          rabbit.port(), "muah")                                                          rabbit.port(), "bugs bunny")	String value	No	FALSE												
opfab/operatorfabric-core	561	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE1MTM3NQ==	1735	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/opfab_operatorfabric-core/pr_561.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE1MTM3NQ==	To be in package org.lfenergy.operatorfabric.cards.publication.configuration.kafka to be consistent with other configuration classes	Code	Yes	TRUE	Complex, long, or inadequate logic	Package	Accepted	Move the code element to consistent place	Yes		Yes		NONE	NONE	NONE	NONE
oracle/graal	2960	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNzMyMw==	1739	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_graal/pr_2960.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNzMyMw==	I don't think we should introduce these BASE interfaces. We get a too deep and confusing hierarchy. I would not know when to use LINUX vs. LINUX_BASE in a Platforms annotation.	Code	Yes	FALSE												
oracle/helidon	1714	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3MDQ3Mw==	1746	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_1714.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3MDQ3Mw==	HTTP methods should be compared ignore case (unless you fix the requestedMethod and configured methods somewhere to be always upper/lower cased)	Code	No	FALSE												
oracle/helidon	1510	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMTEwMg==	1748	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_helidon/pr_1510.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTAwMTEwMg==	Do not use info log level so much. If you want to log an info message, just log a single one in this method.	Other	Yes	FALSE												
oracle/opengrok	3061	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUyNTMwMw==	1755	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_opengrok/pr_3061.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUyNTMwMw==	use isLoggable() also here ?	Code	No	FALSE												
oracle/weblogic-kubernetes-operator	1655	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwODQxMQ==	1765	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1655.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjIwODQxMQ==	curious - did you change this to satisfy checkstyle rules?	Code	No	FALSE												
oracle/weblogic-kubernetes-operator	1704	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4MzM2NA==	1764	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/oracle_weblogic-kubernetes-operator/pr_1704.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDc4MzM2NA==	Does this need any update?	Javadoc	Yes	FALSE												
osgp/open-smart-grid-platform	533	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxODg1MQ==	1769	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osgp_open-smart-grid-platform/pr_533.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTUxODg1MQ==	I find the idea of creating one object for a log statement and an unrelated other object for actual use I bit shady. I understand that the Instant, although fine for use to indicate a moment in time, is less pretty to use in log statements to be read by humans. In practice these values are likely to be very close to each other (maybe even the same millisecond) but I think it would be nicer to do something like now.toDate().ToInstant() or to create the DateTime based on Instant.now(), as it feels like a more honest link between what is used and what is logged.	Code	No	FALSE												
osmandapp/osmand	9086	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyNDA2OA==	1779	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmandapp_osmand/pr_9086.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyNDA2OA==	Import TileSourceManager	Code	Yes	TRUE	Complex, long, or inadequate logic	Attribute	Accepted	Remove the library name reference in fully qualifier name	Yes		Yes		NONE	UnnecessaryFullyQualifiedName	Simple class names should be used	NONE
osmlab/atlas-checks	340	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxMzg1Mw==	1783	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmlab_atlas-checks/pr_340.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxMzg1Mw==	Suggested change                                                                                                                        .map(AtlasObject::getIdentifier).collect(Collectors.toList())));                                                                        .map(AtlasObject::getOsmIdentifier).collect(Collectors.toList())));	Code	No	FALSE												
osmlab/atlas-checks	310	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODIwOA==	1784	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/osmlab_atlas-checks/pr_310.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM2ODIwOA==	nit: Could we combine the conditionals in noneMatch() ?	Code	No	FALSE												
palantir/atlasdb	4681	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxOTQ3Mg==	1789	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_atlasdb/pr_4681.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxOTQ3Mg==	Feels like creating this range should belong in validateAndGetNextRowName	Code	No	FALSE												
palantir/atlasdb	5119	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4MDk2Mg==	1787	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_atlasdb/pr_5119.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4MDk2Mg==	nice!	Code	No	FALSE												
palantir/gradle-baseline	1401	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MDM2OQ==	1796	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1401.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MDM2OQ==	After we test the suggested fixes on a large internal project (per-merge) we should add this check to the list that baseline automatically fixes by referencing the name from the list in BaselineErrorProneExtension.java	Code	No	FALSE												
palantir/gradle-baseline	1370	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyODkyNw==	1797	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1370.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyODkyNw==	this looked like a bug to me - in this test we know we throw T which in this scope is guaranteed to be RuntimeException (while unbounded T is Exceptio)	Code	No	FALSE												
palantir/gradle-baseline	1355	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4MTc0OQ==	1800	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1355.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM4MTc0OQ==	I'd maybe use one of them to check that it only renames the other one	Code	No	FALSE												
palantir/gradle-baseline	1365	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0OTk4Mg==	1799	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1365.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI0OTk4Mg==	I think there might be some oddness if the method is. It provided by this, but an enclosing class, requiring prefix “Enclosing.this.“. Worth a test to verify, I’d probably exclude that from the check rather than attempt to refactor since it’s fairly uncommon.	Code	No	FALSE												
palantir/gradle-baseline	1554	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyOTkzNw==	1792	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/palantir_gradle-baseline/pr_1554.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyOTkzNw==	this check can be extracted to a static reusable matcher: Matchers.hasAnnotation("com.palantir.conjure.java.lib.internal.Incubating"); We should probably not fail builds when folks test their endpoints, so we can avoid reporting a match if TestCheckUtils.isTestCode(state) is true (note that this method is relatively expensive, so we should only check it after we've found an incubating match).	Code	No	FALSE												
papermc/paper	3193	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNjcwNQ==	1810	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/papermc_paper/pr_3193.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMwNjcwNQ==	I know this is pseudo code, but for easy copy and pasting, this and the reference in line 20 should prolly say isAsynchronous since thats the proper name of the method. IntelliJ also reminded me, that this can be simplified to event.isAsynchronous() || !event.hasFiredAsync()	Javadoc	Yes	FALSE												
patchworkmc/patchwork-api	113	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5OTU4OQ==	1813	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_113.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5OTU4OQ==	override annotations	Other	Yes	FALSE												
patchworkmc/patchwork-api	33	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxNzA0Mw==	1821	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_33.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxNzA0Mw==	Suggested change                                                                                                 * LivingFallEvent is fired when an Entity is set to be falling.                                                 * LivingFallEvent is fired when a {@link LivingEntity} is set to be falling.	Javadoc	Yes	FALSE												
patchworkmc/patchwork-api	38	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzkwNw==	1820	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/patchworkmc_patchwork-api/pr_38.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzkwNw==	All of these subclasses need a // For EventBus constructor, or else there will be a crash when trying to add listeners.	Code	No	FALSE												
payara/payara	4884	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4MzUwMQ==	1825	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/payara_payara/pr_4884.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc4MzUwMQ==	Maybe even final ?	Code	No	FALSE												
pgmdev/pgm	519	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MDAyNA==	1832	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pgmdev_pgm/pr_519.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3MDAyNA==	Use SpigotTextAdapter to convert to a BaseComponent. This should fix the empty translations.	Code	No	FALSE												
pmd/pmd	2635	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwOTcxOQ==	1842	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pmd_pmd/pr_2635.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwOTcxOQ==	That should be RuleSetLoadException (capital Set), to be consistent with all the other usages of RuleSet. I'll change that, when merging.	Code	Yes	FALSE												
powsybl/powsybl-core	1358	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MjkyNQ==	1848	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/powsybl_powsybl-core/pr_1358.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MjkyNQ==	I wonder if we should override getDelegate() to return a TieLine and avoid casting everywhere	Code	No	FALSE												
pravega/pravega	4692	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5MDM2NQ==	1856	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4692.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA5MDM2NQ==	We can improve/remove the warn message here since we are closing the connection and not informing the writer via a Wirecommand.	String value	Yes	FALSE												
pravega/pravega	4797	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4Mjg2MQ==	1853	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/pravega_pravega/pr_4797.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjc4Mjg2MQ==	Why did you use this pattern here and not apply it to everything else? For cleanliness, I suggest you don't bother with this check.	Code	Yes	FALSE												
prebid/prebid-server-java	975	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNTY2Mg==	1862	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_975.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyNTY2Mg==	Change arg order as in parent org.prebid.server.privacy.gdpr.vendorlist.VendorListService class.	Code	Yes	FALSE												
prebid/prebid-server-java	635	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNjkwMw==	1867	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prebid_prebid-server-java/pr_635.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNjkwMw==	L	Code	No	FALSE												
prestodb/presto	14142	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzNDQwNw==	1874	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prestodb_presto/pr_14142.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkzNDQwNw==	remove	Other	Yes	FALSE												
prestodb/presto	15565	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwODAyNw==	1871	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/prestodb_presto/pr_15565.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwODAyNw==	nit: this. is redundant here	Code	Yes	TRUE	Unnecessary Code	Object	Accepted	Remove this	Yes		Yes		NONE	NONE	NONE	RequireThis
primefaces/primefaces	6419	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzMzE4OQ==	1877	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/primefaces_primefaces/pr_6419.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzMzE4OQ==	Remove LOGGER and System.nanoTime calls?	Other	Yes	FALSE												
primefaces/primefaces	5925	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMDc3MQ==	1879	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/primefaces_primefaces/pr_5925.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMDc3MQ==	One last thing. :-) hasTime = date and time timeOnly = time (I know this is a bit confusing.) --> if (timeOnly) {	Code	No	FALSE												
project-ncl/pnc	3036	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg==	1883	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/project-ncl_pnc/pr_3036.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg==	ValidationErrorType? + javadoc on class level	Code	Yes	TRUE	Bad identifier	Class	Accepted	Modify an identifier to express the meaning or type of an element	Yes		Yes		NONE	NONE	NONE	NONE
project-ncl/pnc	2961	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc1ODM2Mw==	1884	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/project-ncl_pnc/pr_2961.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc1ODM2Mw==	Here you are changing the creationUser of existing BC. This method creates new BC-audited for existing BC. It's called createRevision because from API point it is creating new entity, but it's actually just updating the BC.	Code	No	FALSE												
questdb/questdb	544	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1NzA0MA==	1905	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_544.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI1NzA0MA==	utf8Decode returns decoding status. It cannot be ignored as it indicates corrupt message. Usually when uff8 cannot be decoded BadProtocolException is being thrown	Code	No	FALSE												
questdb/questdb	566	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzNDUxMQ==	1904	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_566.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMzNDUxMQ==	inferParameterType() is liable to return -1, which is not handled and not tested either.	Code	No	FALSE												
questdb/questdb	574	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAyNzc2NQ==	1903	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_574.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAyNzc2NQ==	remove test please :)	Code	No	FALSE												
questdb/questdb	499	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3MDA2OQ==	1906	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/questdb_questdb/pr_499.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE3MDA2OQ==	untested	Code	No	FALSE												
quickfix-j/quickfixj	311	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE0MTMyMQ==	1912	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/quickfix-j_quickfixj/pr_311.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE0MTMyMQ==	Not sure how often this method is used, but this does not seem correct.	Code	No	FALSE												
reactor/reactor-core	2512	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg==	1921	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/reactor_reactor-core/pr_2512.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxMzI2Mg==	Seems a bit blunt to use a tag and custom logic in this class. Why not @After or @AfterAll in LoggersTest only?	Code	Yes	FALSE												
reactor/reactor-core	2492	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2NDM2Mw==	1922	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/reactor_reactor-core/pr_2492.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2NDM2Mw==	same comment as above about testLogger capture	Code	Discard	FALSE												
realm/realm-java	6804	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5OTU2Mw==	1932	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/realm_realm-java/pr_6804.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc5OTU2Mw==	This annotation looks unfamiliar to me. I wonder if it is one used by a custom javadoc generator. In which case we need to replace it with @see and a proper link. We should probably figure out exactly how this is used. Perhaps it is something we can utilize ourselves.	Javadoc	Yes	FALSE												
resilience4j/resilience4j	1235	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTgwMA==	1940	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resilience4j_resilience4j/pr_1235.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTgwMA==	@RobWin Should I throw and exception when both RetryConfigurationProperties.InstanceProperties.waitDuration and RetryConfigurationProperties.InstanceProperties.intervalBiFunction are used or let RetryConfig.Builder.build to do the job?	Code	No	FALSE												
resteasy/resteasy	2505	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNTgzNw==	1951	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/resteasy_resteasy/pr_2505.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNTgzNw==	These could be correct or not (I haven't checked), but are they really related to this PR / RESTEASY-2686?	Code	No	FALSE												
rsksmart/rskj	1278	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4MjU0NA==	1966	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rsksmart_rskj/pr_1278.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg4MjU0NA==	fix indentation?	Code	Yes	FALSE												
rstudio/rstudio	5954	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODkyNg==	1976	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/rstudio_rstudio/pr_5954.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyODkyNg==	Nit: for very complicated reasons, we prefer StringUtil.equals (GWT has actually changed the way string comparison works between releases!)	Code	No	FALSE												
runelite/runelite	11556	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMyNjg0Mw==	1980	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/runelite_runelite/pr_11556.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMyNjg0Mw==	This doesn't belong in this commit	Code	No	FALSE												
sakaiproject/sakai	8663	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMxNTM1Nw==	1995	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_8663.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMxNTM1Nw==	Should use loc = Locale.getDefault() here.	Code	No	FALSE												
sakaiproject/sakai	8826	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5ODUwMA==	1992	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sakaiproject_sakai/pr_8826.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5ODUwMA==	Boolean.valueOf() not necessary here:                        Suggested change                                                                                                                            rcontext.put("darkTheme", Boolean.valueOf(darkTheme));                                                                            rcontext.put("darkTheme", darkTheme);	Code	Yes	TRUE	Unnecessary Code	Call	Accepted but with different solution	Remove duplicated code or processing	No	No			NONE	NONE	NONE	NONE
scireum/sirius-biz	906	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNjAzOQ==	2001	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_906.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNjAzOQ==	sourceParameter	Code	Yes	TRUE	Bad identifier	Attribute	Accepted	Modify an identifier to fix a typo	Yes		Yes		NONE	NONE	NONE	NONE
scireum/sirius-biz	770	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0NjQxMw==	2005	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/scireum_sirius-biz/pr_770.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA0NjQxMw==	looks redundant to the code above	Code	No	FALSE												
seata/seata	2676	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4MDcxNQ==	2009	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/seata_seata/pr_2676.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4MDcxNQ==	Least Active	Javadoc	Yes	FALSE												
senx/warp10-platform	751	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2ODI4Ng==	2018	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_751.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2ODI4Ng==	Ditto.	Code	Discard	FALSE												
senx/warp10-platform	725	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc5NDg4NQ==	2019	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_725.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc5NDg4NQ==	ditto	String value	Discard	FALSE												
senx/warp10-platform	660	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2OTAxNA==	2020	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_660.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2OTAxNA==	Add a comment indicating whether start/end are inclusive or exclusive	Comments	Yes	TRUE	Incomplete or inadequate code documentation	Method	Accepted	Add new JavaDoc block to describe the functionality of a code element	Yes		Yes		NONE	CommentRequired	NONE	MissingJavadocMethod
senx/warp10-platform	766	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1MTE2Mw==	2017	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/senx_warp10-platform/pr_766.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE1MTE2Mw==	That naming convention should be only reserved to constants.	Code	Yes	FALSE												
skriptlang/skript	3206	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTc2NA==	2024	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3206.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTc2NA==	IF statement should be on it's own line	Code	Yes	TRUE	Inconsistent or disrupted formatting	Conditional	Accepted	Move code elements to their own line	No	No			NONE	NONE	Conditionals should start on new lines; A conditionally executed single line should be denoted by indentation	LeftCurly; RightCurly
skriptlang/skript	3362	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM1MDEyNA==	2022	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/skriptlang_skript/pr_3362.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM1MDEyNA==	@Name shouldn't have Is .	Other	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted									
sleuthkit/autopsy	5996	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4MzI5MQ==	2031	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sleuthkit_autopsy/pr_5996.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4MzI5MQ==	The justification itself could have a single quote in it. I think we may need to check and escape those.	Code	No	FALSE												
slimefun/slimefun4	2384	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTI0NA==	2035	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/slimefun_slimefun4/pr_2384.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU0MTI0NA==	This line is redundant, it's already done in #hashasFullProtectionAgainst	Code	Yes	FALSE												
smallrye/smallrye-reactive-messaging	790	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ==	2040	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_790.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI0NjczMQ==	This is something I got wrong. From the documentation:  The list of partitions that are now assigned to the consumer (previously owned partitions will NOT be included, i.e. this list will only include newly added partitions)  https://kafka.apache.org/24/javadoc/org/apache/kafka/clients/consumer/ConsumerRebalanceListener.html#onPartitionsAssigned-java.util.Collection- This needs to be used in conjunction with revoked to get the full picture  partitions - The list of partitions that were assigned to the consumer and now have been reassigned to other consumers (may not include all currently assigned partitions, i.e. there may still be some partitions left)  https://kafka.apache.org/24/javadoc/org/apache/kafka/clients/consumer/ConsumerRebalanceListener.html#onPartitionsRevoked-java.util.Collection- If the idea is to remove partitions from the store then that should be done in partitionsRevoked.	Code	No	FALSE												
smallrye/smallrye-reactive-messaging	601	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0NTI3MA==	2045	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smallrye_smallrye-reactive-messaging/pr_601.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0NTI3MA==	Same code trick (or the javadoc will be wrong)	Javadoc	Yes	FALSE												
smartdevicelink/sdl_java_suite	1581	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNTAwMA==	2046	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/smartdevicelink_sdl_java_suite/pr_1581.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNTAwMA==	@kostyaBoss I would keep the name as ShowConstantTbt on line 212.  Changing the name of the class is out of scope of the PR.	Code	Yes	TRUE	Bad identifier	Class	Accepted	Change the style of an identifier to be camelCase, capitalized, or lowercase	Yes		Yes		NONE	ClassNamingConventions	NONE	AbbreviationAsWordInName TypeName
sonarsource/sonar-java	3292	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzMTIyNQ==	2052	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sonarsource_sonar-java/pr_3292.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODYzMTIyNQ==	Instead of new FlagSet(), we should be calling getFlagSet() here. Otherwise it won't take flags into account for cases like "(?i)[a-z]*?X" or Pattern.compile("[a-z]*?X", Pattern.CASE_INSENSITIVE). Even with that change we can still get wrong results if a flag is only enabled for part of the regex (e.g. (?i:[a-z]*?)X where the i flag would already be unset by the time we call getFlagSet), but that's actually pretty tricky to handle with the current API. @alban-auzeill  is currently working on a change that will make it easy to query the flags for a specific RegexTree, so it's best to just use getFlags() for now and then we can replace it with base.getFlags() and tree.getFlags() respectively afterwards once Alban adds that method.	Code	No	FALSE												
sonarsource/sonar-java	2872	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3NjU3NQ==	2056	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/sonarsource_sonar-java/pr_2872.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY3NjU3NQ==	Should we add MethodMatchers.Builder ofType(String... fullyQualifiedTypeName); ?	Code	No	FALSE												
spinnaker/kork	506	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MjU2OQ==	2062	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spinnaker_kork/pr_506.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4MjU2OQ==	It wont be long before we build up another DependencyProvider, so let's make the DependencyProvider objects separate beans and then add them to this extensionInjector factory so we keep the arguments clean (i.e. -- ConfigResolver is a dependency for ConfigDependencyProvider and not ExtensionInitializer).	Code	No	FALSE												
spinnaker/kork	507	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc1MjYxMQ==	2061	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spinnaker_kork/pr_507.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc1MjYxMQ==	Had an error response body or just returned a 4xx/5xx?	Code	No	FALSE												
spongepowered/sponge	2514	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxNzc2NA==	2070	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2514.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkxNzc2NA==	Yes, this is still necessary. Since the logic is currently looking at the passed in class, we want to be able to ask if the class is either an interface OR an extended class of the base class.	Code	No	FALSE												
spongepowered/sponge	2582	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0OTI5Mw==	2068	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2582.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0OTI5Mw==	list of tile/block entities with block name as key and range as value	String value	Yes	TRUE	Wrong, missing, or inadequate string expression or literal	Literal	Accepted	Replace a string literal by a different meaning or a synonymous	Yes		No	No	NONE	NONE	NONE	NONE
spongepowered/sponge	2453	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcxNTAzNg==	2073	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_sponge/pr_2453.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcxNTAzNg==	Then remove it.	Code	Yes	TRUE	Unnecessary Code	Class	Accepted	Remove non-referred constant, import, class, method, or variable	Yes		No	Yes	NONE	NONE	NONE	NONE
spongepowered/spongeapi	2091	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NTM0Ng==	2082	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2091.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ1NTM0Ng==	this.icon	Code	Yes	FALSE												
spongepowered/spongeapi	2274	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwMzkzMA==	2075	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spongepowered_spongeapi/pr_2274.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwMzkzMA==	getLifetime()?	Code	Yes	FALSE												
spring-cloud/spring-cloud-gcp	2541	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzMzg1MQ==	2083	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-cloud_spring-cloud-gcp/pr_2541.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTIzMzg1MQ==	Can we just move this code to hasNextPage in the Iterable?	Code	No	FALSE												
spring-projects/spring-integration	3332	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNjM4NQ==	2092	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3332.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNjM4NQ==	The default is not going to work for Java 6, but we may not just introduce this method into the Pool interface for backward bytecode compatibility.	Code	No	FALSE												
spring-projects/spring-integration	3357	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2ODAwNg==	2089	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3357.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2ODAwNg==	Do we really need this? I'm sorry to asking nit-pick questions: you definitely spent some effort on the matter, but it is very hard to review this big PR.	Code	No	FALSE												
spring-projects/spring-integration	3201	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0OTYyMA==	2095	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-integration/pr_3201.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE0OTYyMA==	Suggested change                                                                                                   ReactiveMessageHandler reactiveMessageHandler =                                                     ((ReactiveMessageHandlerAdapter) this.handler).getDelegate();                                                   reactiveMessageHandler = adviceChain(reactiveMessageHandler);                                                   this.handler = new ReactiveMessageHandlerAdapter(reactiveMessageHandler);                                                        this.handler = new ReactiveMessageHandlerAdapter(adviceChain(((ReactiveMessageHandlerAdapter) this.handler).getDelegate())));	Code	Yes	FALSE												
spring-projects/spring-security	9196	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjY2NA==	2096	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/spring-projects_spring-security/pr_9196.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzIzNjY2NA==	Can you please change this to be cookieMaxAge cannot be zero? As it is, the error the user will see if it is 0 would state it is not zero which would be confusing.                        Suggested change                                                                                                  Assert.isTrue(cookieMaxAge != 0, "cookieMaxAge is not zero");                                                  Assert.isTrue(cookieMaxAge != 0, "cookieMaxAge cannot be zero");	String value	Yes	FALSE												
talend/tbd-studio-se	1690	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzU4MQ==	2108	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tbd-studio-se/pr_1690.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4NzU4MQ==	To be discussed on the best way to name module groups  should we use LIB, MODULE_GROUP, GROUP, nothing are REQUIRED, MRREQUIRED relevant here	Code	Yes	FALSE												
talend/tdi-studio-se	4419	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2MDc3Ng==	2121	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_4419.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2MDc3Ng==	please remove this duplicated line.	Code	Yes	FALSE												
talend/tdi-studio-se	5280	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNTQwOQ==	2114	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_5280.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzIxNTQwOQ==	confusing name here, maybe DEBUG_ROUTE_ID ? and maybe put in constant class? or maybe make it a more general usage? like record the id, and detect whether it is route through the job type?	Code	Yes	FALSE												
talend/tdi-studio-se	5149	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4MDgzOA==	2115	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/talend_tdi-studio-se/pr_5149.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4MDgzOA==	Is there a special reason to be on the 2020-01-19 for this new migration task	Code	No	FALSE												
taskana/taskana	982	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNDgyOQ==	2128	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_982.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzYzNDgyOQ==	Is there a nicer way? This is not really readable :/	Code	Yes	FALSE												
taskana/taskana	1036	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0NDY5MQ==	2126	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_1036.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0NDY5MQ==	So this test has to be extracted from this class, because the target of TestExecutionListeners annotation is ElementType.Type?	Code	No	FALSE												
taskana/taskana	1090	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5Mzg3Mw==	2124	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_1090.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ5Mzg3Mw==	can we remove the public?	Code	No	FALSE												
taskana/taskana	959	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2MzA0Nw==	2129	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/taskana_taskana/pr_959.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2MzA0Nw==	Shouldn't we move this test to the service level tests to have them all together in one file?	Code	Yes	FALSE												
teammates/teammates	10801	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE2MTE1NQ==	2132	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teammates_teammates/pr_10801.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE2MTE1NQ==	This button only appears after some data is loaded, so adding this hook at the beginning may result in NoSuchElementException especially in production server	Code	No	FALSE												
teammates/teammates	10899	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyODkzNg==	2131	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teammates_teammates/pr_10899.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQyODkzNg==	same here	Code	Discard	FALSE												
teamnewpipe/newpipe	4259	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQwOTUxNQ==	2138	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/teamnewpipe_newpipe/pr_4259.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTQwOTUxNQ==	In order to achieve what was discussed in #4071, I'd just add a condition here that shows "R.string.show_info" if autoplay is off, but still uses "R.string.video_player_key" as the key in any case. At the end of the day both options open the same activity, even though the outcome is different, so I think users would expect "Show info" to be selected in the dialog if they had used the "Video player" choice before disabling autoplay, and viceversa. I don't think you would need to do anything else in order to achieve what I described above, since VideoDetailFragment already handles autoplay by itself.	Code	No	FALSE												
techempower/frameworkbenchmarks	5467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2MDIyMw==	2158	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2MDIyMw==	For comments within Java methods, use // comments like this or /* comments like this */, not /** javadoc like this */.  The double asterisk is for javadoc, which can be applied at the class level or member (field or method) level, but not within a method.	Comments	Yes	FALSE												
techempower/frameworkbenchmarks	5467	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2MTAwMA==	2159	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5467.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk2MTAwMA==	You might as well not have the try and catch then.  Your main method declared throws Exception, so no good comes out of catching this.  The only thing it can do is hide errors from us.	Comments	No	FALSE												
techempower/frameworkbenchmarks	5728	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTU1MQ==	2154	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/techempower_frameworkbenchmarks/pr_5728.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI5NTU1MQ==	would be nice for the 4 to be a constant for readability	Code	Yes	FALSE												
telefonicaid/fiware-cygnus	1971	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAzOTUxNA==	2160	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1971.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAzOTUxNA==	Is safe access to element by 1 (i.e. only 1 element is in upsertList)?	Code	No	FALSE												
telefonicaid/fiware-cygnus	1851	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwODU4MQ==	2166	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1851.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwODU4MQ==	I thing it's more usuall that the default authSource is "admin". It would be better if the default value of mongo_auth_source is "admin".	Code	No	FALSE												
telefonicaid/fiware-cygnus	1860	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyNDczMQ==	2164	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telefonicaid_fiware-cygnus/pr_1860.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyNDczMQ==	Is this necessary? The constructor that matches with that signature seems to be empty.	Code	Yes	FALSE												
telstra/open-kilda	3097	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNjY2MA==	2174	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3097.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNjY2MA==	check queue size rather than push return value that is tight to 1 size	Code	No	FALSE												
telstra/open-kilda	3186	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzU0NQ==	2173	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/telstra_open-kilda/pr_3186.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzAwMzU0NQ==	you removed deallocate() call.	Code	No	FALSE												
temporalio/sdk-java	172	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0MDI5OQ==	2177	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/temporalio_sdk-java/pr_172.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY0MDI5OQ==	[Nit] this variable name (commands) seems off?	Code	Yes	FALSE												
tensorflow/java	91	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYxNzQxNA==	2187	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/tensorflow_java/pr_91.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYxNzQxNA==	Do we have the String op names anywhere? If not we should figure out how to add them to the generated ops so we don't have random string constants. cc @karllessard	Code	Yes	FALSE												
testcontainers/testcontainers-java	3021	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMTAwOA==	2190	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_3021.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzczMTAwOA==	tiny nit: if we import Versioning.Sha256Versioning and other Versioning.* classes, the changelog should be smaller :)	Code	No	FALSE												
testcontainers/testcontainers-java	3180	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1MjMyOA==	2188	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/testcontainers_testcontainers-java/pr_3180.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTQ1MjMyOA==	Let's not make it Nullable:                        Suggested change                                                                                                    public SELF withRecordingMode(VncRecordingMode recordingMode, File vncRecordingDirectory, @Nullable VncRecordingFormat recordingFormat) {                                                    public SELF withRecordingMode(VncRecordingMode recordingMode, File vncRecordingDirectory, VncRecordingFormat recordingFormat) {	Code	No	FALSE												
townyadvanced/towny	3794	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNTgyMA==	2206	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/townyadvanced_towny/pr_3794.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDcyNTgyMA==	Can just initialize multiplier to 1.0 to avoid the else statement.	Code	Yes	FALSE												
treasure-data/digdag	1447	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2ODgxNw==	2207	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/treasure-data_digdag/pr_1447.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2ODgxNw==	Why not return StringBuilder from the method to avoid this String concatenation?	Code	No	FALSE												
treasure-data/digdag	1413	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNTIwNg==	2208	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/treasure-data_digdag/pr_1413.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIxNTIwNg==	These 2 entries have wrong upstream_id?	Comments	Yes	FALSE												
trinodb/trino	3697	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkxODczNA==	2217	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_3697.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkxODczNA==	These variables are used only once. Inline them where they are referenced.	Code	Yes	FALSE												
trinodb/trino	5936	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA1Njk2NA==	2213	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/trinodb_trino/pr_5936.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA1Njk2NA==	#ERROR!	Code	No	FALSE												
triplea-game/triplea	6575	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMDYyOQ==	2222	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_6575.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzYxMDYyOQ==	Avoid deeply nested control flow statements.	Code	Yes	FALSE												
triplea-game/triplea	6449	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3Nzk1NA==	2223	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_6449.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3Nzk1NA==	nit: changing serialVersionUID strings of swing components should not be necessary. I'm not sure there is consensus whether we should default serialVersoinId to a simple 1L. In essence, I'd recommend to not go out of your way to change them unless it's intentional/necessary.	Code	No	FALSE												
triplea-game/triplea	6143	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5MDkxNw==	2225	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/triplea-game_triplea/pr_6143.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5MDkxNw==	Thoughts about using https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE for date formatting?	Code	Yes	TRUE	Complex, long, or inadequate logic	Call	Not Accepted									
unc-libraries/box-c	955	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODAyMQ==	2239	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unc-libraries_box-c/pr_955.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODAyMQ==	Call .toFile() instead of toString()	Code	No	FALSE												
unicode-org/cldr	354	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTA3Mg==	2245	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unicode-org_cldr/pr_354.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIyMTA3Mg==	should use a hash	Code	No	FALSE												
unicode-org/cldr	845	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MzAzNw==	2242	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/unicode-org_cldr/pr_845.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU4MzAzNw==	Since processRequest is already over 700 lines, this block should definitely go in a subroutine	Code	No	FALSE												
uyuni-project/uyuni	2582	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAzNzgwMQ==	2247	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/uyuni-project_uyuni/pr_2582.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAzNzgwMQ==	I agree with the spirit of the patch but would suggest a different implementation, that is to add the default value as second parameter in ConfigDefaults.getDefaultLocale(): https://github.com/uyuni-project/uyuni/blob/master/java/code/src/com/redhat/rhn/common/conf/ConfigDefaults.java#L1023 Reason is just consistency with other cases/centralization, see for example: https://github.com/uyuni-project/uyuni/blob/master/java/code/src/com/redhat/rhn/common/conf/ConfigDefaults.java#L933	Code	Yes	FALSE												
vaadin/flow	9031	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MTE5Mw==	2252	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vaadin_flow/pr_9031.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MTE5Mw==	Is this really the right fix as the AbstractField creates the AbstractFieldSupport which sets the given default value to defaultValue and bufferedValue. I would expect it to be fixed there by setting something else as the initial value. Otherwise any component that extends AbstractField but not AbstractSinglePropertyField would be broken.	Code	No	FALSE												
vaadin/flow	8423	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4ODk3Nw==	2255	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/vaadin_flow/pr_8423.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA4ODk3Nw==	Do not forget to remove this deprecated code someday.	Code	No	FALSE												
virtualsatellite/virtualsatellite4-core	594	MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNDcxOQ==	2275	https://delanohelio.github.io/code_reviews/inlineReviewPagePilot.html?json=https://delanohelio.github.io/code_reviews/virtualsatellite_virtualsatellite4-core/pr_594.json&inline=MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNDcxOQ==	Maybe declared the constructor at the top. Also I am not sure if we need a constructor here. Any problem with just private BeanPropertyFactorySwitch bpfs = new BeanPropertyFactorySwitch();	Code	Yes	FALSE												