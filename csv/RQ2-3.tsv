id	url	bodyText	What (is the problem?)	Where (is the problem?)	Accepted?
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE1ODU2OA==	https://codeupcrc.github.io/?key=4	We can change this to Collections.singletonList(0L);	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIzMDU3MQ==	https://codeupcrc.github.io/?key=14	Plz try not to have duplicate code, it will be difficult to maintain	Complex, long, or inadequate logic	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1NzYxMQ==	https://codeupcrc.github.io/?key=20	Useless?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMyMTU1Nw==	https://codeupcrc.github.io/?key=19	Maybe parseOrigin is better?	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE1NTA1NQ==	https://codeupcrc.github.io/?key=31	nit: The name of the function doesn't suggest to me the type. Maybe createClaimsJwt()?	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkzMDYyMA==	https://codeupcrc.github.io/?key=27	What should be defined by a setter?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzMzk3NA==	https://codeupcrc.github.io/?key=39	I think our convention is like:                         Suggested change                                                                                                  private static final String FILE_SIZE_OPTION = "hive.file.minsize";                                                  private static final String FILE_SIZE_OPTION = "hive.file.size.min";	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA5OTE0MA==	https://codeupcrc.github.io/?key=36	Do we have to get rid of this?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4ODE4MQ==	https://codeupcrc.github.io/?key=41	might as well remove rather than commenting out	Unnecessary Code	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQxMTI4Ng==	https://codeupcrc.github.io/?key=40	I'd prefer to just keep the (unfriendly) current names as well - as sort of an ecosystem compatibility thing. The names attached to the data are a bit like an API and better to pass that through then make what is essentially a translation layer. So this would be ankiGetCardMod, and other getCardId etc Avoiding naming confusion+education-need+problems and referring upstream is the desired outcome for me with that stance - upstream docs will remain relevant for reference	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU4NDEyNw==	https://codeupcrc.github.io/?key=58	With a lambda, this would be slightly shorter:       Threads.createThread("Halt Thread", () -> {         sleepUninterruptibly(100, TimeUnit.MILLISECONDS);         Runtime.getRuntime().halt(status);       }).start();	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTEyMg==	https://codeupcrc.github.io/?key=61	What is the significance of depth 4? Could add to a comment.	Incomplete or inadequate code documentation	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkwMzU0OA==	https://codeupcrc.github.io/?key=60	Some of the deprecated properties have the following in their description.  I think this is nice for the generated documentation.                         Suggested change                                                                                                      "The number of threads to use when moving user files to bulk ingest "                                                      "This property is deprecated since 2.1.0. The number of threads to use when moving user files to bulk ingest "	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQyNjYwNg==	https://codeupcrc.github.io/?key=64	Seems like this might be unused now that the loop it was in before is gone?	Unnecessary Code	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkxNTY5Ng==	https://codeupcrc.github.io/?key=66	I would encapsulate this logic in a separate method on a separate class to make it more readeable an d shorter ie translation from request to QueueConfiguration	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwNjQ0MQ==	https://codeupcrc.github.io/?key=85	I think you can replace autodetectParser with parser == null and eliminate the three-args constructor.	Complex, long, or inadequate logic	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NTYwOQ==	https://codeupcrc.github.io/?key=83	Looks like it could be simplified: Reader reader = new BufferedReader(new InputStreamReader(minioObject, StandardCharsets.UTF_8));	Complex, long, or inadequate logic	Try-Catch	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5ODE5OQ==	https://codeupcrc.github.io/?key=115	It's better to rename JacksonSerialize to JsonSerializer	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAyMjI2Nw==	https://codeupcrc.github.io/?key=123	Should use prefixAndClause.getValue().includesColumn(filteringColumn) — it's more semantically intentful and also the logic is slightly different.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzIxMzU4Nw==	https://codeupcrc.github.io/?key=125	I think you could get  consumerModel directly from invocation attributes	Complex, long, or inadequate logic	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTcyMjQ2Ng==	https://codeupcrc.github.io/?key=128	Don't add new commented out imports, but clean up	Unnecessary Code	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI3Njg5Ng==	https://codeupcrc.github.io/?key=138	usually added at the very top of a javadoc	Incomplete or inadequate code documentation	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA3NjU4NA==	https://codeupcrc.github.io/?key=151	What is the task here? Please explain. This is for all javadocs. There is no harm in writing more lines :P	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxMTIwOQ==	https://codeupcrc.github.io/?key=155	Please add comments to explain the reason.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQyODA4OA==	https://codeupcrc.github.io/?key=166	nit, customizedStateName -> customizedStateType or type?	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc2Nw==	https://codeupcrc.github.io/?key=180	Did you mean interaction or intersection?	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU3Mzk0MA==	https://codeupcrc.github.io/?key=182	Nit: Typo shake -> sake	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzczMTM4Mg==	https://codeupcrc.github.io/?key=196	@see should be placed after @return	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDM5Nw==	https://codeupcrc.github.io/?key=197	Failure callback. @param failReason Exception caused a failure.	Incomplete or inadequate code documentation	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzMzc2OA==	https://codeupcrc.github.io/?key=189	Lets rename to dataPacket ?	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzYyMjczMA==	https://codeupcrc.github.io/?key=211	Minor: "generateViolation" read better.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0NTk0MQ==	https://codeupcrc.github.io/?key=222	Do I read this right, that we're doing the exact same thing twice?	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MzA1MA==	https://codeupcrc.github.io/?key=242	A bit better way is StandardCharsets.UTF_8[.name()].	Missing constant usage	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ1OTkzOQ==	https://codeupcrc.github.io/?key=244	It might make sense to call this StatelessProvenanceRepository or perhaps RingBufferProvenanceRepository just to avoid confusion with the existing VolatileProvenanceRepository?	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwODQzMA==	https://codeupcrc.github.io/?key=272	This can potentially flood the log. Can we extract line 376-405 in existing code into a method and call that here?	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzYyMjcwNg==	https://codeupcrc.github.io/?key=277	Should we define "MONTHS" and "WEEKS" as constants?	Missing constant usage	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODc3Mg==	https://codeupcrc.github.io/?key=317	indention seems off	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY1NTk3Mw==	https://codeupcrc.github.io/?key=332	setup() for authentication and configure() for authorization - could we simply unify these and go with setup() for both? As long as the two methods have the same name/signature then it should look like one method from an inheritance perspective, no?	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNTQxNw==	https://codeupcrc.github.io/?key=340	Rename the field as well?  Since it's now an executor and not a handler...	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAyNTE5OA==	https://codeupcrc.github.io/?key=350	@olenagerasimova as you are using java standard library in this method, I'd suggest to use HttpURLConnection.HTTP_OK instead of parsing RsStatus.OK value	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY0NTUyMg==	https://codeupcrc.github.io/?key=352	@olenagerasimova guess there is typo and this method's name is supposed to be config, not configs, isn't it?	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxOTkzNg==	https://codeupcrc.github.io/?key=372	Change to 2020 in all new files	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMjg4Mw==	https://codeupcrc.github.io/?key=380	Anything here?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3NDUxNg==	https://codeupcrc.github.io/?key=373	NIT: add a comment. requirementMap is a groupId->requirement map	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzE0OA==	https://codeupcrc.github.io/?key=391	hasTrait?	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIyMzEzNQ==	https://codeupcrc.github.io/?key=389	This comment seems off, service suppressions is what's throwing me. Also, if "service" is supposed to be namespace, the precedence listed is incorrect.	Incomplete or inadequate code documentation	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODkxNDk2Nw==	https://codeupcrc.github.io/?key=388	assumed*	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUxOTQxOQ==	https://codeupcrc.github.io/?key=387	The method names on these are inconsistent: getOutputTokenMember -> getOutputTokenPath getItemsMember -> getItemsMemberPath Since the original names are intact, I'd make this one getOutputTokenMemberPath.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1NzQ5MA==	https://codeupcrc.github.io/?key=407	I'd add something to this exception stating that no parameters are expected for an aggregate's annotated methods. Should be careful with the wording though, as a command handler is also an annotated method of an aggregate of course 😅	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTA3OA==	https://codeupcrc.github.io/?key=416	nit: same, can be replaced by returning Collections.singleton().	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM5MDA5MQ==	https://codeupcrc.github.io/?key=428	Suggested change                                                                                                     * @return The response object                                                     * @return The response object.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMzgyNg==	https://codeupcrc.github.io/?key=427	missing return	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NjE3Mg==	https://codeupcrc.github.io/?key=429	Suggested change                                                                                                     * close the content.                                                     *                                                     * @throws IOException if close operation fails                                                     * Close the content.                                                     *                                                     * @throws IOException if the close operation fails	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTAwMjcwOQ==	https://codeupcrc.github.io/?key=435	This would be easier to understand if you do: if (this.hidden != null) {     this.retrievable = !this.hidden; } Shouldn't the retrievable logic be done after setting the member variable? not before?	Complex, long, or inadequate logic	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxMDgzMw==	https://codeupcrc.github.io/?key=444	Should these be removed?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2OTI0MA==	https://codeupcrc.github.io/?key=457	On a second thought, this might be already added via options(). Could you please check?	Complex, long, or inadequate logic	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkzNzM4MA==	https://codeupcrc.github.io/?key=458	This is not the parentLockContext() but the lockContext itself, please rename. Also, please rename the class to LockRequest.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NDA1Ng==	https://codeupcrc.github.io/?key=453	Rename this field to active.	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM5MTQzNA==	https://codeupcrc.github.io/?key=463	We could use symTag to check for BPackageSymbol and BAnnotationSymbol	Complex, long, or inadequate logic	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTEzMDk4OQ==	https://codeupcrc.github.io/?key=469	Suggested change                                                                                                        // Get org-name                                                        // Get the name of the organization.	Incomplete or inadequate code documentation	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0MzMwNg==	https://codeupcrc.github.io/?key=486	I'd prefer we changed this as it reads strangely to me. So instead of "isLastCharWasEscapeChar" we could do "wasLastCharEscapeChar".	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2ODg4Ng==	https://codeupcrc.github.io/?key=542	In general, avoid this type of pattern where an exception is caught, logged, and then re-thrown. What ends up happening is that the error gets logged here and then later on by the caller, generating extra logs and confusing the user. Instead, you can wrap the exception with a more specific error message and propagate it up. Something like: throw new IllegalArgumentException("...", e);  The message should also give more information to the user about what they should do to fix the problem. This particular case can only happen when the format was a macro, otherwise it would have caused an error in configurePipeline. So a better message would be: Format '{}' cannot be used because properties {} were not provided or were invalid when the pipeline was deployed. Set the format to a different value, or re-create the pipeline with all required properties.	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc1ODE5Mg==	https://codeupcrc.github.io/?key=571	Also: this variable should be named identifierType.	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyNzc0OQ==	https://codeupcrc.github.io/?key=579	Suggested change                                                                                                    public static Practitioner createPractitionerResource(String NPI, String orgID) {                                                    public static Practitioner createPractitionerResource(String npi, String orgID) {                                 Would you be okay with making this and the MBI parameter in createPatientResource() lowercase? Might get mistaken for constants if someone is scanning the code quickly.	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkyNzc5Mw==	https://codeupcrc.github.io/?key=590	I believe it's better to use the CATEGORY_PREFIX variable from CategoryClient here rather than hard coding the prefix.	Missing constant usage	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI4NTI4MA==	https://codeupcrc.github.io/?key=626	Just use !secondaryIndexes.isEmpty()?	Complex, long, or inadequate logic	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxNDU3Nw==	https://codeupcrc.github.io/?key=637	I think a "why" comment would be more useful here. Explain why the commonSuperType logic above can fail and which cases are enabled here.	Incomplete or inadequate code documentation	Variable	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY2MDQ2OA==	https://codeupcrc.github.io/?key=644	The return is implicit for a void method, so you can just have an empty method body between the curly braces.	Unnecessary Code	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0OTg5MA==	https://codeupcrc.github.io/?key=670	Tiny nit: "LSN" -> "Lsn" (this isn't done consistently across the code base yet, but it's the casing we want to converge on eventually for abbreviations in type/method/variable names).	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5NDgzOA==	https://codeupcrc.github.io/?key=678	It can sometimes be helpful to note given/when/then is the tests to enhance readability for other developers.         //given         String root = Paths.get("").toAbsolutePath().toString();         if (SystemUtils.IS_OS_WINDOWS) {             root = "/" + root.replace(File.separator, "/");         }         URL baseUrl = new URL("file:" + root + "/src/test/resources/example/");         String part = "./services/wordpress.yml";          //when         String actual = URLHelper.combine(baseUrl, part);          //then         String expected = "file:" + root + "/src/test/resources/example/services/wordpress.yml";          assertEquals(expected, actual);	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA1MzcyMg==	https://codeupcrc.github.io/?key=683	more spaces please	Inconsistent or disrupted formatting	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg1MTU4OA==	https://codeupcrc.github.io/?key=688	Can probably be safely removed	Unnecessary Code	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjQzOA==	https://codeupcrc.github.io/?key=691	We can remove this soft assert as well as this path will definitely get hit for someone using this functionality,	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzNzMyNQ==	https://codeupcrc.github.io/?key=692	For future, you don't have to say "it is ", the test runner will automatically say something like: "expected: potato" "actual: tomato"	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2NTcyMQ==	https://codeupcrc.github.io/?key=702	I would replace the iterator with a normal for over categoriesList for (final String categoryId : categoriesList)	Complex, long, or inadequate logic	Loop	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxNTQyNg==	https://codeupcrc.github.io/?key=704	You can use Logger.warnAndDebug method instead	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NjU1MA==	https://codeupcrc.github.io/?key=710	As referred this name is confusing to me. Perhaps with a more detailed description I can help you find a better name.	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMzNjYwMA==	https://codeupcrc.github.io/?key=724	is there a chance that infoCache could be confused by localInterfacesOnly since the key is always this class? I didn't go thorough all use cases, but just wondering if such possibility has been considered.	Bad identifier	Parameter	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2MzA1NQ==	https://codeupcrc.github.io/?key=727	Suggested change                                                                                                   * @throws java.lang.ClassCastException if the value cannot be converted to Number                                                   * @throws java.lang.ClassCastException if the value is not a Number                                 There is no conversion, only casting.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNTQzOA==	https://codeupcrc.github.io/?key=737	I like the statement / query / {collector}? / execution API flow.	Complex, long, or inadequate logic	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2MTMzMg==	https://codeupcrc.github.io/?key=755	No need to have a PR here. You should have a reference of what it was replaced by as a link to code. Take a look at other deprecate examples in the project.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzkxMTg3Ng==	https://codeupcrc.github.io/?key=754	Please drop the test prefix in the name.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNzEwNQ==	https://codeupcrc.github.io/?key=756	One request, can you add a method doc similar to the one above method?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYwMjg1OA==	https://codeupcrc.github.io/?key=762	remove extra empty line	Inconsistent or disrupted formatting	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY1OTkxNg==	https://codeupcrc.github.io/?key=766	the last known gateway id ?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ3OTY1Ng==	https://codeupcrc.github.io/?key=771	This doesn't seem to be used.	Unnecessary Code	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0MTc2Nw==	https://codeupcrc.github.io/?key=779	Rename this variable	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjUyMjkzNA==	https://codeupcrc.github.io/?key=780	Shall we remove the method also?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg0MDU0MQ==	https://codeupcrc.github.io/?key=777	These urls can be converted into an array of strings and then we can use a loop for setting them here.. better than hardcoding	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY2NTQ4Nw==	https://codeupcrc.github.io/?key=786	Please change message to "Expected and actual values are not the same."	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0MzU2Mg==	https://codeupcrc.github.io/?key=802	@link on this and the next line please	Incomplete or inadequate code documentation	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzOTA4OA==	https://codeupcrc.github.io/?key=803	Update date	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk5MzQyNA==	https://codeupcrc.github.io/?key=812	No need for Lists.newArrayList	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMTA5Mw==	https://codeupcrc.github.io/?key=808	Collections.emptyList would do.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIzNDU4NQ==	https://codeupcrc.github.io/?key=811	Typo in variable name	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNDcwMA==	https://codeupcrc.github.io/?key=816	unused constant.	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzc3MjkzOA==	https://codeupcrc.github.io/?key=821	Please remove KITS, CRASHLYTICS, ANSWER as well	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzIzNDYyOQ==	https://codeupcrc.github.io/?key=817	name should be course_enrollment.	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0NzE5Mw==	https://codeupcrc.github.io/?key=824	does it allows to make log4j plugin management work with relocation ? If yes, it might be a good idea to add a comment to make it a bit more explicit.	Incomplete or inadequate code documentation	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI2MzE1Ng==	https://codeupcrc.github.io/?key=839	@PublicAPI instead of @beta	Incomplete or inadequate code documentation	Annotation	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODc4OTY5Nw==	https://codeupcrc.github.io/?key=840	Suggested change                                                                                                  private ReferenceQueue                                                      refQueue; // References are automatically enqueued when the gc flags them as unreachable.                                                  private Set refMaintainer; // Maintains references in the object graph while we wait for them to                                                                             // be enqueued.                                                  private RefQueueThread                                                      refQueueThread; // Blocks on the reference queue and calls the releaser of queued references.                                                  // References are automatically enqueued when the gc flags them as unreachable.                                                  private ReferenceQueue refQueue;                                                                                                  // Maintains references in the object graph while we wait for them to                                                  // be enqueued.                                                  private Set refMaintainer;                                                                                                  // Blocks on the reference queue and calls the releaser of queued references.                                                  private RefQueueThread refQueueThread;	Inconsistent or disrupted formatting	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5Njk5NQ==	https://codeupcrc.github.io/?key=854	Suggested change                                                                                                    private boolean cancelled;                                                    private boolean cancelled = false;	Complex, long, or inadequate logic	Attribute	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4NDY2Mg==	https://codeupcrc.github.io/?key=860	Suggested change                                                                                                    TransferManagerConfiguration tmConfig = transferManager.getConfiguration();                                                    TransferManagerConfiguration managerConfig = transferManager.getConfiguration();	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0MTU2Mg==	https://codeupcrc.github.io/?key=858	OMG, not sure how this slipped through but we don't want * imports, please get your IDE to expand these.	Complex, long, or inadequate logic	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODAxOTIxOQ==	https://codeupcrc.github.io/?key=902	These variables are getting confused. Some of them are property names and some of them are default property values. They should be visually separate in the file.	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMzMzMxNw==	https://codeupcrc.github.io/?key=919	This is not a very good exception, let's tell the developer what is wrong in each case and how they could fix it.	Inadequate logging and monitoring	Try-Catch	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzMyNjg4NQ==	https://codeupcrc.github.io/?key=949	Here and in other places, I'd remove the static nulls and just put null. I think the code is pretty clear without the need for static nulls	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM1OTQ3Mg==	https://codeupcrc.github.io/?key=1014	could we setBody to something else? I don't really understand what the string here means... maybe something straightforward such as "new body text"?	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDIyOA==	https://codeupcrc.github.io/?key=1021	Please remove the printlns. If they are needed then maybe convert them into log.trace() or debug()	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4NTg0MQ==	https://codeupcrc.github.io/?key=1029	Even though tryNext() returns an enum, can we add a default case with a fallthough comment along the lines of "this should never happen"? Or even an exception in case the enum grows over time? https://google.github.io/styleguide/javaguide.html#s4.8.4.3-switch-default	Complex, long, or inadequate logic	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxNjQ0MQ==	https://codeupcrc.github.io/?key=1032	nit: TODO	Incomplete or inadequate code documentation	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgxNTEzMQ==	https://codeupcrc.github.io/?key=1038	nit: "Unable" and ..."the generated parser**.** "	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY0OTk0NA==	https://codeupcrc.github.io/?key=1031	anc' -> 'and'	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUzMzkwNA==	https://codeupcrc.github.io/?key=1040	no need to use quote marks here.	Incomplete or inadequate code documentation	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjE3Nw==	https://codeupcrc.github.io/?key=1044	These are not used and already stored in TestDataHelper/TestConstants so please remove	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE3NDQxMQ==	https://codeupcrc.github.io/?key=1042	nit: your method seems to be returning a date range, so getDateRange might be a better name.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyNjY1Mw==	https://codeupcrc.github.io/?key=1051	Add @Immutable as other classes. Also our repo policy is to add a Javadoc for a public class. Can be a short one.	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1ODU1Mw==	https://codeupcrc.github.io/?key=1060	I am sure we have a JSON string encoder somewhere in the code base Not sure off hand but I recall we do.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA5NzQxMg==	https://codeupcrc.github.io/?key=1059	please have a look at the intellij formatter inside the root folder: we don't use * imports.	Complex, long, or inadequate logic	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3MjA2OA==	https://codeupcrc.github.io/?key=1066	Maybe we shouldn't call this streamsQuery?                         Suggested change                                                                                                    private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streamsQuery) {                                                        final Set<String> indexSetIds = streamsQuery.stream()                                                                .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))                                                                .filter(s -> !isNullOrEmpty(s))                                                                .collect(Collectors.toSet());                                                    private Map<String, IndexSet> indexSetsForStreams(List<DBObject> streams) {                                                        final Set<String> indexSetIds = streams.stream()                                                                .map(stream -> (String)stream.get(StreamImpl.FIELD_INDEX_SET_ID))                                                                .filter(s -> !isNullOrEmpty(s))                                                                .collect(Collectors.toSet());	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg1NjgyNw==	https://codeupcrc.github.io/?key=1078	braces	Inconsistent or disrupted formatting	Loop	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MjQyOA==	https://codeupcrc.github.io/?key=1101	As the argument is optional, we should use the features of Optional and not have another "empty" case of an empty string. You can either just not specify the image name in the builder or use Optional.empty(). I think the former is most consistent with what's already here.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk3Mzk5NA==	https://codeupcrc.github.io/?key=1164	maybe a comment here to explain that getInstance() loads all the static providers	Incomplete or inadequate code documentation	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODU0MTI5NQ==	https://codeupcrc.github.io/?key=1173	isStale is always false	Inadequate logging and monitoring	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyNjU5Mg==	https://codeupcrc.github.io/?key=1176	split it in 3 testcases?	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk2OTI5NQ==	https://codeupcrc.github.io/?key=1201	Why Boolean and not boolean?	Complex, long, or inadequate logic	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIyNzA3OQ==	https://codeupcrc.github.io/?key=1233	Why not just "ImageButton"?	Bad identifier	Class	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI3MDY3NA==	https://codeupcrc.github.io/?key=1286	This whole feature is extraordinary error-prone. I'd say a warning must be added here when it is used.	Inadequate logging and monitoring	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzI1NTMwMA==	https://codeupcrc.github.io/?key=1298	Suggested change                                                                                                 * Copyright 202 Red Hat, Inc. and/or its affiliates.                                                 * Copyright 2020 Red Hat, Inc. and/or its affiliates.	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI5ODgxNg==	https://codeupcrc.github.io/?key=1308	typo                         Suggested change                                                                                                    public TaskLifeCycleEventListener createBAMTaskSumaryListener(EntityManagerFactory emf) {                                                    public TaskLifeCycleEventListener createBAMTaskSummaryListener(EntityManagerFactory emf) {	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzMyNzc4MA==	https://codeupcrc.github.io/?key=1314	typo                         Suggested change                                                                                                                    List<? extends Reassignment> ressignments = escalation.getReassignments();                                                                    List<? extends Reassignment> reassignments = escalation.getReassignments();	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUyOTIxOA==	https://codeupcrc.github.io/?key=1315	Perhaps we may use Apache Commons Lang abbreviate method, adding 3 dots at the end, to indicate that it's trimmed. Notice that this method would throw IllegalArgumentException if length is equal or less than 3 (should not be a common length to use). What do you think?                         Suggested change                                                                                                        String trimmedErrorMessage = errorMessage;                                                        if (trimmedErrorMessage != null && trimmedErrorMessage.length() > ERROR_LOG_LENGTH) {                                                            trimmedErrorMessage = trimmedErrorMessage.substring(0, ERROR_LOG_LENGTH);                                                        }                                                        super.setErrorMessage(trimmedErrorMessage);                                                        super.setErrorMessage(StringUtils.abbreviate(errorMessage, ERROR_LOG_LENGTH));	Complex, long, or inadequate logic	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ3MTkzMQ==	https://codeupcrc.github.io/?key=1328	Suggested change                                                                                                    void testPrequalificationDMNExplanation1() throws ExecutionException, InterruptedException, TimeoutException {                                                    void testPrequalificationDMNExplanation() throws ExecutionException, InterruptedException, TimeoutException {	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE4MzMzNg==	https://codeupcrc.github.io/?key=1337	I think you can use existing generatedAnnotation field	Complex, long, or inadequate logic	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0NzM2MQ==	https://codeupcrc.github.io/?key=1338	As far as I can see this concept only exists in Spring and not in CDI (even if quarkus impl should be lazy by default). Why do you need it? Minor note, can you add a javadoc?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4MjM5Mw==	https://codeupcrc.github.io/?key=1336	What do you mean with demo?	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY5NTgzNw==	https://codeupcrc.github.io/?key=1345	Maybe an explanation here would be nice?	Wrong, missing, or inadequate string expression or literal	Try-Catch	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMjIyMA==	https://codeupcrc.github.io/?key=1349	Suggested change                                                                                                    private boolean allChildsExported(Process process) {                                                        if (process.getChildren().isEmpty()) {                                                            boolean allChildsExported = true;                                                            for (Process child : process.getChildren()) {                                                                allChildsExported &= child.isExported();                                                            }                                                            return allChildsExported;                                                    private boolean allChildrenExported(Process process) {                                                        if (process.getChildren().isEmpty()) {                                                            boolean allChildrenExported = true;                                                            for (Process child : process.getChildren()) {                                                                allChildrenExported &= child.isExported();                                                            }                                                            return allChildrenExported;                                 It should be "children" instead of "childs".	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA2OTUyNA==	https://codeupcrc.github.io/?key=1370	you could flip this comparison, as that makes it way easier to read	Complex, long, or inadequate logic	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzQ5Mjc4Nw==	https://codeupcrc.github.io/?key=1380	HTTP methods - {@link #GET}, {@link #HEAD}, {@link #PUT} and {@link #DELETE}. ?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY4MTA1OQ==	https://codeupcrc.github.io/?key=1385	complete the java doc	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY3OTIyMg==	https://codeupcrc.github.io/?key=1401	Nit: detectMetricAnomalies -> detectedMetricAnomalies?	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUzNjgyNA==	https://codeupcrc.github.io/?key=1402	Nit: Can we use singular names in config -- i.e. SLOW_BROKERS_XXX -> SLOW_BROKER_XXX?	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2ODg2MA==	https://codeupcrc.github.io/?key=1411	This and the previous method seem identical except for the input/output directories. Can we de-duplicate the logic?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ0MTY1Mw==	https://codeupcrc.github.io/?key=1413	Maybe you can refactor this logic into a different method, it makes this method quite large and I guess it might be useful elsewhere.	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0MTE2OA==	https://codeupcrc.github.io/?key=1418	Suggested change                                                                                                    @Column(name = "END_TEXT")                                                    @Column(name = "end_text")	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM0NzQ5Mw==	https://codeupcrc.github.io/?key=1419	Can we rename this to numberOfExercisesInExam	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwMjQ3MA==	https://codeupcrc.github.io/?key=1446	A little too many parens here.	Inconsistent or disrupted formatting	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIxNDg0Mg==	https://codeupcrc.github.io/?key=1443	Suggested change	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwOTcyMQ==	https://codeupcrc.github.io/?key=1442	Suggested change                                                                                                        }                                                        if (getProductionDate() > 0) {                                                        } else if (getProductionDate() > 0) {	Complex, long, or inadequate logic	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MDg3Ng==	https://codeupcrc.github.io/?key=1453	Suggested change                                                                                                                .filter(u -> u.requiresMaintenance() && null != u.getTech())                                                                .filter(u -> u.requiresMaintenance() && (null != u.getTech()))	Inconsistent or disrupted formatting	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc0Mjg4NQ==	https://codeupcrc.github.io/?key=1463	Add javadoc description	Incomplete or inadequate code documentation	Annotation	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3NjE4Mg==	https://codeupcrc.github.io/?key=1476	This is not necessarily AKV user principal ID. Please align the docs with ODBC connection property documentation.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1OTE2Mw==	https://codeupcrc.github.io/?key=1487	Bracket should be on the next line	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAxNDY2OA==	https://codeupcrc.github.io/?key=1484	Just asking, wouldn't this be better as a static constant, instead of a local constant?	Missing constant usage	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU0MDU5Ng==	https://codeupcrc.github.io/?key=1497	Suggested change                                                                                                    public static final Name CORE_GAMEPLAY_MODULE = new Name("coresamplegameplay");                                                    public static final Name CORE_GAMEPLAY_MODULE = new Name("buildersamplegameplay");	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwNjE4OA==	https://codeupcrc.github.io/?key=1517	we can compute  started + timeoutSeconds * 1000 here (in both methods)	Complex, long, or inadequate logic	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY4OTc1Mg==	https://codeupcrc.github.io/?key=1690	Suggested change                                                                                                            String text = ((String)value).trim();                                                            String text = ((String)value).trim().toLower();                                                            if ("true".equals(text)) {	Complex, long, or inadequate logic	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYxOTM0MA==	https://codeupcrc.github.io/?key=1694	nit: add new line.	Inconsistent or disrupted formatting	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5NTU0OA==	https://codeupcrc.github.io/?key=1720	Add a short javadoc to this method including that it configure a Sandbox feature.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc5OTkzOQ==	https://codeupcrc.github.io/?key=1724	Think you may have intended to have the below comment here too, or only here since it's the first occurrence	Incomplete or inadequate code documentation	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1NDM3NA==	https://codeupcrc.github.io/?key=1732	Can you make the link <a href ...	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEwMDY2OA==	https://codeupcrc.github.io/?key=1737	It could may be possible to use peek method to putt all the actions perform upon the userData to update into one place and then collect it in a list in order to save it ? it would be more compact and more functional.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk4NTYwMw==	https://codeupcrc.github.io/?key=1741	Is this necessary given that super.getDependencies does the same?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA1ODgzMg==	https://codeupcrc.github.io/?key=1751	This looks like a candidate for finest, not fine. Also when constructing a message in log levels lower than info, please use lambda: LOGGER.finest(() -> "..."  + msg); to avoid string concatenation on every single byte buffer received	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MzE0Mg==	https://codeupcrc.github.io/?key=1753	I know it was like this but since you are touching it, could you please rename to timeStr to follow Java standard?	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2NzQyOA==	https://codeupcrc.github.io/?key=1754	I missed the whitespaces :(                         Suggested change                                                                                                        LdapUser ldapUser = (LdapUser) req.getSession().                getAttribute(LdapUserPlugin.getSessionAttrName(ldapUserInstance));                                                        LdapUser ldapUser = (LdapUser) req.getSession().getAttribute(LdapUserPlugin.getSessionAttrName(ldapUserInstance));	Inconsistent or disrupted formatting	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzAxOA==	https://codeupcrc.github.io/?key=1759	Should this test be named ..._jobNotCreated rather than ..._reportValidationError?	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MTk4Mg==	https://codeupcrc.github.io/?key=1762	So this is the name of an environment variable whose value is a comma-separated list of environment variable names? That's far from obvious. At the very least, please include a Javadoc comment explaining that.	Incomplete or inadequate code documentation	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyMTc3NA==	https://codeupcrc.github.io/?key=1772	remove the Db and name attributes from the annotation	Bad identifier	Class	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY2NjcxOA==	https://codeupcrc.github.io/?key=1770	The value of AES_SECRET is not used. It looks like it should be removed.	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg0ODgzNw==	https://codeupcrc.github.io/?key=1803	I think we may want to provide a different message if new duplicates appear vs when problems are fixed, or mention here that it's dangerous to have duplicate classes on the classpath and explain why it's worth spending time to fix. Otherwise I think folks will see "run X to update locks" and they'll ./X.	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njc0Mjc0Nw==	https://codeupcrc.github.io/?key=1815	Suggested change                                                                                                  // TODO: Some vanilla registry types are not patched yet, add this check to avoid crash                                                  // TODO: Some vanilla registry types are not patched yet, this check is added to avoid a crash	Incomplete or inadequate code documentation	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzM0MA==	https://codeupcrc.github.io/?key=1817	No separation between doc comments and the class.                         Suggested change	Inconsistent or disrupted formatting	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMzQ1MA==	https://codeupcrc.github.io/?key=1818	Same for the other lines                         Suggested change                                                                                                  * <p>This event is not Cancelable.</p>                                                  * <p>This event is not cancellable.</p>	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzkxNzU5Nw==	https://codeupcrc.github.io/?key=1829	Minor point: this comment seems to be floating in space a bit	Incomplete or inadequate code documentation	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcxNjEzMA==	https://codeupcrc.github.io/?key=1838	This descriptor is unused, right?	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTcyMjU3Nw==	https://codeupcrc.github.io/?key=1839	Please return an unmodifiable List here (or even an Iterable<Issue>). We rarely use arrays in the codebase. You can write Collections.unmodifiableList(Arrays.asList(...))	Complex, long, or inadequate logic	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg1MTIxMg==	https://codeupcrc.github.io/?key=1846	Would be more pretty to wrtie PsseVersion.isSupported(rev) or maybe a PsseVersion.checkVersion(rev) method	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5NTAwMg==	https://codeupcrc.github.io/?key=1866	inline throws	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0NDYzMg==	https://codeupcrc.github.io/?key=1860	Method is not on his method call ordering position	Inconsistent or disrupted formatting	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzODQ4NA==	https://codeupcrc.github.io/?key=1872	why can we short circuit for non-structs?  is it because there will never be any subfields?  I think the shortcircuiting is more confusing.	Complex, long, or inadequate logic	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzA2NQ==	https://codeupcrc.github.io/?key=1878	I think a better way to write this method is:         protected void addResponseCookie(ExternalContext externalContext) {             final boolean secure = ((HttpServletRequest) externalContext.getRequest()).isSecure();             Map<String, Object> map;             if (secure) {                 map = new HashMap<>(2);                 map.put("secure", secure);                 map.put("sameSite", "Strict");             }             else {                 map = Collections.emptyMap();             }             externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, "true", map);         } I also future proofed it by adding sameSite=Strict even though JSF and Servlet spec does not support it yet it hopefully will in the future as this is becoming a requirement of most browsers.	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMyMDY1OA==	https://codeupcrc.github.io/?key=1894	This javadoc will be the title of the section so maybe just "User interface" or "UI configuration" would be better.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkxMjk1Nw==	https://codeupcrc.github.io/?key=1923	we need either to make it consistent with the above constructor or open a separate PR to swap the parameters of the above constructor, wdyt? (the later would be breaking between RC1 and RC2, but probably a more meaningful order)	Complex, long, or inadequate logic	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwNjcxNw==	https://codeupcrc.github.io/?key=1930	Should probably be getDefaultCodecRegistry	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY2OTI3Mw==	https://codeupcrc.github.io/?key=1934	Suggested change                                                                                                     * @param callback callback used when the the keys were fetched or the call failed. The callback                                                     * @param callback callback used when the keys were fetched or the call failed. The callback	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU4NzQ3OQ==	https://codeupcrc.github.io/?key=1936	instead of this conditional you coul use the traversal api. It would yield cleaner, more concise code.	Complex, long, or inadequate logic	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQzODUwNQ==	https://codeupcrc.github.io/?key=1935	please rename module_uuid to assembly_uuid	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3OTY4Ng==	https://codeupcrc.github.io/?key=1945	Let's rename it to DEFAULT_TIMESTAMP_FUNCTION	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc1NzcxOA==	https://codeupcrc.github.io/?key=1944	Please use AssertJ	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUzMTYzOA==	https://codeupcrc.github.io/?key=1943	remove qualified name	Unnecessary Code	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk4NDI4OQ==	https://codeupcrc.github.io/?key=1942	just cosmetic/convention changes (empty lines): FallbackMethod fallbackMethod = FallbackMethod             .create("fallbackMethod", testMethod, new Object[]{"test", "test"}, target);  String fallback = fallbackMethod.fallback(new IllegalStateException("err");   assertThat(fallback)).isEqualTo("recovered-IllegalStateException");	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA==	https://codeupcrc.github.io/?key=1957	update.getUpdatedObject().getValuesForAttribute(AttributeType.MNT_BY); is a bit cleaner?	Complex, long, or inadequate logic	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNTI5Ng==	https://codeupcrc.github.io/?key=1963	Suggested change                                                                                                        byte[] opReturnOutput = BtcTransactionFormatUtils.extractOpReturnData(btcTx);                                                        byte[] opReturnOutputData = BtcTransactionFormatUtils.extractOpReturnData(btcTx);	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwODY0Nw==	https://codeupcrc.github.io/?key=1971	Reduce this whole method to:  public Command revertUnsavedChangesBeforeExitCommand(final Command onCompleted)    {       return () -> handleUnsavedChangesBeforeExit(new ArrayList<>(), onCompleted);    }	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjAzNA==	https://codeupcrc.github.io/?key=1970	IMHO, a more idiomatic way of specifying this is JavaScript would be this.activeColumn || "".	Incomplete or inadequate code documentation	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjQzNg==	https://codeupcrc.github.io/?key=1985	Remove this newline	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjM1OTE1MQ==	https://codeupcrc.github.io/?key=1984	You could probably just make this reverse() + limit + forEach(buildBox)	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzY1MDIwNA==	https://codeupcrc.github.io/?key=1991	maxListSize	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjEyMTMxMg==	https://codeupcrc.github.io/?key=1994	Revert this change please.	Inconsistent or disrupted formatting	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzMzI0MQ==	https://codeupcrc.github.io/?key=2008	Specifies beans that won't be scanned in the GlobalTransactionScanner	Incomplete or inadequate code documentation	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY5MjIzNQ==	https://codeupcrc.github.io/?key=2021	We usually don't include annotations like this. It should be okay for the warning to be there.	Incomplete or inadequate code documentation	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4NzU4Ng==	https://codeupcrc.github.io/?key=2026	This was an unnecessary line change.                         Suggested change                                                                                                  return join ? "join " + strings.toString(e, debug)                                                   +(delimiter != null ? " with "                                                   + delimiter.toString(e, debug) : "")                                                   : ((regex ? "regex " : "")                                                   +"split " + strings.toString(e, debug)                                                   + (delimiter != null ? " at "                                                   + delimiter.toString(e, debug) : ""));                                                  return join ? "join " + strings.toString(e, debug) +(delimiter != null ? " with " + delimiter.toString(e, debug) : "") : ((regex ? "regex " : "") +"split " + strings.toString(e, debug) + (delimiter != null ? " at " + delimiter.toString(e, debug) : ""));	Inconsistent or disrupted formatting	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyMTgxMQ==	https://codeupcrc.github.io/?key=2033	The signature should likely be PropertySheetTask<T extends AbstractNode>. See the comment on computePropertyValue for more details.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyNTQzOQ==	https://codeupcrc.github.io/?key=2038	getSlots() seem rather un-intuitive. Think that name could be improved.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3Mzg4MQ==	https://codeupcrc.github.io/?key=2049	Do we need to update this right now and does it need to go from 2017 - 2020 as a combination of the original SdlSession and SdlSession2	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMxMjA5OQ==	https://codeupcrc.github.io/?key=2050	For all Methods in this class, to be consistent, will you add a space before { to look like:  public void setStabilityControlsStatus(StabilityControlsStatus stabilityControlsStatus) {	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ2Nzk3MQ==	https://codeupcrc.github.io/?key=2055	The test about hasSemantic() is useful for checks that extends IssuableSubscriptionVisitor. But because AbstractMethodDetection already do this test, we don't need it.	Unnecessary Code	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTExMDU3Ng==	https://codeupcrc.github.io/?key=2053	Looks like my suggestion was not that elegant. For me it will be more readable to use lambda.                         Suggested change                                                                                                        ((Predicate<Tree>) ConstantsShouldBeStaticFinalCheck::isIgnoredKind).or(ConstantsShouldBeStaticFinalCheck::isThisOrSuper));                                                        (tree -> isIgnoredKind(tree) || isThisOrSuper(tree)));	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjU4OA==	https://codeupcrc.github.io/?key=2065	Remove this?	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM0Mjc2OA==	https://codeupcrc.github.io/?key=2064	afaik you can just do SpliceUnitTest.rowContainsQuery(levels, query, "rows=10","MergeJoin"); which does the try/createStatement for you	Complex, long, or inadequate logic	Try-Catch	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQwMDc2NQ==	https://codeupcrc.github.io/?key=2071	The constant here should be shoved into the related (or new) Constants nested class.	Missing constant usage	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzY1Nw==	https://codeupcrc.github.io/?key=2080	Suggested change                                                                                                        Builder setArgument(@Nullable String string);                                                        Builder setArguments(@Nullable String string);                                 Like the above thought, probably want to update this builder function to be plural rather than singular	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyNjg1Nw==	https://codeupcrc.github.io/?key=2074	Unused import	Unnecessary Code	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjQ5Mw==	https://codeupcrc.github.io/?key=2094	from the request message	Inadequate logging and monitoring	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM2NDU1Ng==	https://codeupcrc.github.io/?key=2104	This looks very crude for info level. Is it some left over from debugging?	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzgyNTQ3OA==	https://codeupcrc.github.io/?key=2107	could you please rename it?	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg3NjA2OQ==	https://codeupcrc.github.io/?key=2105	Were these imports missing in this class? I don't see you add their usage, maybe they are redundant?	Unnecessary Code	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNTk3OA==	https://codeupcrc.github.io/?key=2163	It would be better to declare this Strings as constants.	Missing constant usage	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQxMDQ4MQ==	https://codeupcrc.github.io/?key=2171	2 questions:  How are the changes in this file related to the title "NPE during producting flow dump"? What benefits do these changes bring? IMHO, 2 iterators instead of an index are neither shorter nor clearer.	Complex, long, or inadequate logic	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcwMDUwNg==	https://codeupcrc.github.io/?key=2180	why ReplyWorkflowContext?  Looks like a comment would be helpful here.	Incomplete or inadequate code documentation	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDE2Mw==	https://codeupcrc.github.io/?key=2179	We already have constants for some defaults in this file. I would convert these to constants as well.	Missing constant usage	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MTY4Nw==	https://codeupcrc.github.io/?key=2202	Code duplication	Unnecessary Code	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQyNjQ4Mg==	https://codeupcrc.github.io/?key=2204	spacing is a bit off here.	Inconsistent or disrupted formatting	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMzM5Mg==	https://codeupcrc.github.io/?key=2203	Undo wildcard import.	Complex, long, or inadequate logic	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY5MTcwMA==	https://codeupcrc.github.io/?key=2209	I'm wondering why this method call always passes ignoreAttemptFailure=true (sorry, a bit too difficult for me 😅.) Could I ask you the followings?  Add a comment for each case about why target attempt is expected to fail 2. If possible, make this method call pass attemptShouldFail or something deterministic instead of  ignoreAttemptFailure (probably related to https://github.com/treasure-data/digdag/pull/1409/files#r435692688)	Incomplete or inadequate code documentation	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyNzA3OTUwNg==	https://codeupcrc.github.io/?key=2211	Our code style is to name things in camel case where only the first letter is capitalized, including acronyms, so write this as getJsonPointer	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzM1MDM5MQ==	https://codeupcrc.github.io/?key=2212	use simple concatenation. format makes it just obscure. Same goes to below places like that:         testRow(rowDecoder, generateRecord(initialSchema, Arrays.asList(3, format("string-%s", 3))), 1);         testRow(rowDecoder, generateRecord(evolvedSchema, Arrays.asList(4, format("string-%s", 4), 4L)), 2);         testRow(rowDecoder, generateRecord(evolvedSchema, Arrays.asList(5, format("string-%s", 5), null)), 2);	Wrong, missing, or inadequate string expression or literal	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNDc5Ng==	https://codeupcrc.github.io/?key=2235	is node in this line referring to the input node or to nodes generally? The given text isn't clear.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI2Njk3NQ==	https://codeupcrc.github.io/?key=2241	You shouldn't need this throw, the fact that the repoObjLoader returns a work should trigger the expected exception	Unnecessary Code	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ5MTA1Mw==	https://codeupcrc.github.io/?key=2240	you can use StringUtils.isBlank in place of these two checks (the apache commons lang3 version)	Complex, long, or inadequate logic	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMyMTk3MQ==	https://codeupcrc.github.io/?key=2238	this method isn't used	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3NzU1Ng==	https://codeupcrc.github.io/?key=2244	This is a new class that uses the canonicalization of the LSRV part of a locale identifier to verify correctness of the algorithm and test data.	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAyMzYwNw==	https://codeupcrc.github.io/?key=2254	Suggested change                                                                                                     */                                                     * @see #addSizeChangeListener(ComponentEventListener<SizeChangeEvent<?>>)                                                     */	Incomplete or inadequate code documentation	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyMjU1NQ==	https://codeupcrc.github.io/?key=2251	unused method in class that is also a duplicate of the one in the server package.	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg1MjAwMA==	https://codeupcrc.github.io/?key=2263	This should be deprecated	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3OTQwNA==	https://codeupcrc.github.io/?key=2264	if (	Inconsistent or disrupted formatting	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5MDIzMA==	https://codeupcrc.github.io/?key=2273	Questionable comment	Incomplete or inadequate code documentation	Loop	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA4MDM2MQ==	https://codeupcrc.github.io/?key=2281	it can be inlined	Unnecessary Code	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc4NzkwNA==	https://codeupcrc.github.io/?key=2287	not supported sounds a bit better than "unsupported"	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc4ODQwMg==	https://codeupcrc.github.io/?key=2307	This should also say 'or {@code null} if the operation has no such parameter'.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTYyOTEwMg==	https://codeupcrc.github.io/?key=2317	Suggested change                                                                                                                    " will be used for the signing.");                                                                    " will be allowed for the signing.");	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzMxMzQyMQ==	https://codeupcrc.github.io/?key=2320	Do we need extra lines?	Inconsistent or disrupted formatting	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNjc1MQ==	https://codeupcrc.github.io/?key=2337	In my opinion, we do not need this log. WDYT?	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxOTk1Nw==	https://codeupcrc.github.io/?key=2119	add a comment that explain the skipped char on windows system	Incomplete or inadequate code documentation	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY3NjMwNw==	https://codeupcrc.github.io/?key=2130	Pls use the assertThatThrownBy-pattern to be consistent with other tests	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjY1Mjc3OA==	https://codeupcrc.github.io/?key=2123	Suggested change                                                                                                    assertThat(selectedAndClaimedTasks.stream().map(Task::getOwner))                                                    assertThat(selectedAndClaimedTasks)                                                        .extracting(Task::getOwner)	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDc3Nw==	https://codeupcrc.github.io/?key=2127	Cancels a task. Cancellation means a task is obsolete from a business perspective an does not need to be completed anymore.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc5MTE2NQ==	https://codeupcrc.github.io/?key=2133	Should be studentRows here.	Bad identifier	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU3MzIyMQ==	https://codeupcrc.github.io/?key=2140	remove this line. Typo + duplicate from the one below	Unnecessary Code	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkyNjA5Nw==	https://codeupcrc.github.io/?key=2152	Suggested change                                                                                                        if (null == title) {                                                        if (title == null) {	Inconsistent or disrupted formatting	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwMjc1OQ==	https://codeupcrc.github.io/?key=2148	This could use the InfoItemsPage#emptyPage method, and to improve readability, add brackets and place the return in the next line.                         Suggested change                                                                                                            if (ajaxJson.getObject("continuationContents") == null) return new InfoItemsPage<>(collector, null);                                                            if (ajaxJson.getObject("continuationContents") == null) {                                                                return InfoItemsPage.emptyPage();                                                            }	Inconsistent or disrupted formatting	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MzEzNA==	https://codeupcrc.github.io/?key=2318	Shall we add a colon before the parameters?	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MDE4Mw==	https://codeupcrc.github.io/?key=2325	format -add method description	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM0ODkyNA==	https://codeupcrc.github.io/?key=2346	let's use requiredAttributes for consistency. We are following that in IDP, APP etc.	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjgzMTU0Nw==	https://codeupcrc.github.io/?key=2348	Space after comman.. Fix similar places.	Inconsistent or disrupted formatting	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTY4MTc3NQ==	https://codeupcrc.github.io/?key=2350	I feel it would be better to include what we expected to happen here. "Authentication request was not initiated after logout from sample. Possible logout failure."	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTI5Ng==	https://codeupcrc.github.io/?key=2359	Unify the variable names txCancel and jpaTransactionCancel.	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk0MjAyOA==	https://codeupcrc.github.io/?key=2365	@kokodyn iterable, not iterator :) same with the test name	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc5MDIzNw==	https://codeupcrc.github.io/?key=2376	Rename these to startWarehouseIdForShard and totalWarehousesAcrossShards	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2NTk2OTgzMQ==	https://codeupcrc.github.io/?key=2382	AppParameter is misleading, not just about the target app. InputVector would be closer to what it is.	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkyMzYzMA==	https://codeupcrc.github.io/?key=2387	This seems to be done	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM4NjgxMg==	https://codeupcrc.github.io/?key=2400	path="" is redundant	Unnecessary Code	Annotation	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY1MjgwMg==	https://codeupcrc.github.io/?key=2393	Could you please add some comment or rename the load and set methods so we better know what they are doing. For future maintenance.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NTU2NA==	https://codeupcrc.github.io/?key=236	inferrable type informations                         Suggested change                                                                                                            Set<String> charInstructions = new TreeSet<>(Arrays.<String>asList(new String[]{"apply-templates", // NOI18N                                                            Set<String> charInstructions = new TreeSet<>(Arrays.asList(new String[]{"apply-templates", // NOI18N                                 strictly speaking the array creation is not needed as well	Unnecessary Code	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzcyNjI3NQ==	https://codeupcrc.github.io/?key=247	New line indent is 2. Here second line of a long line is 4.	Inconsistent or disrupted formatting	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQzNDA5NQ==	https://codeupcrc.github.io/?key=257	nit:                         Suggested change                                                                                                  private static FileEncryptionProperties getUniformEncryptionEncryptionProperties() {                                                  private static FileEncryptionProperties getUniformEncryptionProperties() {	Bad identifier	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ5NjkxOQ==	https://codeupcrc.github.io/?key=267	log instead	Inadequate logging and monitoring	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY0OTUxMg==	https://codeupcrc.github.io/?key=266	nit: static import assertFalse() like you've done for assertNotNull()	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxODAyNg==	https://codeupcrc.github.io/?key=280	Suggested change                                                                                                    protected static List<String> fooFieldNames =  new ArrayList<>();                                                    protected static List<String> fooFieldNames = new ArrayList<>();	Inconsistent or disrupted formatting	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTAwNTcyNw==	https://codeupcrc.github.io/?key=293	Should this be ContainerLocation or something? HostLocality sounds wrong because the host doesn't have a location, it is the location.	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwOTA3OA==	https://codeupcrc.github.io/?key=294	{@link JobModel}	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3OTU1NQ==	https://codeupcrc.github.io/?key=307	There should be a blank line here.	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAzOTQ1NA==	https://codeupcrc.github.io/?key=319	nit: receive -> received ; And add  the log to indicate the message is ignored will be helpful Also can you show the log after you added remote? Is it an Ip address? Thanks	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUzMjE0MQ==	https://codeupcrc.github.io/?key=325	What's the different between this and testConstraintSolverForceBacktrack	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQ1NTAzMA==	https://codeupcrc.github.io/?key=321	What does the comment mean? Or can it be removed?	Incomplete or inadequate code documentation	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDY0NjgxOA==	https://codeupcrc.github.io/?key=478	Why does findByEmailAddressAndProviderConfigId(...) return a List? Shouldn't it be an optional? I think what we want is a findByEmailAddressInAndProviderConfigId(Collection<String> emailAddresses, Long providerConfigId). (Note the "In" in the method name; this will allow us to get all of the relevant relations in a single query).	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQxOTAwNA==	https://codeupcrc.github.io/?key=482	I don't like that this is called "collectCodeLocationNames" when it really "creates" code location names.	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2MTM0MQ==	https://codeupcrc.github.io/?key=490	I hope to god the next Eclipse version fixes this idiotic code formatting bug...	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTI2MQ==	https://codeupcrc.github.io/?key=493	Suggested change                                                                                                    }                                                    public void remove() {                                                    }                                                                                                        public void remove() {	Inconsistent or disrupted formatting	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEyOTQxOA==	https://codeupcrc.github.io/?key=500	Should add some minimal documentation here	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA==	https://codeupcrc.github.io/?key=508	Maybe we can call these arguments replyDelay, I think it'd be clearer	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY4NzY1MA==	https://codeupcrc.github.io/?key=509	Suggested change                                                                                                          .name("broker_process_startup_metric")                                                          .name("broker_start_step_latency")	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA4ODUyMQ==	https://codeupcrc.github.io/?key=536	this shouldn't come back, it's being set lower now (line 127)	Unnecessary Code	Loop	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIxMzQ4Mw==	https://codeupcrc.github.io/?key=535	This method actually returns the Requirements class, not the annotation, so better call it getArtifactRequirements()	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxNTI4NQ==	https://codeupcrc.github.io/?key=543	nit: JoinerConfig.JOIN_KEYS	Complex, long, or inadequate logic	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE0MjA5MQ==	https://codeupcrc.github.io/?key=558	This is why property descriptions must start with a verb in the singular tense.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1Mjc2OQ==	https://codeupcrc.github.io/?key=564	extract this getHookPhasesForCurrentStepPhase(hookToBeExecuted, hookPhasesForCurrentStepPhase) to a variable	Complex, long, or inadequate logic	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MTg4Mw==	https://codeupcrc.github.io/?key=573	If I'm not mistaken the parameters have changed but the general logic behind this statement has not correct?  I ask because currently in the test environment this is logging every second and causing logs to fill up quite a bit. Could this be changed to a debug level?	Inadequate logging and monitoring	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MjM2Mw==	https://codeupcrc.github.io/?key=574	Same as above, this is currently logging every second in test.  Can this be changed to debug?	Inadequate logging and monitoring	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTgxNDkyNA==	https://codeupcrc.github.io/?key=570	Would you mind applying this suggestion?                         Suggested change                                                                                                   * @param columnLength specifies the column length {@link Optional<Integer>}                                                   * @param columnScale specifies the column scale {@link Optional<Integer>}                                                   * @param columnLength specifies the column length {@link Optional<Integer>}, for numeric types this represents the total number of digits that can be stored                                                   * @param columnScale specifies the column scale {@link Optional<Integer>}, for numeric types this represents how many of the total digits (see `columnLength`) are to the right of the decimal point	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0MDI5NA==	https://codeupcrc.github.io/?key=865	Would a log.warn make sense here?	Inadequate logging and monitoring	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY1MjYxNw==	https://codeupcrc.github.io/?key=876	Suggested change                                                                                                   * @param blockEntity  entity the block entity of the block that was going to be broken, can be {@code null}                                                   * @param blockEntity the block entity of the block that was going to be broken, can be {@code null}	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc0NjI1Mg==	https://codeupcrc.github.io/?key=899	Suggested change                                                                                                      CompletableFuture<String> errorFuture = new CompletableFuture<>();                                                      errorFuture.completeExceptionally(new IllegalArgumentException("Map name is not a generated map"));                                                      return errorFuture;                                                      return CompletableFuture.failedFuture(new IllegalArgumentException("Map name is not a generated map"));	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI1MDc1OA==	https://codeupcrc.github.io/?key=922	Lets add why we do this? (something like: this is required because we trust the server to tell us which campaigns can be re-impressed to honor frequency limits)?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MDIxNQ==	https://codeupcrc.github.io/?key=920	We might need some clarity here. The javadoc gives the impression that INSTANCE_ID_TOKEN can be fetched from FIS SDK, which is incorrect. We can explicitly call out INSTANCE_ID_TOKEN is replaced by  installation auth token fetched from FIS SDK.	Incomplete or inadequate code documentation	Annotation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYyNzM4Mw==	https://codeupcrc.github.io/?key=926	typo - and	Incomplete or inadequate code documentation	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ5NjIxNA==	https://codeupcrc.github.io/?key=930	Can you be more specific about the usage of this class? It should mention log4j, Vertx context, Vertx vertx local data.	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYyODIyMg==	https://codeupcrc.github.io/?key=931	Taking a value out of a JWT token without validating the token can cause a security issue because anyone can spoof it. Such a value must be handled with caution and care. I suggest to rename the methods to draw developer attention to the missing validation:  rename getTenant() to getTenantWithoutValidation() rename getUsername() to getUsernameWithoutValidation() rename getUserId() to getUserIdWithoutValidation() rename getFieldFromToken(String) to getFieldFromTokenWithoutValidation(String)	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE0MzgwMw==	https://codeupcrc.github.io/?key=935	It needs more detailed explanation but we can wait for next PR.	Incomplete or inadequate code documentation	Class	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg5NDkzMQ==	https://codeupcrc.github.io/?key=945	To make the controller method a bit explicit, I would recommend to create a controllerUtil class and move the private methods there.	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwMTg1OA==	https://codeupcrc.github.io/?key=958	This seem not used later.	Unnecessary Code	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NDcyNg==	https://codeupcrc.github.io/?key=964	Indentation	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2NzYwNw==	https://codeupcrc.github.io/?key=976	This change isn't much of an improvement, as either could be true. Given that GT doesn't necessarily support the full set of expressions, this distinction is relevant, because the invalid and not supported have different fixes - and invalid expression is user error (most likely a misspelling), and should be simple to fix, whereas an expression that is not supported means they need to upgrade (or wait for) a version of geotools that supports the expression. Unfortunately I don't think there's much we can do about this - even if we maintained a list of expressions that GT didn't yet support, it would inevitably become outdated. Perhaps a more descriptive error message? Something like: Expression \"" + name + "\" invalid. It may be misspelled or not supported by this implementation"	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk2MjU2OQ==	https://codeupcrc.github.io/?key=1002	How about getElementsSorted() --> getSortedElements()?	Bad identifier	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQwNzQ3Mw==	https://codeupcrc.github.io/?key=1012	This block reads quite confusing now. consider flipping it.. if (results.getJobComplete() && results.getSchema() != null) { schema = Schema.fromPb(results.getSchema()); // Your logic below for numRows, numDml... } else { JobId jobId = .... .... }	Complex, long, or inadequate logic	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU1MDk0NA==	https://codeupcrc.github.io/?key=1072	Suggested change                                                                                                                        String.format("the '%1$s' configuration is required to access locally mounted file systems. Configure a valid '%1$s' property to access this server",                                                                        String.format("Configure a valid value for '%s' property for this server to access the filesystem",	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc4NDIyOQ==	https://codeupcrc.github.io/?key=1074	commented code	Unnecessary Code	Try-Catch	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MzAzMQ==	https://codeupcrc.github.io/?key=1075	Bad formatting.	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMwNzc3OQ==	https://codeupcrc.github.io/?key=1087	BTW, what is the point of this condition? Unconditional StringUtils.appendTwoDigits(output, hours) should produce the same result, or I'm missing something?	Unnecessary Code	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0OTg0OA==	https://codeupcrc.github.io/?key=1083	This import should be removed.	Unnecessary Code	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU1OTM1Ng==	https://codeupcrc.github.io/?key=1089	Why a LinkedList is used here and another constructor stores a passed ArrayList? If different implementations really behave better, it should be documented somehow in comments.	Complex, long, or inadequate logic	Operation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5MDUyMw==	https://codeupcrc.github.io/?key=1093	clean up comments	Incomplete or inadequate code documentation	Variable	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzA5NDI5MA==	https://codeupcrc.github.io/?key=1108	This sort can be removed since it's already sorted above.	Unnecessary Code	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgzNjQ1OA==	https://codeupcrc.github.io/?key=1107	Nit:                         Suggested change                                                                                                    void verifyEntityTypeMigrationInValidEntities() throws Exception {                                                    void verifyEntityTypeMigrationInvalidEntities() throws Exception {	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc1Mjk1OA==	https://codeupcrc.github.io/?key=1110	nit: Recommend always using assert4j assertThat() for cleaner approach, consistency with other code and ability to chain	Complex, long, or inadequate logic	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzNjg1OA==	https://codeupcrc.github.io/?key=1113	Should we should also add @Deprecated here?	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxOTAxNw==	https://codeupcrc.github.io/?key=1115	Minor: which is available...	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc1MDgwMg==	https://codeupcrc.github.io/?key=1118	we should say it is maximum number of reconnection be more clear here - for example if it is set to 2 then it tries to connect 3 times (i.e. reconnect 2 times).	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk0NzIyMg==	https://codeupcrc.github.io/?key=1119	why not "insert, delete or update" (alternatively, "insertion, deletion or updating")	Incomplete or inadequate code documentation	Interface	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0NjczNw==	https://codeupcrc.github.io/?key=1135	should we log this? just to make investigation easier	Inadequate logging and monitoring	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxODY0NA==	https://codeupcrc.github.io/?key=1149	Can't	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTcwMDU1NA==	https://codeupcrc.github.io/?key=1152	rename to BftConfigOptions	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcyNzY0Mw==	https://codeupcrc.github.io/?key=1162	removal candidate?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExODQwMg==	https://codeupcrc.github.io/?key=1183	We should probably rephrase this to talk about the "alias"	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMDQ0MQ==	https://codeupcrc.github.io/?key=1187	For consistency, better use the same error message as Status Bar plugin                         Suggested change                                                                                                        call.error("The iconColor string was not able to be parsed.  Please provide a valid string hexidecimal color code.", ex);                                                        call.error("Invalid color provided. Must be a hex string (ex: #ff0000");	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAxNDY5OQ==	https://codeupcrc.github.io/?key=1192	reindexing datasets may not actually be needed here. (based on the instances where it is called ManageTemplates, Guestbook, etc.)	Unnecessary Code	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY2MjU3NDMyNw==	https://codeupcrc.github.io/?key=1189	Same. Delete or set to fine.	Inadequate logging and monitoring	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ2OA==	https://codeupcrc.github.io/?key=1205	authToken instead of token	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTAzOA==	https://codeupcrc.github.io/?key=1203	Suggested change                                                                                                    private boolean inAppDisplayhold = false;                                                    private boolean displayPaused = false;	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU5OTg0Mw==	https://codeupcrc.github.io/?key=1204	Suggested change                                                                                                    public void setInAppDisplayhold(boolean hold) {                                                        this.inAppDisplayhold = hold;                                                        if (!hold) {                                                    public void setDisplayPaused(boolean paused) {                                                        this.displayPaused = paused;                                                        if (!paused) {	Bad identifier	Parameter	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5MDE4Mg==	https://codeupcrc.github.io/?key=1218	Unused import	Unnecessary Code	Import	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NjI0MA==	https://codeupcrc.github.io/?key=1215	Shouldn't we convert gName to tsName? I.e. removeBinding(gName + "_traversal");	Bad identifier	Parameter	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE5MDcxOQ==	https://codeupcrc.github.io/?key=1246	Suggested change                                                                                                    @Symbol("kubectl")                                                    @Symbol("kubeconfig")                                 seems more intuitive to me	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTg1NjIwMQ==	https://codeupcrc.github.io/?key=1267	@pabender @rhwood Do we have a convention for braces in try-catch structures?  I'm used to to t.he previous } catch ().. { form, but if we're going to switch over consistently. @geowar1 Is this an IDE setting that's changing these?	Inconsistent or disrupted formatting	Try-Catch	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA0ODY4NQ==	https://codeupcrc.github.io/?key=1450	Suggested change                                                                                                        BaArmor a = (BaArmor)campaign.getWarehouse().findSparePart(part -> {                                                        BaArmor a = (BaArmor) campaign.getWarehouse().findSparePart(part -> {	Inconsistent or disrupted formatting	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE5MzEzNA==	https://codeupcrc.github.io/?key=1449	Suggested change                                                                                                 * along with MekHQ.  If not, see <http://www.gnu.org/licenses/>.                                                 * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3OTMyOA==	https://codeupcrc.github.io/?key=1471	No need to deprecate this constructor anymore, because authenticationCallback works with MSAL now.	Incomplete or inadequate code documentation	Annotation	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcxOTM2MQ==	https://codeupcrc.github.io/?key=1523	@alex-fu Since we are diverging the DECISION block by so many lines of code. We can define a separate switch case for DO_WHILE task. And move common code to one function.	Complex, long, or inadequate logic	Conditional	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2MDYwOQ==	https://codeupcrc.github.io/?key=1530	This check is made a few times. Might be easier to check it in the very beginning (line 111), and do not repeat it later.	Complex, long, or inadequate logic	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0NjIzMA==	https://codeupcrc.github.io/?key=1531	this looks incorrectly indented	Inconsistent or disrupted formatting	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxNTA3MQ==	https://codeupcrc.github.io/?key=1538	Remove trailing whitespaces.	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2NDEyNQ==	https://codeupcrc.github.io/?key=1561	Could be better to have the full clientSession.newRequest()...execute() to avoid having loadCsv variable.	Unnecessary Code	Variable	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MTU5Mg==	https://codeupcrc.github.io/?key=1562	assertEquals(Boolean.TRUE, ...)	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDA5MQ==	https://codeupcrc.github.io/?key=1565	SecurityTagsProperties	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5MTM0Mg==	https://codeupcrc.github.io/?key=1577	ONE_WEEK_IN_SECONDS should be something more descriptive to what is it used. One week should be a comment instead.	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5ODU0OA==	https://codeupcrc.github.io/?key=1575	Remove empty line	Inconsistent or disrupted formatting	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI0NTEzNw==	https://codeupcrc.github.io/?key=1584	Suggested change                                                                                                  private static final String JAEGER_IP = "http://localhost";                                                  private static final String JAEGER_URL = "http://localhost";	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0OTQxNA==	https://codeupcrc.github.io/?key=1586	In all other cases you have commandNormalizer. Please make the same here as well	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==	https://codeupcrc.github.io/?key=1596	Suggested change                                                                                                                entry.getKey() + "')");                                 Wrapped line isn't need if prev suggestion is accepted.	Inconsistent or disrupted formatting	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5MzM5MQ==	https://codeupcrc.github.io/?key=1601	You are using GSON anyway and could use it for serialization here which should be much simpler – basically just: String jsonString = gson.toJson(form);	Unnecessary Code	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk2MjM4MA==	https://codeupcrc.github.io/?key=1604	external might be confusing as in the CI we are actually using localhost. Maybe we can just say "cluster url should be provided for security enabled testing"	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyNjAxMA==	https://codeupcrc.github.io/?key=1608	How about we change to "Must set at least one profile type" to avoid confusion between empty profile types and wrong profile types which we don't support?	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc2NDg4NA==	https://codeupcrc.github.io/?key=1616	suggest to use exprValue.string() in future to get rid of the static getStringValue method.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY0NTEyNw==	https://codeupcrc.github.io/?key=1623	remove unused code?	Unnecessary Code	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIyMDEzNw==	https://codeupcrc.github.io/?key=1617	The indent is changed to 2 spaces in this file and some other files?	Inconsistent or disrupted formatting	Class	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc1NTQ4Mg==	https://codeupcrc.github.io/?key=1625	Be good to do as JavaDoc.	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ1NjQzMA==	https://codeupcrc.github.io/?key=1642	Suggested change                                                                                                    @Operation(operationId = "aproveInboxItemById", summary = "Approves the discovery result by adding the thing to the registry.", responses = {                                                    @Operation(operationId = "approveInboxItemById", summary = "Approves the discovery result by adding the thing to the registry.", responses = {	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzA5NQ==	https://codeupcrc.github.io/?key=1655	Please add a comment	Incomplete or inadequate code documentation	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyOTc0Mw==	https://codeupcrc.github.io/?key=1653	Suggested change                                                                                                            if (this.toString("UTF-8").contains(eol)) {                                                            if (this.toString("UTF-8").contains(System.lineSeparator())) {	Unnecessary Code	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODk0Mw==	https://codeupcrc.github.io/?key=1662	Two questions:  Is this second constructor even needed, if it isn't even the recommended way to use this? If it is, it should not be copying all of this setting logic, but instead first calling the other constructor, and then setting the additional properties.	Unnecessary Code	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI1NTI1NQ==	https://codeupcrc.github.io/?key=1660	Suggested change	Inconsistent or disrupted formatting	Loop	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzY0NjA3MA==	https://codeupcrc.github.io/?key=1668	Typo in MissMatch	Bad identifier	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc4NTMwOA==	https://codeupcrc.github.io/?key=1683	Minor nitpick. The null check here isn't necessary since the copyFrom() methods already handle the null case. Can update this in the other usages as well.	Unnecessary Code	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NjQ4OA==	https://codeupcrc.github.io/?key=1678	I'd opt to re-throw here instead. If someone is calling encrypt I wouldn't expect it to silently fail and return a un-encrypted payload back.	Inadequate logging and monitoring	Try-Catch	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg2NjYwMQ==	https://codeupcrc.github.io/?key=1687	Perhaps it would be worth using more informative variable names here, to emphasize the role they play in the constraint definition. You should also be able to reuse the constants declared at the beginning of ConflictsWithScrutinizer.	Missing constant usage	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY4NjQyNQ==	https://codeupcrc.github.io/?key=1700	You could use  verifyZeroInteractions instead.	Complex, long, or inadequate logic	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzOTc2MQ==	https://codeupcrc.github.io/?key=1717	create/generate not get, maybe?	Bad identifier	Method	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE1MTM3NQ==	https://codeupcrc.github.io/?key=1735	To be in package org.lfenergy.operatorfabric.cards.publication.configuration.kafka to be consistent with other configuration classes	Complex, long, or inadequate logic	Package	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyNDA2OA==	https://codeupcrc.github.io/?key=1779	Import TileSourceManager	Complex, long, or inadequate logic	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxNzA0Mw==	https://codeupcrc.github.io/?key=1821	Suggested change                                                                                                 * LivingFallEvent is fired when an Entity is set to be falling.                                                 * LivingFallEvent is fired when a {@link LivingEntity} is set to be falling.	Incomplete or inadequate code documentation	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjcwODAyNw==	https://codeupcrc.github.io/?key=1871	nit: this. is redundant here	Unnecessary Code	Object	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkzOTA1Mg==	https://codeupcrc.github.io/?key=1883	ValidationErrorType? + javadoc on class level	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjg5ODUwMA==	https://codeupcrc.github.io/?key=1992	Boolean.valueOf() not necessary here:                        Suggested change                                                                                                                            rcontext.put("darkTheme", Boolean.valueOf(darkTheme));                                                                            rcontext.put("darkTheme", darkTheme);	Unnecessary Code	Call	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNjAzOQ==	https://codeupcrc.github.io/?key=2001	sourceParameter	Bad identifier	Attribute	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2OTAxNA==	https://codeupcrc.github.io/?key=2020	Add a comment indicating whether start/end are inclusive or exclusive	Incomplete or inadequate code documentation	Method	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTc2NA==	https://codeupcrc.github.io/?key=2024	IF statement should be on it's own line	Inconsistent or disrupted formatting	Conditional	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM1MDEyNA==	https://codeupcrc.github.io/?key=2022	@Name shouldn't have Is .	Wrong, missing, or inadequate string expression or literal	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTMwNTAwMA==	https://codeupcrc.github.io/?key=2046	@kostyaBoss I would keep the name as ShowConstantTbt on line 212.  Changing the name of the class is out of scope of the PR.	Bad identifier	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0OTI5Mw==	https://codeupcrc.github.io/?key=2068	list of tile/block entities with block name as key and range as value	Wrong, missing, or inadequate string expression or literal	Literal	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcxNTAzNg==	https://codeupcrc.github.io/?key=2073	Then remove it.	Unnecessary Code	Class	Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzYxNzQxNA==	https://codeupcrc.github.io/?key=2187	Do we have the String op names anywhere? If not we should figure out how to add them to the generated ops so we don't have random string constants. cc @karllessard	Missing constant usage	Literal	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5MDkxNw==	https://codeupcrc.github.io/?key=2225	Thoughts about using https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE for date formatting?	Complex, long, or inadequate logic	Call	Not Accepted
MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwNDcxOQ==	https://codeupcrc.github.io/?key=2275	Maybe declared the constructor at the top. Also I am not sure if we need a constructor here. Any problem with just private BeanPropertyFactorySwitch bpfs = new BeanPropertyFactorySwitch();	Unnecessary Code	Method	Accepted